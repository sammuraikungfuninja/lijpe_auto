
bin\Debug\basis.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800200  00000e26  00000eda  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000e26  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000002  00800200  00800200  00000eda  2**0
                  ALLOC
  3 .fuse         00000003  00820000  00820000  00000eda  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  4 .comment      00000012  00000000  00000000  00000edd  2**0
                  CONTENTS, READONLY
  5 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000ef0  2**2
                  CONTENTS, READONLY, OCTETS
  6 .debug_aranges 000000b8  00000000  00000000  00000f30  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  7 .debug_info   00000faa  00000000  00000000  00000fe8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  8 .debug_abbrev 00000d93  00000000  00000000  00001f92  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  9 .debug_line   00000a75  00000000  00000000  00002d25  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_frame  00000350  00000000  00000000  0000379c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_str    0000061b  00000000  00000000  00003aec  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_line_str 000001a0  00000000  00000000  00004107  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 72 00 	jmp	0xe4	; 0xe4 <__ctors_end>
   4:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
   8:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
   c:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  10:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  14:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  18:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  1c:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  20:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  24:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  28:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  2c:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  30:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  34:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  38:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  3c:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  40:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  44:	0c 94 11 02 	jmp	0x422	; 0x422 <__vector_17>
  48:	0c 94 39 02 	jmp	0x472	; 0x472 <__vector_18>
  4c:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  50:	0c 94 e0 01 	jmp	0x3c0	; 0x3c0 <__vector_20>
  54:	0c 94 f7 00 	jmp	0x1ee	; 0x1ee <__vector_21>
  58:	0c 94 25 01 	jmp	0x24a	; 0x24a <__vector_22>
  5c:	0c 94 88 00 	jmp	0x110	; 0x110 <__vector_23>
  60:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  64:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  68:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  6c:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  70:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  74:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  78:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  7c:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  80:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  84:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  88:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  8c:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  90:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  94:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  98:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  9c:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  a0:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  a4:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  a8:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  ac:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  b0:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  b4:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  b8:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  bc:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  c0:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  c4:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  c8:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  cc:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  d0:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  d4:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  d8:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  dc:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  e0:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_clear_bss>:
  f4:	22 e0       	ldi	r18, 0x02	; 2

000000f6 <.Loc.1>:
  f6:	a0 e0       	ldi	r26, 0x00	; 0

000000f8 <.Loc.2>:
  f8:	b2 e0       	ldi	r27, 0x02	; 2

000000fa <.Loc.3>:
  fa:	01 c0       	rjmp	.+2      	; 0xfe <.Loc.5>

000000fc <.Loc.4>:
  fc:	1d 92       	st	X+, r1

000000fe <.Loc.5>:
  fe:	a2 30       	cpi	r26, 0x02	; 2

00000100 <.Loc.6>:
 100:	b2 07       	cpc	r27, r18

00000102 <.Loc.7>:
 102:	e1 f7       	brne	.-8      	; 0xfc <.Loc.4>

00000104 <L0^A>:
 104:	0e 94 7b 04 	call	0x8f6	; 0x8f6 <main>
 108:	0c 94 11 07 	jmp	0xe22	; 0xe22 <_exit>

0000010c <__bad_interrupt>:
 10c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000110 <__vector_23>:
#include <avr/io.h>
#include <avr/interrupt.h>
#include "h_bridge.h"

ISR(TIMER0_OVF_vect)
{
 110:	1f 92       	push	r1
 112:	0f 92       	push	r0
 114:	0f b6       	in	r0, 0x3f	; 63
 116:	0f 92       	push	r0
 118:	11 24       	eor	r1, r1
 11a:	0b b6       	in	r0, 0x3b	; 59
 11c:	0f 92       	push	r0
 11e:	2f 93       	push	r18
 120:	8f 93       	push	r24
 122:	9f 93       	push	r25
 124:	ef 93       	push	r30
 126:	ff 93       	push	r31
 128:	cf 93       	push	r28
 12a:	df 93       	push	r29
 12c:	cd b7       	in	r28, 0x3d	; 61
 12e:	de b7       	in	r29, 0x3e	; 62

00000130 <.Loc.1>:
	if (OCR0A == 0 && OCR0B == 0)
 130:	87 e4       	ldi	r24, 0x47	; 71
 132:	90 e0       	ldi	r25, 0x00	; 0
 134:	fc 01       	movw	r30, r24
 136:	80 81       	ld	r24, Z

00000138 <.Loc.2>:
 138:	88 23       	and	r24, r24
 13a:	c9 f4       	brne	.+50     	; 0x16e <.L2>

0000013c <.Loc.3>:
 13c:	88 e4       	ldi	r24, 0x48	; 72
 13e:	90 e0       	ldi	r25, 0x00	; 0
 140:	fc 01       	movw	r30, r24
 142:	80 81       	ld	r24, Z

00000144 <.Loc.4>:
 144:	88 23       	and	r24, r24
 146:	99 f4       	brne	.+38     	; 0x16e <.L2>

00000148 <.Loc.5>:
	{
		PORT_RPWM &= ~(1<<PIN_RPWM);
 148:	85 e2       	ldi	r24, 0x25	; 37
 14a:	90 e0       	ldi	r25, 0x00	; 0
 14c:	fc 01       	movw	r30, r24
 14e:	20 81       	ld	r18, Z

00000150 <.Loc.6>:
 150:	85 e2       	ldi	r24, 0x25	; 37
 152:	90 e0       	ldi	r25, 0x00	; 0

00000154 <.Loc.7>:
 154:	2f 7b       	andi	r18, 0xBF	; 191
 156:	fc 01       	movw	r30, r24
 158:	20 83       	st	Z, r18

0000015a <.Loc.8>:
		PORT_LPWM &= ~(1<<PIN_LPWM);
 15a:	85 e2       	ldi	r24, 0x25	; 37
 15c:	90 e0       	ldi	r25, 0x00	; 0
 15e:	fc 01       	movw	r30, r24
 160:	20 81       	ld	r18, Z

00000162 <.Loc.9>:
 162:	85 e2       	ldi	r24, 0x25	; 37
 164:	90 e0       	ldi	r25, 0x00	; 0

00000166 <.Loc.10>:
 166:	2f 77       	andi	r18, 0x7F	; 127
 168:	fc 01       	movw	r30, r24
 16a:	20 83       	st	Z, r18

0000016c <.Loc.11>:
	else if (OCR0B != 0)
	{
		PORT_RPWM &= ~(1<<PIN_RPWM);
		PORT_LPWM |= (1<<PIN_LPWM);
	}
}
 16c:	31 c0       	rjmp	.+98     	; 0x1d0 <.L5>

0000016e <.L2>:
	else if (OCR0A != 0)
 16e:	87 e4       	ldi	r24, 0x47	; 71
 170:	90 e0       	ldi	r25, 0x00	; 0
 172:	fc 01       	movw	r30, r24
 174:	80 81       	ld	r24, Z

00000176 <.Loc.13>:
 176:	88 23       	and	r24, r24
 178:	99 f0       	breq	.+38     	; 0x1a0 <.L4>

0000017a <.Loc.14>:
		PORT_LPWM &= ~(1<<PIN_LPWM);
 17a:	85 e2       	ldi	r24, 0x25	; 37
 17c:	90 e0       	ldi	r25, 0x00	; 0
 17e:	fc 01       	movw	r30, r24
 180:	20 81       	ld	r18, Z

00000182 <.Loc.15>:
 182:	85 e2       	ldi	r24, 0x25	; 37
 184:	90 e0       	ldi	r25, 0x00	; 0

00000186 <.Loc.16>:
 186:	2f 77       	andi	r18, 0x7F	; 127
 188:	fc 01       	movw	r30, r24
 18a:	20 83       	st	Z, r18

0000018c <.Loc.17>:
		PORT_RPWM |= (1<<PIN_RPWM);
 18c:	85 e2       	ldi	r24, 0x25	; 37
 18e:	90 e0       	ldi	r25, 0x00	; 0
 190:	fc 01       	movw	r30, r24
 192:	20 81       	ld	r18, Z
 194:	85 e2       	ldi	r24, 0x25	; 37
 196:	90 e0       	ldi	r25, 0x00	; 0

00000198 <.Loc.18>:
 198:	20 64       	ori	r18, 0x40	; 64
 19a:	fc 01       	movw	r30, r24
 19c:	20 83       	st	Z, r18

0000019e <.Loc.19>:
}
 19e:	18 c0       	rjmp	.+48     	; 0x1d0 <.L5>

000001a0 <.L4>:
	else if (OCR0B != 0)
 1a0:	88 e4       	ldi	r24, 0x48	; 72
 1a2:	90 e0       	ldi	r25, 0x00	; 0
 1a4:	fc 01       	movw	r30, r24
 1a6:	80 81       	ld	r24, Z

000001a8 <.Loc.21>:
 1a8:	88 23       	and	r24, r24
 1aa:	91 f0       	breq	.+36     	; 0x1d0 <.L5>

000001ac <.Loc.22>:
		PORT_RPWM &= ~(1<<PIN_RPWM);
 1ac:	85 e2       	ldi	r24, 0x25	; 37
 1ae:	90 e0       	ldi	r25, 0x00	; 0
 1b0:	fc 01       	movw	r30, r24
 1b2:	20 81       	ld	r18, Z

000001b4 <.Loc.23>:
 1b4:	85 e2       	ldi	r24, 0x25	; 37
 1b6:	90 e0       	ldi	r25, 0x00	; 0

000001b8 <.Loc.24>:
 1b8:	2f 7b       	andi	r18, 0xBF	; 191
 1ba:	fc 01       	movw	r30, r24
 1bc:	20 83       	st	Z, r18

000001be <.Loc.25>:
		PORT_LPWM |= (1<<PIN_LPWM);
 1be:	85 e2       	ldi	r24, 0x25	; 37
 1c0:	90 e0       	ldi	r25, 0x00	; 0
 1c2:	fc 01       	movw	r30, r24
 1c4:	20 81       	ld	r18, Z
 1c6:	85 e2       	ldi	r24, 0x25	; 37
 1c8:	90 e0       	ldi	r25, 0x00	; 0

000001ca <.Loc.26>:
 1ca:	20 68       	ori	r18, 0x80	; 128
 1cc:	fc 01       	movw	r30, r24
 1ce:	20 83       	st	Z, r18

000001d0 <.L5>:
}
 1d0:	00 00       	nop
 1d2:	df 91       	pop	r29
 1d4:	cf 91       	pop	r28
 1d6:	ff 91       	pop	r31
 1d8:	ef 91       	pop	r30
 1da:	9f 91       	pop	r25
 1dc:	8f 91       	pop	r24
 1de:	2f 91       	pop	r18
 1e0:	0f 90       	pop	r0
 1e2:	0b be       	out	0x3b, r0	; 59
 1e4:	0f 90       	pop	r0
 1e6:	0f be       	out	0x3f, r0	; 63
 1e8:	0f 90       	pop	r0
 1ea:	1f 90       	pop	r1
 1ec:	18 95       	reti

000001ee <__vector_21>:

ISR(TIMER0_COMPA_vect)
{
 1ee:	1f 92       	push	r1
 1f0:	0f 92       	push	r0
 1f2:	0f b6       	in	r0, 0x3f	; 63
 1f4:	0f 92       	push	r0
 1f6:	11 24       	eor	r1, r1
 1f8:	0b b6       	in	r0, 0x3b	; 59
 1fa:	0f 92       	push	r0
 1fc:	2f 93       	push	r18
 1fe:	8f 93       	push	r24
 200:	9f 93       	push	r25
 202:	ef 93       	push	r30
 204:	ff 93       	push	r31
 206:	cf 93       	push	r28
 208:	df 93       	push	r29
 20a:	cd b7       	in	r28, 0x3d	; 61
 20c:	de b7       	in	r29, 0x3e	; 62

0000020e <.Loc.29>:
	if (OCR0A != 255)
 20e:	87 e4       	ldi	r24, 0x47	; 71
 210:	90 e0       	ldi	r25, 0x00	; 0
 212:	fc 01       	movw	r30, r24
 214:	80 81       	ld	r24, Z

00000216 <.Loc.30>:
 216:	8f 3f       	cpi	r24, 0xFF	; 255
 218:	49 f0       	breq	.+18     	; 0x22c <.L8>

0000021a <.Loc.31>:
	{
		PORT_RPWM &= ~(1<<PIN_RPWM);
 21a:	85 e2       	ldi	r24, 0x25	; 37
 21c:	90 e0       	ldi	r25, 0x00	; 0
 21e:	fc 01       	movw	r30, r24
 220:	20 81       	ld	r18, Z

00000222 <.Loc.32>:
 222:	85 e2       	ldi	r24, 0x25	; 37
 224:	90 e0       	ldi	r25, 0x00	; 0

00000226 <.Loc.33>:
 226:	2f 7b       	andi	r18, 0xBF	; 191
 228:	fc 01       	movw	r30, r24
 22a:	20 83       	st	Z, r18

0000022c <.L8>:
	}
}
 22c:	00 00       	nop
 22e:	df 91       	pop	r29
 230:	cf 91       	pop	r28
 232:	ff 91       	pop	r31
 234:	ef 91       	pop	r30
 236:	9f 91       	pop	r25
 238:	8f 91       	pop	r24
 23a:	2f 91       	pop	r18
 23c:	0f 90       	pop	r0
 23e:	0b be       	out	0x3b, r0	; 59
 240:	0f 90       	pop	r0
 242:	0f be       	out	0x3f, r0	; 63
 244:	0f 90       	pop	r0
 246:	1f 90       	pop	r1
 248:	18 95       	reti

0000024a <__vector_22>:

ISR(TIMER0_COMPB_vect)
{
 24a:	1f 92       	push	r1
 24c:	0f 92       	push	r0
 24e:	0f b6       	in	r0, 0x3f	; 63
 250:	0f 92       	push	r0
 252:	11 24       	eor	r1, r1
 254:	0b b6       	in	r0, 0x3b	; 59
 256:	0f 92       	push	r0
 258:	2f 93       	push	r18
 25a:	8f 93       	push	r24
 25c:	9f 93       	push	r25
 25e:	ef 93       	push	r30
 260:	ff 93       	push	r31
 262:	cf 93       	push	r28
 264:	df 93       	push	r29
 266:	cd b7       	in	r28, 0x3d	; 61
 268:	de b7       	in	r29, 0x3e	; 62

0000026a <.Loc.36>:
	if (OCR0B != 255)
 26a:	88 e4       	ldi	r24, 0x48	; 72
 26c:	90 e0       	ldi	r25, 0x00	; 0
 26e:	fc 01       	movw	r30, r24
 270:	80 81       	ld	r24, Z

00000272 <.Loc.37>:
 272:	8f 3f       	cpi	r24, 0xFF	; 255
 274:	49 f0       	breq	.+18     	; 0x288 <.L11>

00000276 <.Loc.38>:
	{
		PORT_LPWM &= ~(1<<PIN_LPWM);
 276:	85 e2       	ldi	r24, 0x25	; 37
 278:	90 e0       	ldi	r25, 0x00	; 0
 27a:	fc 01       	movw	r30, r24
 27c:	20 81       	ld	r18, Z

0000027e <.Loc.39>:
 27e:	85 e2       	ldi	r24, 0x25	; 37
 280:	90 e0       	ldi	r25, 0x00	; 0

00000282 <.Loc.40>:
 282:	2f 77       	andi	r18, 0x7F	; 127
 284:	fc 01       	movw	r30, r24
 286:	20 83       	st	Z, r18

00000288 <.L11>:
	}
}
 288:	00 00       	nop
 28a:	df 91       	pop	r29
 28c:	cf 91       	pop	r28
 28e:	ff 91       	pop	r31
 290:	ef 91       	pop	r30
 292:	9f 91       	pop	r25
 294:	8f 91       	pop	r24
 296:	2f 91       	pop	r18
 298:	0f 90       	pop	r0
 29a:	0b be       	out	0x3b, r0	; 59
 29c:	0f 90       	pop	r0
 29e:	0f be       	out	0x3f, r0	; 63
 2a0:	0f 90       	pop	r0
 2a2:	1f 90       	pop	r1
 2a4:	18 95       	reti

000002a6 <init_h_bridge>:

void init_h_bridge(void)
{
 2a6:	cf 93       	push	r28
 2a8:	df 93       	push	r29
 2aa:	cd b7       	in	r28, 0x3d	; 61
 2ac:	de b7       	in	r29, 0x3e	; 62

000002ae <.Loc.43>:
	// Config pins as output
	DDR_RPWM |= (1<<PIN_RPWM);
 2ae:	84 e2       	ldi	r24, 0x24	; 36
 2b0:	90 e0       	ldi	r25, 0x00	; 0
 2b2:	fc 01       	movw	r30, r24
 2b4:	20 81       	ld	r18, Z
 2b6:	84 e2       	ldi	r24, 0x24	; 36
 2b8:	90 e0       	ldi	r25, 0x00	; 0

000002ba <.Loc.44>:
 2ba:	20 64       	ori	r18, 0x40	; 64
 2bc:	fc 01       	movw	r30, r24
 2be:	20 83       	st	Z, r18

000002c0 <.Loc.45>:
	DDR_LPWM |= (1<<PIN_LPWM);
 2c0:	84 e2       	ldi	r24, 0x24	; 36
 2c2:	90 e0       	ldi	r25, 0x00	; 0
 2c4:	fc 01       	movw	r30, r24
 2c6:	20 81       	ld	r18, Z
 2c8:	84 e2       	ldi	r24, 0x24	; 36
 2ca:	90 e0       	ldi	r25, 0x00	; 0

000002cc <.Loc.46>:
 2cc:	20 68       	ori	r18, 0x80	; 128
 2ce:	fc 01       	movw	r30, r24
 2d0:	20 83       	st	Z, r18

000002d2 <.Loc.47>:

	// Output low
	PORT_RPWM &= ~(1<<PIN_RPWM);
 2d2:	85 e2       	ldi	r24, 0x25	; 37
 2d4:	90 e0       	ldi	r25, 0x00	; 0
 2d6:	fc 01       	movw	r30, r24
 2d8:	20 81       	ld	r18, Z

000002da <.Loc.48>:
 2da:	85 e2       	ldi	r24, 0x25	; 37
 2dc:	90 e0       	ldi	r25, 0x00	; 0

000002de <.Loc.49>:
 2de:	2f 7b       	andi	r18, 0xBF	; 191
 2e0:	fc 01       	movw	r30, r24
 2e2:	20 83       	st	Z, r18

000002e4 <.Loc.50>:
	PORT_LPWM &= ~(1<<PIN_LPWM);
 2e4:	85 e2       	ldi	r24, 0x25	; 37
 2e6:	90 e0       	ldi	r25, 0x00	; 0
 2e8:	fc 01       	movw	r30, r24
 2ea:	20 81       	ld	r18, Z

000002ec <.Loc.51>:
 2ec:	85 e2       	ldi	r24, 0x25	; 37
 2ee:	90 e0       	ldi	r25, 0x00	; 0

000002f0 <.Loc.52>:
 2f0:	2f 77       	andi	r18, 0x7F	; 127
 2f2:	fc 01       	movw	r30, r24
 2f4:	20 83       	st	Z, r18

000002f6 <.Loc.53>:

	// Use mode 0, clkdiv = 64
	TCCR0A = 0;
 2f6:	84 e4       	ldi	r24, 0x44	; 68
 2f8:	90 e0       	ldi	r25, 0x00	; 0

000002fa <.Loc.54>:
 2fa:	fc 01       	movw	r30, r24
 2fc:	10 82       	st	Z, r1

000002fe <.Loc.55>:
	TCCR0B = (0<<CS02) | (1<<CS01) | (1<<CS00);
 2fe:	85 e4       	ldi	r24, 0x45	; 69
 300:	90 e0       	ldi	r25, 0x00	; 0

00000302 <.Loc.56>:
 302:	23 e0       	ldi	r18, 0x03	; 3
 304:	fc 01       	movw	r30, r24
 306:	20 83       	st	Z, r18

00000308 <.Loc.57>:

	// Disable PWM output
	OCR0A = 0;
 308:	87 e4       	ldi	r24, 0x47	; 71
 30a:	90 e0       	ldi	r25, 0x00	; 0

0000030c <.Loc.58>:
 30c:	fc 01       	movw	r30, r24
 30e:	10 82       	st	Z, r1

00000310 <.Loc.59>:
	OCR0B = 0;
 310:	88 e4       	ldi	r24, 0x48	; 72
 312:	90 e0       	ldi	r25, 0x00	; 0

00000314 <.Loc.60>:
 314:	fc 01       	movw	r30, r24
 316:	10 82       	st	Z, r1

00000318 <.Loc.61>:

	// Interrupts on OCA, OCB and OVF
	TIMSK0 = (1<<OCIE0B) | (1<<OCIE0A) | (1<<TOIE0);
 318:	8e e6       	ldi	r24, 0x6E	; 110
 31a:	90 e0       	ldi	r25, 0x00	; 0

0000031c <.Loc.62>:
 31c:	27 e0       	ldi	r18, 0x07	; 7
 31e:	fc 01       	movw	r30, r24
 320:	20 83       	st	Z, r18

00000322 <.Loc.63>:

	sei();
 322:	78 94       	sei

00000324 <.Loc.64>:
}
 324:	00 00       	nop
 326:	df 91       	pop	r29
 328:	cf 91       	pop	r28
 32a:	08 95       	ret

0000032c <h_bridge_set_percentage>:

void h_bridge_set_percentage(signed char percentage)
{
 32c:	cf 93       	push	r28
 32e:	df 93       	push	r29
 330:	0f 92       	push	r0
 332:	cd b7       	in	r28, 0x3d	; 61
 334:	de b7       	in	r29, 0x3e	; 62
 336:	89 83       	std	Y+1, r24	; 0x01

00000338 <.Loc.66>:
	if (percentage >= -100 && percentage <= 100)
 338:	89 81       	ldd	r24, Y+1	; 0x01
 33a:	8c 39       	cpi	r24, 0x9C	; 156
 33c:	e4 f1       	brlt	.+120    	; 0x3b6 <.L16>

0000033e <.Loc.67>:
 33e:	89 81       	ldd	r24, Y+1	; 0x01
 340:	84 36       	cpi	r24, 0x64	; 100
 342:	09 f0       	breq	.+2      	; 0x346 <.Loc.68>

00000344 <L0^A>:
 344:	c4 f5       	brge	.+112    	; 0x3b6 <.L16>

00000346 <.Loc.68>:
	{
		if (percentage >= 0)
 346:	89 81       	ldd	r24, Y+1	; 0x01
 348:	88 23       	and	r24, r24
 34a:	dc f0       	brlt	.+54     	; 0x382 <.L15>

0000034c <.Loc.69>:
		{
			// Disable LPWM, calculate RPWM
			OCR0B = 0;
 34c:	88 e4       	ldi	r24, 0x48	; 72
 34e:	90 e0       	ldi	r25, 0x00	; 0

00000350 <.Loc.70>:
 350:	fc 01       	movw	r30, r24
 352:	10 82       	st	Z, r1

00000354 <.Loc.71>:
			OCR0A = (255*percentage)/100;
 354:	89 81       	ldd	r24, Y+1	; 0x01
 356:	08 2e       	mov	r0, r24
 358:	00 0c       	add	r0, r0
 35a:	99 0b       	sbc	r25, r25
 35c:	2f ef       	ldi	r18, 0xFF	; 255
 35e:	28 9f       	mul	r18, r24
 360:	a0 01       	movw	r20, r0
 362:	29 9f       	mul	r18, r25
 364:	50 0d       	add	r21, r0
 366:	11 24       	eor	r1, r1

00000368 <.Loc.72>:
 368:	24 e6       	ldi	r18, 0x64	; 100
 36a:	30 e0       	ldi	r19, 0x00	; 0
 36c:	ca 01       	movw	r24, r20
 36e:	b9 01       	movw	r22, r18
 370:	0e 94 24 05 	call	0xa48	; 0xa48 <__divmodhi4>
 374:	cb 01       	movw	r24, r22
 376:	9c 01       	movw	r18, r24

00000378 <.Loc.73>:
 378:	87 e4       	ldi	r24, 0x47	; 71
 37a:	90 e0       	ldi	r25, 0x00	; 0

0000037c <.Loc.74>:
 37c:	fc 01       	movw	r30, r24
 37e:	20 83       	st	Z, r18

00000380 <.Loc.75>:
			// Disable RPWM, calculate LPWM
			OCR0A = 0;
			OCR0B = (255*percentage)/-100;
		}
	}
}
 380:	1a c0       	rjmp	.+52     	; 0x3b6 <.L16>

00000382 <.L15>:
			OCR0A = 0;
 382:	87 e4       	ldi	r24, 0x47	; 71
 384:	90 e0       	ldi	r25, 0x00	; 0

00000386 <.Loc.77>:
 386:	fc 01       	movw	r30, r24
 388:	10 82       	st	Z, r1

0000038a <.Loc.78>:
			OCR0B = (255*percentage)/-100;
 38a:	89 81       	ldd	r24, Y+1	; 0x01
 38c:	08 2e       	mov	r0, r24
 38e:	00 0c       	add	r0, r0
 390:	99 0b       	sbc	r25, r25
 392:	2f ef       	ldi	r18, 0xFF	; 255
 394:	28 9f       	mul	r18, r24
 396:	a0 01       	movw	r20, r0
 398:	29 9f       	mul	r18, r25
 39a:	50 0d       	add	r21, r0
 39c:	11 24       	eor	r1, r1

0000039e <.Loc.79>:
 39e:	2c e9       	ldi	r18, 0x9C	; 156
 3a0:	3f ef       	ldi	r19, 0xFF	; 255
 3a2:	ca 01       	movw	r24, r20
 3a4:	b9 01       	movw	r22, r18
 3a6:	0e 94 24 05 	call	0xa48	; 0xa48 <__divmodhi4>
 3aa:	cb 01       	movw	r24, r22
 3ac:	9c 01       	movw	r18, r24

000003ae <.Loc.80>:
 3ae:	88 e4       	ldi	r24, 0x48	; 72
 3b0:	90 e0       	ldi	r25, 0x00	; 0

000003b2 <.Loc.81>:
 3b2:	fc 01       	movw	r30, r24
 3b4:	20 83       	st	Z, r18

000003b6 <.L16>:
}
 3b6:	00 00       	nop
 3b8:	0f 90       	pop	r0
 3ba:	df 91       	pop	r29
 3bc:	cf 91       	pop	r28
 3be:	08 95       	ret

000003c0 <__vector_20>:
#define RESET_VALUE	(65636ul-TIME_VALUE)
#define STOP_VALUE	(TIME_VALUE*0.075)
#define RANGE		(TIME_VALUE*0.025)

ISR(TIMER1_OVF_vect)
{
 3c0:	1f 92       	push	r1
 3c2:	0f 92       	push	r0
 3c4:	0f b6       	in	r0, 0x3f	; 63
 3c6:	0f 92       	push	r0
 3c8:	11 24       	eor	r1, r1
 3ca:	0b b6       	in	r0, 0x3b	; 59
 3cc:	0f 92       	push	r0
 3ce:	2f 93       	push	r18
 3d0:	3f 93       	push	r19
 3d2:	8f 93       	push	r24
 3d4:	9f 93       	push	r25
 3d6:	ef 93       	push	r30
 3d8:	ff 93       	push	r31
 3da:	cf 93       	push	r28
 3dc:	df 93       	push	r29
 3de:	cd b7       	in	r28, 0x3d	; 61
 3e0:	de b7       	in	r29, 0x3e	; 62

000003e2 <.Loc.84>:
	TCNT1 = RESET_VALUE;
 3e2:	84 e8       	ldi	r24, 0x84	; 132
 3e4:	90 e0       	ldi	r25, 0x00	; 0

000003e6 <.Loc.85>:
 3e6:	24 e2       	ldi	r18, 0x24	; 36
 3e8:	34 e6       	ldi	r19, 0x64	; 100
 3ea:	fc 01       	movw	r30, r24
 3ec:	31 83       	std	Z+1, r19	; 0x01
 3ee:	20 83       	st	Z, r18

000003f0 <.Loc.86>:

	PORT_1 |= (1<<PIN_1);
 3f0:	85 e2       	ldi	r24, 0x25	; 37
 3f2:	90 e0       	ldi	r25, 0x00	; 0
 3f4:	fc 01       	movw	r30, r24
 3f6:	20 81       	ld	r18, Z
 3f8:	85 e2       	ldi	r24, 0x25	; 37
 3fa:	90 e0       	ldi	r25, 0x00	; 0

000003fc <.Loc.87>:
 3fc:	20 62       	ori	r18, 0x20	; 32
 3fe:	fc 01       	movw	r30, r24
 400:	20 83       	st	Z, r18

00000402 <.Loc.88>:
}
 402:	00 00       	nop
 404:	df 91       	pop	r29
 406:	cf 91       	pop	r28
 408:	ff 91       	pop	r31
 40a:	ef 91       	pop	r30
 40c:	9f 91       	pop	r25
 40e:	8f 91       	pop	r24
 410:	3f 91       	pop	r19
 412:	2f 91       	pop	r18
 414:	0f 90       	pop	r0
 416:	0b be       	out	0x3b, r0	; 59
 418:	0f 90       	pop	r0
 41a:	0f be       	out	0x3f, r0	; 63
 41c:	0f 90       	pop	r0
 41e:	1f 90       	pop	r1
 420:	18 95       	reti

00000422 <__vector_17>:

ISR(TIMER1_COMPA_vect)
{
 422:	1f 92       	push	r1
 424:	0f 92       	push	r0
 426:	0f b6       	in	r0, 0x3f	; 63
 428:	0f 92       	push	r0
 42a:	11 24       	eor	r1, r1
 42c:	0b b6       	in	r0, 0x3b	; 59
 42e:	0f 92       	push	r0
 430:	2f 93       	push	r18
 432:	8f 93       	push	r24
 434:	9f 93       	push	r25
 436:	ef 93       	push	r30
 438:	ff 93       	push	r31
 43a:	cf 93       	push	r28
 43c:	df 93       	push	r29
 43e:	cd b7       	in	r28, 0x3d	; 61
 440:	de b7       	in	r29, 0x3e	; 62

00000442 <.Loc.90>:
	PORT_1 &= ~(1<<PIN_1);
 442:	85 e2       	ldi	r24, 0x25	; 37
 444:	90 e0       	ldi	r25, 0x00	; 0
 446:	fc 01       	movw	r30, r24
 448:	20 81       	ld	r18, Z

0000044a <.Loc.91>:
 44a:	85 e2       	ldi	r24, 0x25	; 37
 44c:	90 e0       	ldi	r25, 0x00	; 0

0000044e <.Loc.92>:
 44e:	2f 7d       	andi	r18, 0xDF	; 223
 450:	fc 01       	movw	r30, r24
 452:	20 83       	st	Z, r18

00000454 <.Loc.93>:
}
 454:	00 00       	nop
 456:	df 91       	pop	r29
 458:	cf 91       	pop	r28
 45a:	ff 91       	pop	r31
 45c:	ef 91       	pop	r30
 45e:	9f 91       	pop	r25
 460:	8f 91       	pop	r24
 462:	2f 91       	pop	r18
 464:	0f 90       	pop	r0
 466:	0b be       	out	0x3b, r0	; 59
 468:	0f 90       	pop	r0
 46a:	0f be       	out	0x3f, r0	; 63
 46c:	0f 90       	pop	r0
 46e:	1f 90       	pop	r1
 470:	18 95       	reti

00000472 <__vector_18>:

ISR(TIMER1_COMPB_vect)
{
 472:	1f 92       	push	r1
 474:	0f 92       	push	r0
 476:	0f b6       	in	r0, 0x3f	; 63
 478:	0f 92       	push	r0
 47a:	11 24       	eor	r1, r1
 47c:	cf 93       	push	r28
 47e:	df 93       	push	r29
 480:	cd b7       	in	r28, 0x3d	; 61
 482:	de b7       	in	r29, 0x3e	; 62

00000484 <.Loc.95>:

}
 484:	00 00       	nop
 486:	df 91       	pop	r29
 488:	cf 91       	pop	r28
 48a:	0f 90       	pop	r0
 48c:	0f be       	out	0x3f, r0	; 63
 48e:	0f 90       	pop	r0
 490:	1f 90       	pop	r1
 492:	18 95       	reti

00000494 <init_servo>:

void init_servo(void)
{
 494:	cf 93       	push	r28
 496:	df 93       	push	r29
 498:	cd b7       	in	r28, 0x3d	; 61
 49a:	de b7       	in	r29, 0x3e	; 62

0000049c <.Loc.97>:
	// Config pins as output
	DDR_1 |= (1<<PIN_1);
 49c:	84 e2       	ldi	r24, 0x24	; 36
 49e:	90 e0       	ldi	r25, 0x00	; 0
 4a0:	fc 01       	movw	r30, r24
 4a2:	20 81       	ld	r18, Z
 4a4:	84 e2       	ldi	r24, 0x24	; 36
 4a6:	90 e0       	ldi	r25, 0x00	; 0

000004a8 <.Loc.98>:
 4a8:	20 62       	ori	r18, 0x20	; 32
 4aa:	fc 01       	movw	r30, r24
 4ac:	20 83       	st	Z, r18

000004ae <.Loc.99>:

	// Use mode 0, clkdiv = 8
	TCCR1A = 0;
 4ae:	80 e8       	ldi	r24, 0x80	; 128
 4b0:	90 e0       	ldi	r25, 0x00	; 0

000004b2 <.Loc.100>:
 4b2:	fc 01       	movw	r30, r24
 4b4:	10 82       	st	Z, r1

000004b6 <.Loc.101>:
	TCCR1B = (0<<CS12) | (1<<CS11) | (0<<CS10);
 4b6:	81 e8       	ldi	r24, 0x81	; 129
 4b8:	90 e0       	ldi	r25, 0x00	; 0

000004ba <.Loc.102>:
 4ba:	22 e0       	ldi	r18, 0x02	; 2
 4bc:	fc 01       	movw	r30, r24
 4be:	20 83       	st	Z, r18

000004c0 <.Loc.103>:
	// Interrupts on OCA, OCB and OVF
	TIMSK1 = (1<<OCIE1B) | (1<<OCIE1A) | (1<<TOIE1);
 4c0:	8f e6       	ldi	r24, 0x6F	; 111
 4c2:	90 e0       	ldi	r25, 0x00	; 0

000004c4 <.Loc.104>:
 4c4:	27 e0       	ldi	r18, 0x07	; 7
 4c6:	fc 01       	movw	r30, r24
 4c8:	20 83       	st	Z, r18

000004ca <.Loc.105>:

	TCNT1 = RESET_VALUE;
 4ca:	84 e8       	ldi	r24, 0x84	; 132
 4cc:	90 e0       	ldi	r25, 0x00	; 0

000004ce <.Loc.106>:
 4ce:	24 e2       	ldi	r18, 0x24	; 36
 4d0:	34 e6       	ldi	r19, 0x64	; 100
 4d2:	fc 01       	movw	r30, r24
 4d4:	31 83       	std	Z+1, r19	; 0x01
 4d6:	20 83       	st	Z, r18

000004d8 <.Loc.107>:

	servo1_set_percentage(0);
 4d8:	80 e0       	ldi	r24, 0x00	; 0
 4da:	0e 94 74 02 	call	0x4e8	; 0x4e8 <servo1_set_percentage>

000004de <.Loc.108>:


	sei();
 4de:	78 94       	sei

000004e0 <.Loc.109>:
}
 4e0:	00 00       	nop
 4e2:	df 91       	pop	r29
 4e4:	cf 91       	pop	r28
 4e6:	08 95       	ret

000004e8 <servo1_set_percentage>:

void servo1_set_percentage(signed char percentage)
{
 4e8:	0f 93       	push	r16
 4ea:	1f 93       	push	r17
 4ec:	cf 93       	push	r28
 4ee:	df 93       	push	r29
 4f0:	cd b7       	in	r28, 0x3d	; 61
 4f2:	de b7       	in	r29, 0x3e	; 62
 4f4:	6d 97       	sbiw	r28, 0x1d	; 29
 4f6:	0f b6       	in	r0, 0x3f	; 63
 4f8:	f8 94       	cli
 4fa:	de bf       	out	0x3e, r29	; 62
 4fc:	0f be       	out	0x3f, r0	; 63
 4fe:	cd bf       	out	0x3d, r28	; 61
 500:	89 83       	std	Y+1, r24	; 0x01

00000502 <.Loc.111>:
	if (percentage >= -100 && percentage <= 100)
 502:	89 81       	ldd	r24, Y+1	; 0x01
 504:	8c 39       	cpi	r24, 0x9C	; 156
 506:	0c f4       	brge	.+2      	; 0x50a <.Loc.112>

00000508 <L0^A>:
 508:	57 c0       	rjmp	.+174    	; 0x5b8 <.L23>

0000050a <.Loc.112>:
 50a:	89 81       	ldd	r24, Y+1	; 0x01
 50c:	84 36       	cpi	r24, 0x64	; 100
 50e:	11 f0       	breq	.+4      	; 0x514 <.Loc.113>

00000510 <L0^A>:
 510:	0c f0       	brlt	.+2      	; 0x514 <.Loc.113>

00000512 <L0^A>:
 512:	52 c0       	rjmp	.+164    	; 0x5b8 <.L23>

00000514 <.Loc.113>:
	{
		OCR1A = RESET_VALUE+STOP_VALUE+(RANGE/100*percentage);
 514:	89 81       	ldd	r24, Y+1	; 0x01
 516:	28 2f       	mov	r18, r24
 518:	88 0f       	add	r24, r24
 51a:	33 0b       	sbc	r19, r19
 51c:	44 0b       	sbc	r20, r20
 51e:	55 0b       	sbc	r21, r21
 520:	2e 87       	std	Y+14, r18	; 0x0e
 522:	3f 87       	std	Y+15, r19	; 0x0f
 524:	48 8b       	std	Y+16, r20	; 0x10
 526:	59 8b       	std	Y+17, r21	; 0x11
 528:	6e 85       	ldd	r22, Y+14	; 0x0e
 52a:	7f 85       	ldd	r23, Y+15	; 0x0f
 52c:	88 89       	ldd	r24, Y+16	; 0x10
 52e:	99 89       	ldd	r25, Y+17	; 0x11
 530:	0e 94 ef 05 	call	0xbde	; 0xbde <__floatsisf>
 534:	6a 83       	std	Y+2, r22	; 0x02
 536:	7b 83       	std	Y+3, r23	; 0x03
 538:	8c 83       	std	Y+4, r24	; 0x04
 53a:	9d 83       	std	Y+5, r25	; 0x05
 53c:	20 e0       	ldi	r18, 0x00	; 0
 53e:	30 e0       	ldi	r19, 0x00	; 0
 540:	40 e2       	ldi	r20, 0x20	; 32
 542:	51 e4       	ldi	r21, 0x41	; 65
 544:	6a 81       	ldd	r22, Y+2	; 0x02
 546:	7b 81       	ldd	r23, Y+3	; 0x03
 548:	8c 81       	ldd	r24, Y+4	; 0x04
 54a:	9d 81       	ldd	r25, Y+5	; 0x05
 54c:	0e 94 a4 06 	call	0xd48	; 0xd48 <__mulsf3>
 550:	6a 8b       	std	Y+18, r22	; 0x12
 552:	7b 8b       	std	Y+19, r23	; 0x13
 554:	8c 8b       	std	Y+20, r24	; 0x14
 556:	9d 8b       	std	Y+21, r25	; 0x15
 558:	8a 89       	ldd	r24, Y+18	; 0x12
 55a:	9b 89       	ldd	r25, Y+19	; 0x13
 55c:	ac 89       	ldd	r26, Y+20	; 0x14
 55e:	bd 89       	ldd	r27, Y+21	; 0x15
 560:	8e 83       	std	Y+6, r24	; 0x06
 562:	9f 83       	std	Y+7, r25	; 0x07
 564:	a8 87       	std	Y+8, r26	; 0x08
 566:	b9 87       	std	Y+9, r27	; 0x09

00000568 <.Loc.114>:
 568:	20 e0       	ldi	r18, 0x00	; 0
 56a:	38 eb       	ldi	r19, 0xB8	; 184
 56c:	4f ed       	ldi	r20, 0xDF	; 223
 56e:	56 e4       	ldi	r21, 0x46	; 70
 570:	6e 81       	ldd	r22, Y+6	; 0x06
 572:	7f 81       	ldd	r23, Y+7	; 0x07
 574:	88 85       	ldd	r24, Y+8	; 0x08
 576:	99 85       	ldd	r25, Y+9	; 0x09
 578:	0e 94 4d 05 	call	0xa9a	; 0xa9a <__addsf3>
 57c:	6e 8b       	std	Y+22, r22	; 0x16
 57e:	7f 8b       	std	Y+23, r23	; 0x17
 580:	88 8f       	std	Y+24, r24	; 0x18
 582:	99 8f       	std	Y+25, r25	; 0x19
 584:	2e 89       	ldd	r18, Y+22	; 0x16
 586:	3f 89       	ldd	r19, Y+23	; 0x17
 588:	48 8d       	ldd	r20, Y+24	; 0x18
 58a:	59 8d       	ldd	r21, Y+25	; 0x19
 58c:	2a 87       	std	Y+10, r18	; 0x0a
 58e:	3b 87       	std	Y+11, r19	; 0x0b
 590:	4c 87       	std	Y+12, r20	; 0x0c
 592:	5d 87       	std	Y+13, r21	; 0x0d

00000594 <.Loc.115>:
 594:	08 e8       	ldi	r16, 0x88	; 136
 596:	10 e0       	ldi	r17, 0x00	; 0

00000598 <.Loc.116>:
 598:	6a 85       	ldd	r22, Y+10	; 0x0a
 59a:	7b 85       	ldd	r23, Y+11	; 0x0b
 59c:	8c 85       	ldd	r24, Y+12	; 0x0c
 59e:	9d 85       	ldd	r25, Y+13	; 0x0d
 5a0:	0e 94 be 05 	call	0xb7c	; 0xb7c <__fixunssfsi>
 5a4:	6a 8f       	std	Y+26, r22	; 0x1a
 5a6:	7b 8f       	std	Y+27, r23	; 0x1b
 5a8:	8c 8f       	std	Y+28, r24	; 0x1c
 5aa:	9d 8f       	std	Y+29, r25	; 0x1d
 5ac:	8a 8d       	ldd	r24, Y+26	; 0x1a
 5ae:	9b 8d       	ldd	r25, Y+27	; 0x1b
 5b0:	d8 01       	movw	r26, r16
 5b2:	11 96       	adiw	r26, 0x01	; 1
 5b4:	9c 93       	st	X, r25
 5b6:	8e 93       	st	-X, r24

000005b8 <.L23>:
	}
}
 5b8:	00 00       	nop
 5ba:	6d 96       	adiw	r28, 0x1d	; 29
 5bc:	0f b6       	in	r0, 0x3f	; 63
 5be:	f8 94       	cli
 5c0:	de bf       	out	0x3e, r29	; 62
 5c2:	0f be       	out	0x3f, r0	; 63
 5c4:	cd bf       	out	0x3d, r28	; 61
 5c6:	df 91       	pop	r29
 5c8:	cf 91       	pop	r28
 5ca:	1f 91       	pop	r17
 5cc:	0f 91       	pop	r16
 5ce:	08 95       	ret

000005d0 <init>:
#include "servo.c"
#include <avr/interrupt.h>
#include <util/delay.h>
int state;
void init()
{
 5d0:	cf 93       	push	r28
 5d2:	df 93       	push	r29
 5d4:	cd b7       	in	r28, 0x3d	; 61
 5d6:	de b7       	in	r29, 0x3e	; 62

000005d8 <.Loc.119>:
    DDRF &= ~(1<<PF0); //A0, ir links voor
 5d8:	80 e3       	ldi	r24, 0x30	; 48
 5da:	90 e0       	ldi	r25, 0x00	; 0
 5dc:	fc 01       	movw	r30, r24
 5de:	20 81       	ld	r18, Z

000005e0 <.Loc.120>:
 5e0:	80 e3       	ldi	r24, 0x30	; 48
 5e2:	90 e0       	ldi	r25, 0x00	; 0

000005e4 <.Loc.121>:
 5e4:	2e 7f       	andi	r18, 0xFE	; 254
 5e6:	fc 01       	movw	r30, r24
 5e8:	20 83       	st	Z, r18

000005ea <.Loc.122>:
    PORTF |= (1<<PF0);
 5ea:	81 e3       	ldi	r24, 0x31	; 49
 5ec:	90 e0       	ldi	r25, 0x00	; 0
 5ee:	fc 01       	movw	r30, r24
 5f0:	20 81       	ld	r18, Z
 5f2:	81 e3       	ldi	r24, 0x31	; 49
 5f4:	90 e0       	ldi	r25, 0x00	; 0

000005f6 <.Loc.123>:
 5f6:	21 60       	ori	r18, 0x01	; 1
 5f8:	fc 01       	movw	r30, r24
 5fa:	20 83       	st	Z, r18

000005fc <.Loc.124>:
    DDRF &= ~(1<<PF1); //A1, ir rechts voor
 5fc:	80 e3       	ldi	r24, 0x30	; 48
 5fe:	90 e0       	ldi	r25, 0x00	; 0
 600:	fc 01       	movw	r30, r24
 602:	20 81       	ld	r18, Z

00000604 <.Loc.125>:
 604:	80 e3       	ldi	r24, 0x30	; 48
 606:	90 e0       	ldi	r25, 0x00	; 0

00000608 <.Loc.126>:
 608:	2d 7f       	andi	r18, 0xFD	; 253
 60a:	fc 01       	movw	r30, r24
 60c:	20 83       	st	Z, r18

0000060e <.Loc.127>:
    PORTF |= (1<<PF1);
 60e:	81 e3       	ldi	r24, 0x31	; 49
 610:	90 e0       	ldi	r25, 0x00	; 0
 612:	fc 01       	movw	r30, r24
 614:	20 81       	ld	r18, Z
 616:	81 e3       	ldi	r24, 0x31	; 49
 618:	90 e0       	ldi	r25, 0x00	; 0

0000061a <.Loc.128>:
 61a:	22 60       	ori	r18, 0x02	; 2
 61c:	fc 01       	movw	r30, r24
 61e:	20 83       	st	Z, r18

00000620 <.Loc.129>:
    DDRF &= ~(1<<PF2); //A2, ir bomen rechts
 620:	80 e3       	ldi	r24, 0x30	; 48
 622:	90 e0       	ldi	r25, 0x00	; 0
 624:	fc 01       	movw	r30, r24
 626:	20 81       	ld	r18, Z

00000628 <.Loc.130>:
 628:	80 e3       	ldi	r24, 0x30	; 48
 62a:	90 e0       	ldi	r25, 0x00	; 0

0000062c <.Loc.131>:
 62c:	2b 7f       	andi	r18, 0xFB	; 251
 62e:	fc 01       	movw	r30, r24
 630:	20 83       	st	Z, r18

00000632 <.Loc.132>:
    PORTF |= (1<<PF2);
 632:	81 e3       	ldi	r24, 0x31	; 49
 634:	90 e0       	ldi	r25, 0x00	; 0
 636:	fc 01       	movw	r30, r24
 638:	20 81       	ld	r18, Z
 63a:	81 e3       	ldi	r24, 0x31	; 49
 63c:	90 e0       	ldi	r25, 0x00	; 0

0000063e <.Loc.133>:
 63e:	24 60       	ori	r18, 0x04	; 4
 640:	fc 01       	movw	r30, r24
 642:	20 83       	st	Z, r18

00000644 <.Loc.134>:
    DDRF &= ~(1<<PF3);//A3, ir bomen links
 644:	80 e3       	ldi	r24, 0x30	; 48
 646:	90 e0       	ldi	r25, 0x00	; 0
 648:	fc 01       	movw	r30, r24
 64a:	20 81       	ld	r18, Z

0000064c <.Loc.135>:
 64c:	80 e3       	ldi	r24, 0x30	; 48
 64e:	90 e0       	ldi	r25, 0x00	; 0

00000650 <.Loc.136>:
 650:	27 7f       	andi	r18, 0xF7	; 247
 652:	fc 01       	movw	r30, r24
 654:	20 83       	st	Z, r18

00000656 <.Loc.137>:
    PORTF |= (1<<PF3);
 656:	81 e3       	ldi	r24, 0x31	; 49
 658:	90 e0       	ldi	r25, 0x00	; 0
 65a:	fc 01       	movw	r30, r24
 65c:	20 81       	ld	r18, Z
 65e:	81 e3       	ldi	r24, 0x31	; 49
 660:	90 e0       	ldi	r25, 0x00	; 0

00000662 <.Loc.138>:
 662:	28 60       	ori	r18, 0x08	; 8
 664:	fc 01       	movw	r30, r24
 666:	20 83       	st	Z, r18

00000668 <.Loc.139>:
    DDRF &= ~(1<<PF4);//A4, voren detecteren
 668:	80 e3       	ldi	r24, 0x30	; 48
 66a:	90 e0       	ldi	r25, 0x00	; 0
 66c:	fc 01       	movw	r30, r24
 66e:	20 81       	ld	r18, Z

00000670 <.Loc.140>:
 670:	80 e3       	ldi	r24, 0x30	; 48
 672:	90 e0       	ldi	r25, 0x00	; 0

00000674 <.Loc.141>:
 674:	2f 7e       	andi	r18, 0xEF	; 239
 676:	fc 01       	movw	r30, r24
 678:	20 83       	st	Z, r18

0000067a <.Loc.142>:
    PORTF |= (1<<PF4);
 67a:	81 e3       	ldi	r24, 0x31	; 49
 67c:	90 e0       	ldi	r25, 0x00	; 0
 67e:	fc 01       	movw	r30, r24
 680:	20 81       	ld	r18, Z
 682:	81 e3       	ldi	r24, 0x31	; 49
 684:	90 e0       	ldi	r25, 0x00	; 0

00000686 <.Loc.143>:
 686:	20 61       	ori	r18, 0x10	; 16
 688:	fc 01       	movw	r30, r24
 68a:	20 83       	st	Z, r18

0000068c <.Loc.144>:
    DDRB |= (1<<PB0);  //53, links leds
 68c:	84 e2       	ldi	r24, 0x24	; 36
 68e:	90 e0       	ldi	r25, 0x00	; 0
 690:	fc 01       	movw	r30, r24
 692:	20 81       	ld	r18, Z
 694:	84 e2       	ldi	r24, 0x24	; 36
 696:	90 e0       	ldi	r25, 0x00	; 0

00000698 <.Loc.145>:
 698:	21 60       	ori	r18, 0x01	; 1
 69a:	fc 01       	movw	r30, r24
 69c:	20 83       	st	Z, r18

0000069e <.Loc.146>:
    PORTB &= ~(1<<PB0);
 69e:	85 e2       	ldi	r24, 0x25	; 37
 6a0:	90 e0       	ldi	r25, 0x00	; 0
 6a2:	fc 01       	movw	r30, r24
 6a4:	20 81       	ld	r18, Z

000006a6 <.Loc.147>:
 6a6:	85 e2       	ldi	r24, 0x25	; 37
 6a8:	90 e0       	ldi	r25, 0x00	; 0

000006aa <.Loc.148>:
 6aa:	2e 7f       	andi	r18, 0xFE	; 254
 6ac:	fc 01       	movw	r30, r24
 6ae:	20 83       	st	Z, r18

000006b0 <.Loc.149>:
    DDRB |= (1<<PB1);   //52, leds rechts
 6b0:	84 e2       	ldi	r24, 0x24	; 36
 6b2:	90 e0       	ldi	r25, 0x00	; 0
 6b4:	fc 01       	movw	r30, r24
 6b6:	20 81       	ld	r18, Z
 6b8:	84 e2       	ldi	r24, 0x24	; 36
 6ba:	90 e0       	ldi	r25, 0x00	; 0

000006bc <.Loc.150>:
 6bc:	22 60       	ori	r18, 0x02	; 2
 6be:	fc 01       	movw	r30, r24
 6c0:	20 83       	st	Z, r18

000006c2 <.Loc.151>:
    PORTB &= ~(1<<PB1);
 6c2:	85 e2       	ldi	r24, 0x25	; 37
 6c4:	90 e0       	ldi	r25, 0x00	; 0
 6c6:	fc 01       	movw	r30, r24
 6c8:	20 81       	ld	r18, Z

000006ca <.Loc.152>:
 6ca:	85 e2       	ldi	r24, 0x25	; 37
 6cc:	90 e0       	ldi	r25, 0x00	; 0

000006ce <.Loc.153>:
 6ce:	2d 7f       	andi	r18, 0xFD	; 253
 6d0:	fc 01       	movw	r30, r24
 6d2:	20 83       	st	Z, r18

000006d4 <.Loc.154>:
}
 6d4:	00 00       	nop
 6d6:	df 91       	pop	r29
 6d8:	cf 91       	pop	r28
 6da:	08 95       	ret

000006dc <door>:
void door()
{
 6dc:	cf 93       	push	r28
 6de:	df 93       	push	r29
 6e0:	cd b7       	in	r28, 0x3d	; 61
 6e2:	de b7       	in	r29, 0x3e	; 62
 6e4:	a2 97       	sbiw	r28, 0x22	; 34
 6e6:	0f b6       	in	r0, 0x3f	; 63
 6e8:	f8 94       	cli
 6ea:	de bf       	out	0x3e, r29	; 62
 6ec:	0f be       	out	0x3f, r0	; 63
 6ee:	cd bf       	out	0x3d, r28	; 61
 6f0:	80 e0       	ldi	r24, 0x00	; 0
 6f2:	90 e0       	ldi	r25, 0x00	; 0
 6f4:	aa ef       	ldi	r26, 0xFA	; 250
 6f6:	b4 e4       	ldi	r27, 0x44	; 68
 6f8:	89 83       	std	Y+1, r24	; 0x01
 6fa:	9a 83       	std	Y+2, r25	; 0x02
 6fc:	ab 83       	std	Y+3, r26	; 0x03
 6fe:	bc 83       	std	Y+4, r27	; 0x04

00000700 <.LBB12>:

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
 700:	20 e0       	ldi	r18, 0x00	; 0
 702:	30 e0       	ldi	r19, 0x00	; 0
 704:	4a e7       	ldi	r20, 0x7A	; 122
 706:	55 e4       	ldi	r21, 0x45	; 69
 708:	69 81       	ldd	r22, Y+1	; 0x01
 70a:	7a 81       	ldd	r23, Y+2	; 0x02
 70c:	8b 81       	ldd	r24, Y+3	; 0x03
 70e:	9c 81       	ldd	r25, Y+4	; 0x04
 710:	0e 94 a4 06 	call	0xd48	; 0xd48 <__mulsf3>
 714:	6b 8b       	std	Y+19, r22	; 0x13
 716:	7c 8b       	std	Y+20, r23	; 0x14
 718:	8d 8b       	std	Y+21, r24	; 0x15
 71a:	9e 8b       	std	Y+22, r25	; 0x16
 71c:	8b 89       	ldd	r24, Y+19	; 0x13
 71e:	9c 89       	ldd	r25, Y+20	; 0x14
 720:	ad 89       	ldd	r26, Y+21	; 0x15
 722:	be 89       	ldd	r27, Y+22	; 0x16
 724:	8d 83       	std	Y+5, r24	; 0x05
 726:	9e 83       	std	Y+6, r25	; 0x06
 728:	af 83       	std	Y+7, r26	; 0x07
 72a:	b8 87       	std	Y+8, r27	; 0x08

0000072c <.Loc.157>:
	if (__tmp < 1.0)
 72c:	20 e0       	ldi	r18, 0x00	; 0
 72e:	30 e0       	ldi	r19, 0x00	; 0
 730:	40 e8       	ldi	r20, 0x80	; 128
 732:	5f e3       	ldi	r21, 0x3F	; 63
 734:	6d 81       	ldd	r22, Y+5	; 0x05
 736:	7e 81       	ldd	r23, Y+6	; 0x06
 738:	8f 81       	ldd	r24, Y+7	; 0x07
 73a:	98 85       	ldd	r25, Y+8	; 0x08
 73c:	0e 94 b9 05 	call	0xb72	; 0xb72 <__cmpsf2>
 740:	88 23       	and	r24, r24
 742:	2c f4       	brge	.+10     	; 0x74e <.L36>

00000744 <.Loc.158>:
		__ticks = 1;
 744:	81 e0       	ldi	r24, 0x01	; 1
 746:	90 e0       	ldi	r25, 0x00	; 0
 748:	9a 87       	std	Y+10, r25	; 0x0a
 74a:	89 87       	std	Y+9, r24	; 0x09
 74c:	55 c0       	rjmp	.+170    	; 0x7f8 <.L28>

0000074e <.L36>:
	else if (__tmp > 65535)
 74e:	20 e0       	ldi	r18, 0x00	; 0
 750:	3f ef       	ldi	r19, 0xFF	; 255
 752:	4f e7       	ldi	r20, 0x7F	; 127
 754:	57 e4       	ldi	r21, 0x47	; 71
 756:	6d 81       	ldd	r22, Y+5	; 0x05
 758:	7e 81       	ldd	r23, Y+6	; 0x06
 75a:	8f 81       	ldd	r24, Y+7	; 0x07
 75c:	98 85       	ldd	r25, Y+8	; 0x08
 75e:	0e 94 9f 06 	call	0xd3e	; 0xd3e <__gesf2>
 762:	88 23       	and	r24, r24
 764:	d9 f1       	breq	.+118    	; 0x7dc <.L37>
 766:	d4 f1       	brlt	.+116    	; 0x7dc <.L37>

00000768 <.Loc.160>:
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
 768:	20 e0       	ldi	r18, 0x00	; 0
 76a:	30 e0       	ldi	r19, 0x00	; 0
 76c:	40 e2       	ldi	r20, 0x20	; 32
 76e:	51 e4       	ldi	r21, 0x41	; 65
 770:	69 81       	ldd	r22, Y+1	; 0x01
 772:	7a 81       	ldd	r23, Y+2	; 0x02
 774:	8b 81       	ldd	r24, Y+3	; 0x03
 776:	9c 81       	ldd	r25, Y+4	; 0x04
 778:	0e 94 a4 06 	call	0xd48	; 0xd48 <__mulsf3>
 77c:	6f 8b       	std	Y+23, r22	; 0x17
 77e:	78 8f       	std	Y+24, r23	; 0x18
 780:	89 8f       	std	Y+25, r24	; 0x19
 782:	9a 8f       	std	Y+26, r25	; 0x1a
 784:	8f 89       	ldd	r24, Y+23	; 0x17
 786:	98 8d       	ldd	r25, Y+24	; 0x18
 788:	a9 8d       	ldd	r26, Y+25	; 0x19
 78a:	ba 8d       	ldd	r27, Y+26	; 0x1a
 78c:	8f 87       	std	Y+15, r24	; 0x0f
 78e:	98 8b       	std	Y+16, r25	; 0x10
 790:	a9 8b       	std	Y+17, r26	; 0x11
 792:	ba 8b       	std	Y+18, r27	; 0x12

00000794 <.Loc.161>:
 794:	6f 85       	ldd	r22, Y+15	; 0x0f
 796:	78 89       	ldd	r23, Y+16	; 0x10
 798:	89 89       	ldd	r24, Y+17	; 0x11
 79a:	9a 89       	ldd	r25, Y+18	; 0x12
 79c:	0e 94 be 05 	call	0xb7c	; 0xb7c <__fixunssfsi>
 7a0:	6b 8f       	std	Y+27, r22	; 0x1b
 7a2:	7c 8f       	std	Y+28, r23	; 0x1c
 7a4:	8d 8f       	std	Y+29, r24	; 0x1d
 7a6:	9e 8f       	std	Y+30, r25	; 0x1e
 7a8:	ab 8d       	ldd	r26, Y+27	; 0x1b
 7aa:	bc 8d       	ldd	r27, Y+28	; 0x1c
 7ac:	ba 87       	std	Y+10, r27	; 0x0a
 7ae:	a9 87       	std	Y+9, r26	; 0x09

000007b0 <.Loc.162>:
		while(__ticks)
 7b0:	10 c0       	rjmp	.+32     	; 0x7d2 <.L31>

000007b2 <.L32>:
 7b2:	80 e9       	ldi	r24, 0x90	; 144
 7b4:	91 e0       	ldi	r25, 0x01	; 1
 7b6:	9c 87       	std	Y+12, r25	; 0x0c
 7b8:	8b 87       	std	Y+11, r24	; 0x0b

000007ba <.LBB14>:
		"sbc %B0,__zero_reg__"    "\n\t"
		"brne 1b"
		: "+d" (__count)
	);
#else
	__asm__ volatile (
 7ba:	8b 85       	ldd	r24, Y+11	; 0x0b
 7bc:	9c 85       	ldd	r25, Y+12	; 0x0c

000007be <.L1^B1>:
 7be:	01 97       	sbiw	r24, 0x01	; 1
 7c0:	f1 f7       	brne	.-4      	; 0x7be <.L1^B1>
 7c2:	9c 87       	std	Y+12, r25	; 0x0c
 7c4:	8b 87       	std	Y+11, r24	; 0x0b

000007c6 <.Loc.164>:
	...

000007c8 <.LBE14>:
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 7c8:	89 85       	ldd	r24, Y+9	; 0x09
 7ca:	9a 85       	ldd	r25, Y+10	; 0x0a
 7cc:	01 97       	sbiw	r24, 0x01	; 1
 7ce:	9a 87       	std	Y+10, r25	; 0x0a
 7d0:	89 87       	std	Y+9, r24	; 0x09

000007d2 <.L31>:
		while(__ticks)
 7d2:	89 85       	ldd	r24, Y+9	; 0x09
 7d4:	9a 85       	ldd	r25, Y+10	; 0x0a
 7d6:	00 97       	sbiw	r24, 0x00	; 0
 7d8:	61 f7       	brne	.-40     	; 0x7b2 <.L32>

000007da <.Loc.167>:
		}
		return;
 7da:	19 c0       	rjmp	.+50     	; 0x80e <.L33>

000007dc <.L37>:
	}
	else
		__ticks = (uint16_t)__tmp;
 7dc:	6d 81       	ldd	r22, Y+5	; 0x05
 7de:	7e 81       	ldd	r23, Y+6	; 0x06
 7e0:	8f 81       	ldd	r24, Y+7	; 0x07
 7e2:	98 85       	ldd	r25, Y+8	; 0x08
 7e4:	0e 94 be 05 	call	0xb7c	; 0xb7c <__fixunssfsi>
 7e8:	6f 8f       	std	Y+31, r22	; 0x1f
 7ea:	78 a3       	std	Y+32, r23	; 0x20
 7ec:	89 a3       	std	Y+33, r24	; 0x21
 7ee:	9a a3       	std	Y+34, r25	; 0x22
 7f0:	8f 8d       	ldd	r24, Y+31	; 0x1f
 7f2:	98 a1       	ldd	r25, Y+32	; 0x20
 7f4:	9a 87       	std	Y+10, r25	; 0x0a
 7f6:	89 87       	std	Y+9, r24	; 0x09

000007f8 <.L28>:
 7f8:	89 85       	ldd	r24, Y+9	; 0x09
 7fa:	9a 85       	ldd	r25, Y+10	; 0x0a
 7fc:	9e 87       	std	Y+14, r25	; 0x0e
 7fe:	8d 87       	std	Y+13, r24	; 0x0d

00000800 <.LBB16>:
 800:	8d 85       	ldd	r24, Y+13	; 0x0d
 802:	9e 85       	ldd	r25, Y+14	; 0x0e

00000804 <.L1^B2>:
 804:	01 97       	sbiw	r24, 0x01	; 1
 806:	f1 f7       	brne	.-4      	; 0x804 <.L1^B2>
 808:	9e 87       	std	Y+14, r25	; 0x0e
 80a:	8d 87       	std	Y+13, r24	; 0x0d

0000080c <.Loc.170>:
	...

0000080e <.L33>:
    _delay_ms(2000);
    h_bridge_set_percentage(50);
 80e:	82 e3       	ldi	r24, 0x32	; 50
 810:	0e 94 96 01 	call	0x32c	; 0x32c <h_bridge_set_percentage>

00000814 <.Loc.172>:
}
 814:	00 00       	nop
 816:	a2 96       	adiw	r28, 0x22	; 34
 818:	0f b6       	in	r0, 0x3f	; 63
 81a:	f8 94       	cli
 81c:	de bf       	out	0x3e, r29	; 62
 81e:	0f be       	out	0x3f, r0	; 63
 820:	cd bf       	out	0x3d, r28	; 61
 822:	df 91       	pop	r29
 824:	cf 91       	pop	r28
 826:	08 95       	ret

00000828 <vroem>:

void vroem()
{
 828:	cf 93       	push	r28
 82a:	df 93       	push	r29
 82c:	cd b7       	in	r28, 0x3d	; 61
 82e:	de b7       	in	r29, 0x3e	; 62

00000830 <.Loc.174>:
    h_bridge_set_percentage(50);
 830:	82 e3       	ldi	r24, 0x32	; 50
 832:	0e 94 96 01 	call	0x32c	; 0x32c <h_bridge_set_percentage>

00000836 <.Loc.175>:
}
 836:	00 00       	nop
 838:	df 91       	pop	r29
 83a:	cf 91       	pop	r28
 83c:	08 95       	ret

0000083e <plantsensoraan>:

void plantsensoraan()
{
 83e:	cf 93       	push	r28
 840:	df 93       	push	r29
 842:	cd b7       	in	r28, 0x3d	; 61
 844:	de b7       	in	r29, 0x3e	; 62

00000846 <.Loc.177>:
if ((PINF & (1<<PF2))==0)                    //bomen rechts, staan stil
 846:	8f e2       	ldi	r24, 0x2F	; 47
 848:	90 e0       	ldi	r25, 0x00	; 0
 84a:	fc 01       	movw	r30, r24
 84c:	80 81       	ld	r24, Z

0000084e <.Loc.178>:
 84e:	88 2f       	mov	r24, r24
 850:	90 e0       	ldi	r25, 0x00	; 0
 852:	84 70       	andi	r24, 0x04	; 4
 854:	99 27       	eor	r25, r25

00000856 <.Loc.179>:
 856:	00 97       	sbiw	r24, 0x00	; 0
 858:	31 f4       	brne	.+12     	; 0x866 <.L40>

0000085a <.Loc.180>:
{
state = 2;
 85a:	82 e0       	ldi	r24, 0x02	; 2
 85c:	90 e0       	ldi	r25, 0x00	; 0
 85e:	90 93 01 02 	sts	0x0201, r25	; 0x800201 <state+0x1>
 862:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <state>

00000866 <.L40>:
}
if ((PINF & (1<<PF3))==0)                    //bomen links, staan stil
 866:	8f e2       	ldi	r24, 0x2F	; 47
 868:	90 e0       	ldi	r25, 0x00	; 0
 86a:	fc 01       	movw	r30, r24
 86c:	80 81       	ld	r24, Z

0000086e <.Loc.182>:
 86e:	88 2f       	mov	r24, r24
 870:	90 e0       	ldi	r25, 0x00	; 0
 872:	88 70       	andi	r24, 0x08	; 8
 874:	99 27       	eor	r25, r25

00000876 <.Loc.183>:
 876:	00 97       	sbiw	r24, 0x00	; 0
 878:	31 f4       	brne	.+12     	; 0x886 <.L42>

0000087a <.Loc.184>:
{
state = 2;
 87a:	82 e0       	ldi	r24, 0x02	; 2
 87c:	90 e0       	ldi	r25, 0x00	; 0
 87e:	90 93 01 02 	sts	0x0201, r25	; 0x800201 <state+0x1>
 882:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <state>

00000886 <.L42>:
}
}
 886:	00 00       	nop
 888:	df 91       	pop	r29
 88a:	cf 91       	pop	r28
 88c:	08 95       	ret

0000088e <rem>:

void rem()
{
 88e:	cf 93       	push	r28
 890:	df 93       	push	r29
 892:	cd b7       	in	r28, 0x3d	; 61
 894:	de b7       	in	r29, 0x3e	; 62

00000896 <.Loc.187>:
    h_bridge_set_percentage(0);
 896:	80 e0       	ldi	r24, 0x00	; 0
 898:	0e 94 96 01 	call	0x32c	; 0x32c <h_bridge_set_percentage>

0000089c <.Loc.188>:
}
 89c:	00 00       	nop
 89e:	df 91       	pop	r29
 8a0:	cf 91       	pop	r28
 8a2:	08 95       	ret

000008a4 <alarm>:

void alarm()
{
 8a4:	cf 93       	push	r28
 8a6:	df 93       	push	r29
 8a8:	cd b7       	in	r28, 0x3d	; 61
 8aa:	de b7       	in	r29, 0x3e	; 62

000008ac <.Loc.190>:
    //1 pinnetje aan en uit schakelen voor 2x
}
 8ac:	00 00       	nop
 8ae:	df 91       	pop	r29
 8b0:	cf 91       	pop	r28
 8b2:	08 95       	ret

000008b4 <stuurlinks>:

void stuurlinks()
{
 8b4:	cf 93       	push	r28
 8b6:	df 93       	push	r29
 8b8:	cd b7       	in	r28, 0x3d	; 61
 8ba:	de b7       	in	r29, 0x3e	; 62

000008bc <.Loc.192>:
        servo1_set_percentage(-50);
 8bc:	8e ec       	ldi	r24, 0xCE	; 206
 8be:	0e 94 74 02 	call	0x4e8	; 0x4e8 <servo1_set_percentage>

000008c2 <.Loc.193>:
}
 8c2:	00 00       	nop
 8c4:	df 91       	pop	r29
 8c6:	cf 91       	pop	r28
 8c8:	08 95       	ret

000008ca <stuurrechts>:

void stuurrechts()
{
 8ca:	cf 93       	push	r28
 8cc:	df 93       	push	r29
 8ce:	cd b7       	in	r28, 0x3d	; 61
 8d0:	de b7       	in	r29, 0x3e	; 62

000008d2 <.Loc.195>:
   servo1_set_percentage(50);
 8d2:	82 e3       	ldi	r24, 0x32	; 50
 8d4:	0e 94 74 02 	call	0x4e8	; 0x4e8 <servo1_set_percentage>

000008d8 <.Loc.196>:
}
 8d8:	00 00       	nop
 8da:	df 91       	pop	r29
 8dc:	cf 91       	pop	r28
 8de:	08 95       	ret

000008e0 <stuurvooruit>:

void stuurvooruit()
{
 8e0:	cf 93       	push	r28
 8e2:	df 93       	push	r29
 8e4:	cd b7       	in	r28, 0x3d	; 61
 8e6:	de b7       	in	r29, 0x3e	; 62

000008e8 <.Loc.198>:
    servo1_set_percentage(0);
 8e8:	80 e0       	ldi	r24, 0x00	; 0
 8ea:	0e 94 74 02 	call	0x4e8	; 0x4e8 <servo1_set_percentage>

000008ee <.Loc.199>:
}
 8ee:	00 00       	nop
 8f0:	df 91       	pop	r29
 8f2:	cf 91       	pop	r28
 8f4:	08 95       	ret

000008f6 <main>:


int main(void)
{
 8f6:	cf 93       	push	r28
 8f8:	df 93       	push	r29
 8fa:	cd b7       	in	r28, 0x3d	; 61
 8fc:	de b7       	in	r29, 0x3e	; 62

000008fe <.Loc.201>:
    init_h_bridge();    //d12,13
 8fe:	0e 94 53 01 	call	0x2a6	; 0x2a6 <init_h_bridge>

00000902 <.Loc.202>:
    init_servo();       //d11
 902:	0e 94 4a 02 	call	0x494	; 0x494 <init_servo>

00000906 <.Loc.203>:
    init();
 906:	0e 94 e8 02 	call	0x5d0	; 0x5d0 <init>

0000090a <.L60>:
    while(1)

    {
        //sensoren checken
        if ((PINF & (1<<PF0))==0)       //beide zijkanten checken, rechtdoor
 90a:	8f e2       	ldi	r24, 0x2F	; 47
 90c:	90 e0       	ldi	r25, 0x00	; 0
 90e:	fc 01       	movw	r30, r24
 910:	80 81       	ld	r24, Z

00000912 <.Loc.205>:
 912:	88 2f       	mov	r24, r24
 914:	90 e0       	ldi	r25, 0x00	; 0
 916:	81 70       	andi	r24, 0x01	; 1
 918:	99 27       	eor	r25, r25

0000091a <.Loc.206>:
 91a:	00 97       	sbiw	r24, 0x00	; 0
 91c:	81 f4       	brne	.+32     	; 0x93e <.L49>

0000091e <.Loc.207>:
        {
        if ((PINF & (1<<PF1))==0)
 91e:	8f e2       	ldi	r24, 0x2F	; 47
 920:	90 e0       	ldi	r25, 0x00	; 0
 922:	fc 01       	movw	r30, r24
 924:	80 81       	ld	r24, Z

00000926 <.Loc.208>:
 926:	88 2f       	mov	r24, r24
 928:	90 e0       	ldi	r25, 0x00	; 0
 92a:	82 70       	andi	r24, 0x02	; 2
 92c:	99 27       	eor	r25, r25

0000092e <.Loc.209>:
 92e:	00 97       	sbiw	r24, 0x00	; 0
 930:	31 f4       	brne	.+12     	; 0x93e <.L49>

00000932 <.Loc.210>:
        {
            state = 1;
 932:	81 e0       	ldi	r24, 0x01	; 1
 934:	90 e0       	ldi	r25, 0x00	; 0
 936:	90 93 01 02 	sts	0x0201, r25	; 0x800201 <state+0x1>
 93a:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <state>

0000093e <.L49>:
        }
        }
        if (PINF & (1<<PF0))                   //links checken, rechts corigeren
 93e:	8f e2       	ldi	r24, 0x2F	; 47
 940:	90 e0       	ldi	r25, 0x00	; 0
 942:	fc 01       	movw	r30, r24
 944:	80 81       	ld	r24, Z

00000946 <.Loc.212>:
 946:	88 2f       	mov	r24, r24
 948:	90 e0       	ldi	r25, 0x00	; 0
 94a:	81 70       	andi	r24, 0x01	; 1
 94c:	99 27       	eor	r25, r25

0000094e <.Loc.213>:
 94e:	00 97       	sbiw	r24, 0x00	; 0
 950:	31 f0       	breq	.+12     	; 0x95e <.L50>

00000952 <.Loc.214>:
        {
            state = 5;
 952:	85 e0       	ldi	r24, 0x05	; 5
 954:	90 e0       	ldi	r25, 0x00	; 0
 956:	90 93 01 02 	sts	0x0201, r25	; 0x800201 <state+0x1>
 95a:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <state>

0000095e <.L50>:
        }
        if (PINF & (1<<PF1))                    //rechts checken, links corigeren
 95e:	8f e2       	ldi	r24, 0x2F	; 47
 960:	90 e0       	ldi	r25, 0x00	; 0
 962:	fc 01       	movw	r30, r24
 964:	80 81       	ld	r24, Z

00000966 <.Loc.216>:
 966:	88 2f       	mov	r24, r24
 968:	90 e0       	ldi	r25, 0x00	; 0
 96a:	82 70       	andi	r24, 0x02	; 2
 96c:	99 27       	eor	r25, r25

0000096e <.Loc.217>:
 96e:	00 97       	sbiw	r24, 0x00	; 0
 970:	31 f0       	breq	.+12     	; 0x97e <.L51>

00000972 <.Loc.218>:
        {
            state = 4;
 972:	84 e0       	ldi	r24, 0x04	; 4
 974:	90 e0       	ldi	r25, 0x00	; 0
 976:	90 93 01 02 	sts	0x0201, r25	; 0x800201 <state+0x1>
 97a:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <state>

0000097e <.L51>:
        }
        if (PINF & (1<<PF0))                          //beide sensoren niks, links afslaan
 97e:	8f e2       	ldi	r24, 0x2F	; 47
 980:	90 e0       	ldi	r25, 0x00	; 0
 982:	fc 01       	movw	r30, r24
 984:	80 81       	ld	r24, Z

00000986 <.Loc.220>:
 986:	88 2f       	mov	r24, r24
 988:	90 e0       	ldi	r25, 0x00	; 0
 98a:	81 70       	andi	r24, 0x01	; 1
 98c:	99 27       	eor	r25, r25

0000098e <.Loc.221>:
 98e:	00 97       	sbiw	r24, 0x00	; 0
 990:	81 f0       	breq	.+32     	; 0x9b2 <.L52>

00000992 <.Loc.222>:
        {
        if(PINF & (1<<PF1))
 992:	8f e2       	ldi	r24, 0x2F	; 47
 994:	90 e0       	ldi	r25, 0x00	; 0
 996:	fc 01       	movw	r30, r24
 998:	80 81       	ld	r24, Z

0000099a <.Loc.223>:
 99a:	88 2f       	mov	r24, r24
 99c:	90 e0       	ldi	r25, 0x00	; 0
 99e:	82 70       	andi	r24, 0x02	; 2
 9a0:	99 27       	eor	r25, r25

000009a2 <.Loc.224>:
 9a2:	00 97       	sbiw	r24, 0x00	; 0
 9a4:	31 f0       	breq	.+12     	; 0x9b2 <.L52>

000009a6 <.Loc.225>:
        {
            state = 3;
 9a6:	83 e0       	ldi	r24, 0x03	; 3
 9a8:	90 e0       	ldi	r25, 0x00	; 0
 9aa:	90 93 01 02 	sts	0x0201, r25	; 0x800201 <state+0x1>
 9ae:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <state>

000009b2 <.L52>:
        }
        }

        if (PINF & (1<<PF4)==0)                        //voren iets, staan stil
 9b2:	8f e2       	ldi	r24, 0x2F	; 47
 9b4:	90 e0       	ldi	r25, 0x00	; 0
 9b6:	fc 01       	movw	r30, r24
 9b8:	80 81       	ld	r24, Z

000009ba <.Loc.227>:
        {
            state = 0;
        }
        switch(state)
 9ba:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <state>
 9be:	90 91 01 02 	lds	r25, 0x0201	; 0x800201 <state+0x1>
 9c2:	85 30       	cpi	r24, 0x05	; 5
 9c4:	91 05       	cpc	r25, r1
 9c6:	c9 f1       	breq	.+114    	; 0xa3a <.L53>
 9c8:	85 30       	cpi	r24, 0x05	; 5
 9ca:	91 05       	cpc	r25, r1
 9cc:	11 f0       	breq	.+4      	; 0x9d2 <L0^A+0x2>

000009ce <L0^A>:
 9ce:	0c f0       	brlt	.+2      	; 0x9d2 <L0^A+0x2>

000009d0 <L0^A>:
 9d0:	9c cf       	rjmp	.-200    	; 0x90a <.L60>
 9d2:	84 30       	cpi	r24, 0x04	; 4
 9d4:	91 05       	cpc	r25, r1
 9d6:	61 f1       	breq	.+88     	; 0xa30 <.L55>
 9d8:	84 30       	cpi	r24, 0x04	; 4
 9da:	91 05       	cpc	r25, r1
 9dc:	11 f0       	breq	.+4      	; 0x9e2 <L0^A+0x2>

000009de <L0^A>:
 9de:	0c f0       	brlt	.+2      	; 0x9e2 <L0^A+0x2>

000009e0 <L0^A>:
 9e0:	94 cf       	rjmp	.-216    	; 0x90a <.L60>
 9e2:	83 30       	cpi	r24, 0x03	; 3
 9e4:	91 05       	cpc	r25, r1
 9e6:	71 f1       	breq	.+92     	; 0xa44 <.L61>
 9e8:	83 30       	cpi	r24, 0x03	; 3
 9ea:	91 05       	cpc	r25, r1
 9ec:	11 f0       	breq	.+4      	; 0x9f2 <L0^A+0x2>

000009ee <L0^A>:
 9ee:	0c f0       	brlt	.+2      	; 0x9f2 <L0^A+0x2>

000009f0 <L0^A>:
 9f0:	8c cf       	rjmp	.-232    	; 0x90a <.L60>
 9f2:	82 30       	cpi	r24, 0x02	; 2
 9f4:	91 05       	cpc	r25, r1
 9f6:	a9 f0       	breq	.+42     	; 0xa22 <.L57>
 9f8:	82 30       	cpi	r24, 0x02	; 2
 9fa:	91 05       	cpc	r25, r1
 9fc:	11 f0       	breq	.+4      	; 0xa02 <L0^A+0x2>

000009fe <L0^A>:
 9fe:	0c f0       	brlt	.+2      	; 0xa02 <L0^A+0x2>

00000a00 <L0^A>:
 a00:	84 cf       	rjmp	.-248    	; 0x90a <.L60>
 a02:	00 97       	sbiw	r24, 0x00	; 0
 a04:	21 f0       	breq	.+8      	; 0xa0e <.L58>
 a06:	81 30       	cpi	r24, 0x01	; 1
 a08:	91 05       	cpc	r25, r1
 a0a:	21 f0       	breq	.+8      	; 0xa14 <.L59>
 a0c:	1c c0       	rjmp	.+56     	; 0xa46 <.L54>

00000a0e <.L58>:
        {
        case(0):
            rem();
 a0e:	0e 94 47 04 	call	0x88e	; 0x88e <rem>

00000a12 <.Loc.229>:
            break;
 a12:	19 c0       	rjmp	.+50     	; 0xa46 <.L54>

00000a14 <.L59>:

        case(1):
            stuurvooruit();
 a14:	0e 94 70 04 	call	0x8e0	; 0x8e0 <stuurvooruit>

00000a18 <.Loc.231>:
            vroem();
 a18:	0e 94 14 04 	call	0x828	; 0x828 <vroem>

00000a1c <.Loc.232>:
            plantsensoraan();
 a1c:	0e 94 1f 04 	call	0x83e	; 0x83e <plantsensoraan>

00000a20 <.Loc.233>:
            //zij sensoren en sturen bijhouden
            break;
 a20:	12 c0       	rjmp	.+36     	; 0xa46 <.L54>

00000a22 <.L57>:

        case(2):
            rem();
 a22:	0e 94 47 04 	call	0x88e	; 0x88e <rem>

00000a26 <.Loc.235>:
            alarm();
 a26:	0e 94 52 04 	call	0x8a4	; 0x8a4 <alarm>

00000a2a <.Loc.236>:
            door();
 a2a:	0e 94 6e 03 	call	0x6dc	; 0x6dc <door>

00000a2e <.Loc.237>:
            //plant detect
            //alarm
            break;
 a2e:	0b c0       	rjmp	.+22     	; 0xa46 <.L54>

00000a30 <.L55>:
            //bocht
            //plant sensoren uit
            break;

        case(4):
            stuurlinks();
 a30:	0e 94 5a 04 	call	0x8b4	; 0x8b4 <stuurlinks>

00000a34 <.Loc.239>:
            plantsensoraan();
 a34:	0e 94 1f 04 	call	0x83e	; 0x83e <plantsensoraan>

00000a38 <.Loc.240>:
            break;
 a38:	06 c0       	rjmp	.+12     	; 0xa46 <.L54>

00000a3a <.L53>:

        case(5):
            stuurrechts();
 a3a:	0e 94 65 04 	call	0x8ca	; 0x8ca <stuurrechts>

00000a3e <.Loc.242>:
            plantsensoraan();
 a3e:	0e 94 1f 04 	call	0x83e	; 0x83e <plantsensoraan>

00000a42 <.Loc.243>:
            break;
 a42:	01 c0       	rjmp	.+2      	; 0xa46 <.L54>

00000a44 <.L61>:
	...

00000a46 <.L54>:
        if ((PINF & (1<<PF0))==0)       //beide zijkanten checken, rechtdoor
 a46:	61 cf       	rjmp	.-318    	; 0x90a <.L60>

00000a48 <__divmodhi4>:
 a48:	97 fb       	bst	r25, 7

00000a4a <.Loc.1>:
 a4a:	07 2e       	mov	r0, r23

00000a4c <.Loc.2>:
 a4c:	16 f4       	brtc	.+4      	; 0xa52 <.L^B1>

00000a4e <.Loc.3>:
 a4e:	00 94       	com	r0

00000a50 <.Loc.4>:
 a50:	07 d0       	rcall	.+14     	; 0xa60 <__divmodhi4_neg1>

00000a52 <.L^B1>:
 a52:	77 fd       	sbrc	r23, 7

00000a54 <.Loc.6>:
 a54:	09 d0       	rcall	.+18     	; 0xa68 <__divmodhi4_neg2>

00000a56 <.Loc.7>:
 a56:	0e 94 38 05 	call	0xa70	; 0xa70 <__udivmodhi4>

00000a5a <.Loc.8>:
 a5a:	07 fc       	sbrc	r0, 7

00000a5c <.Loc.9>:
 a5c:	05 d0       	rcall	.+10     	; 0xa68 <__divmodhi4_neg2>

00000a5e <.Loc.10>:
 a5e:	3e f4       	brtc	.+14     	; 0xa6e <__divmodhi4_exit>

00000a60 <__divmodhi4_neg1>:
 a60:	90 95       	com	r25

00000a62 <.Loc.12>:
 a62:	81 95       	neg	r24

00000a64 <.Loc.13>:
 a64:	9f 4f       	sbci	r25, 0xFF	; 255

00000a66 <.Loc.14>:
 a66:	08 95       	ret

00000a68 <__divmodhi4_neg2>:
 a68:	70 95       	com	r23

00000a6a <.Loc.16>:
 a6a:	61 95       	neg	r22

00000a6c <.Loc.17>:
 a6c:	7f 4f       	sbci	r23, 0xFF	; 255

00000a6e <__divmodhi4_exit>:
 a6e:	08 95       	ret

00000a70 <__udivmodhi4>:
 a70:	aa 1b       	sub	r26, r26

00000a72 <.Loc.1>:
 a72:	bb 1b       	sub	r27, r27

00000a74 <.Loc.2>:
 a74:	51 e1       	ldi	r21, 0x11	; 17

00000a76 <.Loc.3>:
 a76:	07 c0       	rjmp	.+14     	; 0xa86 <__udivmodhi4_ep>

00000a78 <__udivmodhi4_loop>:
 a78:	aa 1f       	adc	r26, r26

00000a7a <.Loc.5>:
 a7a:	bb 1f       	adc	r27, r27

00000a7c <.Loc.6>:
 a7c:	a6 17       	cp	r26, r22

00000a7e <.Loc.7>:
 a7e:	b7 07       	cpc	r27, r23

00000a80 <.Loc.8>:
 a80:	10 f0       	brcs	.+4      	; 0xa86 <__udivmodhi4_ep>

00000a82 <.Loc.9>:
 a82:	a6 1b       	sub	r26, r22

00000a84 <.Loc.10>:
 a84:	b7 0b       	sbc	r27, r23

00000a86 <__udivmodhi4_ep>:
 a86:	88 1f       	adc	r24, r24

00000a88 <.Loc.12>:
 a88:	99 1f       	adc	r25, r25

00000a8a <.Loc.13>:
 a8a:	5a 95       	dec	r21

00000a8c <.Loc.14>:
 a8c:	a9 f7       	brne	.-22     	; 0xa78 <__udivmodhi4_loop>

00000a8e <.Loc.15>:
 a8e:	80 95       	com	r24

00000a90 <.Loc.16>:
 a90:	90 95       	com	r25

00000a92 <.Loc.17>:
 a92:	bc 01       	movw	r22, r24

00000a94 <.Loc.18>:
 a94:	cd 01       	movw	r24, r26

00000a96 <.Loc.19>:
 a96:	08 95       	ret

00000a98 <__subsf3>:
 a98:	50 58       	subi	r21, 0x80	; 128

00000a9a <__addsf3>:
 a9a:	bb 27       	eor	r27, r27
 a9c:	aa 27       	eor	r26, r26
 a9e:	0e 94 64 05 	call	0xac8	; 0xac8 <__addsf3x>
 aa2:	0c 94 65 06 	jmp	0xcca	; 0xcca <__fp_round>

00000aa6 <.L^B1>:
 aa6:	0e 94 57 06 	call	0xcae	; 0xcae <__fp_pscA>
 aaa:	38 f0       	brcs	.+14     	; 0xaba <.L_nan>
 aac:	0e 94 5e 06 	call	0xcbc	; 0xcbc <__fp_pscB>
 ab0:	20 f0       	brcs	.+8      	; 0xaba <.L_nan>
 ab2:	39 f4       	brne	.+14     	; 0xac2 <.L_inf>
 ab4:	9f 3f       	cpi	r25, 0xFF	; 255
 ab6:	19 f4       	brne	.+6      	; 0xabe <.L_infB>
 ab8:	26 f4       	brtc	.+8      	; 0xac2 <.L_inf>

00000aba <.L_nan>:
 aba:	0c 94 54 06 	jmp	0xca8	; 0xca8 <__fp_nan>

00000abe <.L_infB>:
 abe:	0e f4       	brtc	.+2      	; 0xac2 <.L_inf>
 ac0:	e0 95       	com	r30

00000ac2 <.L_inf>:
 ac2:	e7 fb       	bst	r30, 7
 ac4:	0c 94 4e 06 	jmp	0xc9c	; 0xc9c <__fp_inf>

00000ac8 <__addsf3x>:
 ac8:	e9 2f       	mov	r30, r25
 aca:	0e 94 76 06 	call	0xcec	; 0xcec <__fp_split3>
 ace:	58 f3       	brcs	.-42     	; 0xaa6 <.L^B1>
 ad0:	ba 17       	cp	r27, r26
 ad2:	62 07       	cpc	r22, r18
 ad4:	73 07       	cpc	r23, r19
 ad6:	84 07       	cpc	r24, r20
 ad8:	95 07       	cpc	r25, r21
 ada:	20 f0       	brcs	.+8      	; 0xae4 <.L2^B1>
 adc:	79 f4       	brne	.+30     	; 0xafc <.L4^B1>
 ade:	a6 f5       	brtc	.+104    	; 0xb48 <.L_add>
 ae0:	0c 94 98 06 	jmp	0xd30	; 0xd30 <__fp_zero>

00000ae4 <.L2^B1>:
 ae4:	0e f4       	brtc	.+2      	; 0xae8 <.L3^B1>
 ae6:	e0 95       	com	r30

00000ae8 <.L3^B1>:
 ae8:	0b 2e       	mov	r0, r27
 aea:	ba 2f       	mov	r27, r26
 aec:	a0 2d       	mov	r26, r0
 aee:	0b 01       	movw	r0, r22
 af0:	b9 01       	movw	r22, r18
 af2:	90 01       	movw	r18, r0
 af4:	0c 01       	movw	r0, r24
 af6:	ca 01       	movw	r24, r20
 af8:	a0 01       	movw	r20, r0
 afa:	11 24       	eor	r1, r1

00000afc <.L4^B1>:
 afc:	ff 27       	eor	r31, r31
 afe:	59 1b       	sub	r21, r25

00000b00 <.L5^B1>:
 b00:	99 f0       	breq	.+38     	; 0xb28 <.L7^B1>
 b02:	59 3f       	cpi	r21, 0xF9	; 249
 b04:	50 f4       	brcc	.+20     	; 0xb1a <.L6^B1>
 b06:	50 3e       	cpi	r21, 0xE0	; 224
 b08:	68 f1       	brcs	.+90     	; 0xb64 <.L_ret>
 b0a:	1a 16       	cp	r1, r26
 b0c:	f0 40       	sbci	r31, 0x00	; 0
 b0e:	a2 2f       	mov	r26, r18
 b10:	23 2f       	mov	r18, r19
 b12:	34 2f       	mov	r19, r20
 b14:	44 27       	eor	r20, r20
 b16:	58 5f       	subi	r21, 0xF8	; 248
 b18:	f3 cf       	rjmp	.-26     	; 0xb00 <.L5^B1>

00000b1a <.L6^B1>:
 b1a:	46 95       	lsr	r20
 b1c:	37 95       	ror	r19
 b1e:	27 95       	ror	r18
 b20:	a7 95       	ror	r26
 b22:	f0 40       	sbci	r31, 0x00	; 0
 b24:	53 95       	inc	r21
 b26:	c9 f7       	brne	.-14     	; 0xb1a <.L6^B1>

00000b28 <.L7^B1>:
 b28:	7e f4       	brtc	.+30     	; 0xb48 <.L_add>
 b2a:	1f 16       	cp	r1, r31
 b2c:	ba 0b       	sbc	r27, r26
 b2e:	62 0b       	sbc	r22, r18
 b30:	73 0b       	sbc	r23, r19
 b32:	84 0b       	sbc	r24, r20
 b34:	ba f0       	brmi	.+46     	; 0xb64 <.L_ret>

00000b36 <.L8^B1>:
 b36:	91 50       	subi	r25, 0x01	; 1
 b38:	a1 f0       	breq	.+40     	; 0xb62 <.L9^B1>
 b3a:	ff 0f       	add	r31, r31
 b3c:	bb 1f       	adc	r27, r27
 b3e:	66 1f       	adc	r22, r22
 b40:	77 1f       	adc	r23, r23
 b42:	88 1f       	adc	r24, r24
 b44:	c2 f7       	brpl	.-16     	; 0xb36 <.L8^B1>
 b46:	0e c0       	rjmp	.+28     	; 0xb64 <.L_ret>

00000b48 <.L_add>:
 b48:	ba 0f       	add	r27, r26
 b4a:	62 1f       	adc	r22, r18
 b4c:	73 1f       	adc	r23, r19
 b4e:	84 1f       	adc	r24, r20
 b50:	48 f4       	brcc	.+18     	; 0xb64 <.L_ret>
 b52:	87 95       	ror	r24
 b54:	77 95       	ror	r23
 b56:	67 95       	ror	r22
 b58:	b7 95       	ror	r27
 b5a:	f7 95       	ror	r31
 b5c:	9e 3f       	cpi	r25, 0xFE	; 254
 b5e:	08 f0       	brcs	.+2      	; 0xb62 <.L9^B1>
 b60:	b0 cf       	rjmp	.-160    	; 0xac2 <.L_inf>

00000b62 <.L9^B1>:
 b62:	93 95       	inc	r25

00000b64 <.L_ret>:
 b64:	88 0f       	add	r24, r24
 b66:	08 f0       	brcs	.+2      	; 0xb6a <.L1^B1>
 b68:	99 27       	eor	r25, r25

00000b6a <.L1^B1>:
 b6a:	ee 0f       	add	r30, r30
 b6c:	97 95       	ror	r25
 b6e:	87 95       	ror	r24
 b70:	08 95       	ret

00000b72 <__cmpsf2>:
 b72:	0e 94 2a 06 	call	0xc54	; 0xc54 <__fp_cmp>
 b76:	08 f4       	brcc	.+2      	; 0xb7a <.L1^B1>
 b78:	81 e0       	ldi	r24, 0x01	; 1

00000b7a <.L1^B1>:
 b7a:	08 95       	ret

00000b7c <__fixunssfsi>:
 b7c:	0e 94 7e 06 	call	0xcfc	; 0xcfc <__fp_splitA>
 b80:	88 f0       	brcs	.+34     	; 0xba4 <.L_err>
 b82:	9f 57       	subi	r25, 0x7F	; 127
 b84:	98 f0       	brcs	.+38     	; 0xbac <.L_zr>
 b86:	b9 2f       	mov	r27, r25
 b88:	99 27       	eor	r25, r25
 b8a:	b7 51       	subi	r27, 0x17	; 23
 b8c:	b0 f0       	brcs	.+44     	; 0xbba <.L4^B1>
 b8e:	e1 f0       	breq	.+56     	; 0xbc8 <.L_sign>

00000b90 <.L1^B1>:
 b90:	66 0f       	add	r22, r22
 b92:	77 1f       	adc	r23, r23
 b94:	88 1f       	adc	r24, r24
 b96:	99 1f       	adc	r25, r25
 b98:	1a f0       	brmi	.+6      	; 0xba0 <.L2^B1>
 b9a:	ba 95       	dec	r27
 b9c:	c9 f7       	brne	.-14     	; 0xb90 <.L1^B1>
 b9e:	14 c0       	rjmp	.+40     	; 0xbc8 <.L_sign>

00000ba0 <.L2^B1>:
 ba0:	b1 30       	cpi	r27, 0x01	; 1
 ba2:	91 f0       	breq	.+36     	; 0xbc8 <.L_sign>

00000ba4 <.L_err>:
 ba4:	0e 94 98 06 	call	0xd30	; 0xd30 <__fp_zero>
 ba8:	b1 e0       	ldi	r27, 0x01	; 1
 baa:	08 95       	ret

00000bac <.L_zr>:
 bac:	0c 94 98 06 	jmp	0xd30	; 0xd30 <__fp_zero>

00000bb0 <.L3^B1>:
 bb0:	67 2f       	mov	r22, r23
 bb2:	78 2f       	mov	r23, r24
 bb4:	88 27       	eor	r24, r24
 bb6:	b8 5f       	subi	r27, 0xF8	; 248
 bb8:	39 f0       	breq	.+14     	; 0xbc8 <.L_sign>

00000bba <.L4^B1>:
 bba:	b9 3f       	cpi	r27, 0xF9	; 249
 bbc:	cc f3       	brlt	.-14     	; 0xbb0 <.L3^B1>

00000bbe <.L5^B1>:
 bbe:	86 95       	lsr	r24
 bc0:	77 95       	ror	r23
 bc2:	67 95       	ror	r22
 bc4:	b3 95       	inc	r27
 bc6:	d9 f7       	brne	.-10     	; 0xbbe <.L5^B1>

00000bc8 <.L_sign>:
 bc8:	3e f4       	brtc	.+14     	; 0xbd8 <.L6^B1>
 bca:	90 95       	com	r25
 bcc:	80 95       	com	r24
 bce:	70 95       	com	r23
 bd0:	61 95       	neg	r22
 bd2:	7f 4f       	sbci	r23, 0xFF	; 255
 bd4:	8f 4f       	sbci	r24, 0xFF	; 255
 bd6:	9f 4f       	sbci	r25, 0xFF	; 255

00000bd8 <.L6^B1>:
 bd8:	08 95       	ret

00000bda <__floatunsisf>:
 bda:	e8 94       	clt
 bdc:	09 c0       	rjmp	.+18     	; 0xbf0 <.L1^B1>

00000bde <__floatsisf>:
 bde:	97 fb       	bst	r25, 7
 be0:	3e f4       	brtc	.+14     	; 0xbf0 <.L1^B1>
 be2:	90 95       	com	r25
 be4:	80 95       	com	r24
 be6:	70 95       	com	r23
 be8:	61 95       	neg	r22
 bea:	7f 4f       	sbci	r23, 0xFF	; 255
 bec:	8f 4f       	sbci	r24, 0xFF	; 255
 bee:	9f 4f       	sbci	r25, 0xFF	; 255

00000bf0 <.L1^B1>:
 bf0:	99 23       	and	r25, r25
 bf2:	a9 f0       	breq	.+42     	; 0xc1e <.L4^B1>
 bf4:	f9 2f       	mov	r31, r25
 bf6:	96 e9       	ldi	r25, 0x96	; 150
 bf8:	bb 27       	eor	r27, r27

00000bfa <.L2^B1>:
 bfa:	93 95       	inc	r25
 bfc:	f6 95       	lsr	r31
 bfe:	87 95       	ror	r24
 c00:	77 95       	ror	r23
 c02:	67 95       	ror	r22
 c04:	b7 95       	ror	r27
 c06:	f1 11       	cpse	r31, r1
 c08:	f8 cf       	rjmp	.-16     	; 0xbfa <.L2^B1>
 c0a:	fa f4       	brpl	.+62     	; 0xc4a <.L_pack>
 c0c:	bb 0f       	add	r27, r27
 c0e:	11 f4       	brne	.+4      	; 0xc14 <.L3^B1>
 c10:	60 ff       	sbrs	r22, 0
 c12:	1b c0       	rjmp	.+54     	; 0xc4a <.L_pack>

00000c14 <.L3^B1>:
 c14:	6f 5f       	subi	r22, 0xFF	; 255
 c16:	7f 4f       	sbci	r23, 0xFF	; 255
 c18:	8f 4f       	sbci	r24, 0xFF	; 255
 c1a:	9f 4f       	sbci	r25, 0xFF	; 255
 c1c:	16 c0       	rjmp	.+44     	; 0xc4a <.L_pack>

00000c1e <.L4^B1>:
 c1e:	88 23       	and	r24, r24
 c20:	11 f0       	breq	.+4      	; 0xc26 <.L5^B1>
 c22:	96 e9       	ldi	r25, 0x96	; 150
 c24:	11 c0       	rjmp	.+34     	; 0xc48 <.L8^B1>

00000c26 <.L5^B1>:
 c26:	77 23       	and	r23, r23
 c28:	21 f0       	breq	.+8      	; 0xc32 <.L6^B1>
 c2a:	9e e8       	ldi	r25, 0x8E	; 142
 c2c:	87 2f       	mov	r24, r23
 c2e:	76 2f       	mov	r23, r22
 c30:	05 c0       	rjmp	.+10     	; 0xc3c <.L7^B1>

00000c32 <.L6^B1>:
 c32:	66 23       	and	r22, r22
 c34:	71 f0       	breq	.+28     	; 0xc52 <.L9^B1>
 c36:	96 e8       	ldi	r25, 0x86	; 134
 c38:	86 2f       	mov	r24, r22
 c3a:	70 e0       	ldi	r23, 0x00	; 0

00000c3c <.L7^B1>:
 c3c:	60 e0       	ldi	r22, 0x00	; 0
 c3e:	2a f0       	brmi	.+10     	; 0xc4a <.L_pack>

00000c40 <.L10^B1>:
 c40:	9a 95       	dec	r25
 c42:	66 0f       	add	r22, r22
 c44:	77 1f       	adc	r23, r23
 c46:	88 1f       	adc	r24, r24

00000c48 <.L8^B1>:
 c48:	da f7       	brpl	.-10     	; 0xc40 <.L10^B1>

00000c4a <.L_pack>:
 c4a:	88 0f       	add	r24, r24
 c4c:	96 95       	lsr	r25
 c4e:	87 95       	ror	r24
 c50:	97 f9       	bld	r25, 7

00000c52 <.L9^B1>:
 c52:	08 95       	ret

00000c54 <__fp_cmp>:
 c54:	99 0f       	add	r25, r25
 c56:	00 08       	sbc	r0, r0
 c58:	55 0f       	add	r21, r21
 c5a:	aa 0b       	sbc	r26, r26
 c5c:	e0 e8       	ldi	r30, 0x80	; 128
 c5e:	fe ef       	ldi	r31, 0xFE	; 254
 c60:	16 16       	cp	r1, r22
 c62:	17 06       	cpc	r1, r23
 c64:	e8 07       	cpc	r30, r24
 c66:	f9 07       	cpc	r31, r25
 c68:	c0 f0       	brcs	.+48     	; 0xc9a <.L9^B1>
 c6a:	12 16       	cp	r1, r18
 c6c:	13 06       	cpc	r1, r19
 c6e:	e4 07       	cpc	r30, r20
 c70:	f5 07       	cpc	r31, r21
 c72:	98 f0       	brcs	.+38     	; 0xc9a <.L9^B1>
 c74:	62 1b       	sub	r22, r18
 c76:	73 0b       	sbc	r23, r19
 c78:	84 0b       	sbc	r24, r20
 c7a:	95 0b       	sbc	r25, r21
 c7c:	39 f4       	brne	.+14     	; 0xc8c <.L1^B1>
 c7e:	0a 26       	eor	r0, r26
 c80:	61 f0       	breq	.+24     	; 0xc9a <.L9^B1>
 c82:	23 2b       	or	r18, r19
 c84:	24 2b       	or	r18, r20
 c86:	25 2b       	or	r18, r21
 c88:	21 f4       	brne	.+8      	; 0xc92 <.L2^B1>
 c8a:	08 95       	ret

00000c8c <.L1^B1>:
 c8c:	0a 26       	eor	r0, r26
 c8e:	09 f4       	brne	.+2      	; 0xc92 <.L2^B1>
 c90:	a1 40       	sbci	r26, 0x01	; 1

00000c92 <.L2^B1>:
 c92:	a6 95       	lsr	r26
 c94:	8f ef       	ldi	r24, 0xFF	; 255
 c96:	81 1d       	adc	r24, r1
 c98:	81 1d       	adc	r24, r1

00000c9a <.L9^B1>:
 c9a:	08 95       	ret

00000c9c <__fp_inf>:
 c9c:	97 f9       	bld	r25, 7
 c9e:	9f 67       	ori	r25, 0x7F	; 127
 ca0:	80 e8       	ldi	r24, 0x80	; 128
 ca2:	70 e0       	ldi	r23, 0x00	; 0
 ca4:	60 e0       	ldi	r22, 0x00	; 0
 ca6:	08 95       	ret

00000ca8 <__fp_nan>:
 ca8:	9f ef       	ldi	r25, 0xFF	; 255
 caa:	80 ec       	ldi	r24, 0xC0	; 192
 cac:	08 95       	ret

00000cae <__fp_pscA>:
 cae:	00 24       	eor	r0, r0
 cb0:	0a 94       	dec	r0
 cb2:	16 16       	cp	r1, r22
 cb4:	17 06       	cpc	r1, r23
 cb6:	18 06       	cpc	r1, r24
 cb8:	09 06       	cpc	r0, r25
 cba:	08 95       	ret

00000cbc <__fp_pscB>:
 cbc:	00 24       	eor	r0, r0
 cbe:	0a 94       	dec	r0
 cc0:	12 16       	cp	r1, r18
 cc2:	13 06       	cpc	r1, r19
 cc4:	14 06       	cpc	r1, r20
 cc6:	05 06       	cpc	r0, r21
 cc8:	08 95       	ret

00000cca <__fp_round>:
 cca:	09 2e       	mov	r0, r25
 ccc:	03 94       	inc	r0
 cce:	00 0c       	add	r0, r0
 cd0:	11 f4       	brne	.+4      	; 0xcd6 <.L1^B1>
 cd2:	88 23       	and	r24, r24
 cd4:	52 f0       	brmi	.+20     	; 0xcea <.L3^B1>

00000cd6 <.L1^B1>:
 cd6:	bb 0f       	add	r27, r27
 cd8:	40 f4       	brcc	.+16     	; 0xcea <.L3^B1>
 cda:	bf 2b       	or	r27, r31
 cdc:	11 f4       	brne	.+4      	; 0xce2 <.L2^B1>
 cde:	60 ff       	sbrs	r22, 0
 ce0:	04 c0       	rjmp	.+8      	; 0xcea <.L3^B1>

00000ce2 <.L2^B1>:
 ce2:	6f 5f       	subi	r22, 0xFF	; 255
 ce4:	7f 4f       	sbci	r23, 0xFF	; 255
 ce6:	8f 4f       	sbci	r24, 0xFF	; 255
 ce8:	9f 4f       	sbci	r25, 0xFF	; 255

00000cea <.L3^B1>:
 cea:	08 95       	ret

00000cec <__fp_split3>:
 cec:	57 fd       	sbrc	r21, 7
 cee:	90 58       	subi	r25, 0x80	; 128
 cf0:	44 0f       	add	r20, r20
 cf2:	55 1f       	adc	r21, r21
 cf4:	59 f0       	breq	.+22     	; 0xd0c <.L4^B1>
 cf6:	5f 3f       	cpi	r21, 0xFF	; 255
 cf8:	71 f0       	breq	.+28     	; 0xd16 <.L5^B1>

00000cfa <.L1^B1>:
 cfa:	47 95       	ror	r20

00000cfc <__fp_splitA>:
 cfc:	88 0f       	add	r24, r24
 cfe:	97 fb       	bst	r25, 7
 d00:	99 1f       	adc	r25, r25
 d02:	61 f0       	breq	.+24     	; 0xd1c <.L6^B1>
 d04:	9f 3f       	cpi	r25, 0xFF	; 255
 d06:	79 f0       	breq	.+30     	; 0xd26 <.L7^B1>

00000d08 <.L3^B1>:
 d08:	87 95       	ror	r24
 d0a:	08 95       	ret

00000d0c <.L4^B1>:
 d0c:	12 16       	cp	r1, r18
 d0e:	13 06       	cpc	r1, r19
 d10:	14 06       	cpc	r1, r20
 d12:	55 1f       	adc	r21, r21
 d14:	f2 cf       	rjmp	.-28     	; 0xcfa <.L1^B1>

00000d16 <.L5^B1>:
 d16:	46 95       	lsr	r20
 d18:	f1 df       	rcall	.-30     	; 0xcfc <__fp_splitA>
 d1a:	08 c0       	rjmp	.+16     	; 0xd2c <.L8^B1>

00000d1c <.L6^B1>:
 d1c:	16 16       	cp	r1, r22
 d1e:	17 06       	cpc	r1, r23
 d20:	18 06       	cpc	r1, r24
 d22:	99 1f       	adc	r25, r25
 d24:	f1 cf       	rjmp	.-30     	; 0xd08 <.L3^B1>

00000d26 <.L7^B1>:
 d26:	86 95       	lsr	r24
 d28:	71 05       	cpc	r23, r1
 d2a:	61 05       	cpc	r22, r1

00000d2c <.L8^B1>:
 d2c:	08 94       	sec
 d2e:	08 95       	ret

00000d30 <__fp_zero>:
 d30:	e8 94       	clt

00000d32 <__fp_szero>:
 d32:	bb 27       	eor	r27, r27
 d34:	66 27       	eor	r22, r22
 d36:	77 27       	eor	r23, r23
 d38:	cb 01       	movw	r24, r22
 d3a:	97 f9       	bld	r25, 7
 d3c:	08 95       	ret

00000d3e <__gesf2>:
 d3e:	0e 94 2a 06 	call	0xc54	; 0xc54 <__fp_cmp>
 d42:	08 f4       	brcc	.+2      	; 0xd46 <.L1^B1>
 d44:	8f ef       	ldi	r24, 0xFF	; 255

00000d46 <.L1^B1>:
 d46:	08 95       	ret

00000d48 <__mulsf3>:
 d48:	0e 94 b7 06 	call	0xd6e	; 0xd6e <__mulsf3x>
 d4c:	0c 94 65 06 	jmp	0xcca	; 0xcca <__fp_round>

00000d50 <.L^B1>:
 d50:	0e 94 57 06 	call	0xcae	; 0xcae <__fp_pscA>
 d54:	38 f0       	brcs	.+14     	; 0xd64 <.L1^B1>
 d56:	0e 94 5e 06 	call	0xcbc	; 0xcbc <__fp_pscB>
 d5a:	20 f0       	brcs	.+8      	; 0xd64 <.L1^B1>
 d5c:	95 23       	and	r25, r21
 d5e:	11 f0       	breq	.+4      	; 0xd64 <.L1^B1>
 d60:	0c 94 4e 06 	jmp	0xc9c	; 0xc9c <__fp_inf>

00000d64 <.L1^B1>:
 d64:	0c 94 54 06 	jmp	0xca8	; 0xca8 <__fp_nan>

00000d68 <.L2^B1>:
 d68:	11 24       	eor	r1, r1
 d6a:	0c 94 99 06 	jmp	0xd32	; 0xd32 <__fp_szero>

00000d6e <__mulsf3x>:
 d6e:	0e 94 76 06 	call	0xcec	; 0xcec <__fp_split3>
 d72:	70 f3       	brcs	.-36     	; 0xd50 <.L^B1>

00000d74 <__mulsf3_pse>:
 d74:	95 9f       	mul	r25, r21
 d76:	c1 f3       	breq	.-16     	; 0xd68 <.L2^B1>
 d78:	95 0f       	add	r25, r21
 d7a:	50 e0       	ldi	r21, 0x00	; 0
 d7c:	55 1f       	adc	r21, r21
 d7e:	62 9f       	mul	r22, r18
 d80:	f0 01       	movw	r30, r0
 d82:	72 9f       	mul	r23, r18
 d84:	bb 27       	eor	r27, r27
 d86:	f0 0d       	add	r31, r0
 d88:	b1 1d       	adc	r27, r1
 d8a:	63 9f       	mul	r22, r19
 d8c:	aa 27       	eor	r26, r26
 d8e:	f0 0d       	add	r31, r0
 d90:	b1 1d       	adc	r27, r1
 d92:	aa 1f       	adc	r26, r26
 d94:	64 9f       	mul	r22, r20
 d96:	66 27       	eor	r22, r22
 d98:	b0 0d       	add	r27, r0
 d9a:	a1 1d       	adc	r26, r1
 d9c:	66 1f       	adc	r22, r22
 d9e:	82 9f       	mul	r24, r18
 da0:	22 27       	eor	r18, r18
 da2:	b0 0d       	add	r27, r0
 da4:	a1 1d       	adc	r26, r1
 da6:	62 1f       	adc	r22, r18
 da8:	73 9f       	mul	r23, r19
 daa:	b0 0d       	add	r27, r0
 dac:	a1 1d       	adc	r26, r1
 dae:	62 1f       	adc	r22, r18
 db0:	83 9f       	mul	r24, r19
 db2:	a0 0d       	add	r26, r0
 db4:	61 1d       	adc	r22, r1
 db6:	22 1f       	adc	r18, r18
 db8:	74 9f       	mul	r23, r20
 dba:	33 27       	eor	r19, r19
 dbc:	a0 0d       	add	r26, r0
 dbe:	61 1d       	adc	r22, r1
 dc0:	23 1f       	adc	r18, r19
 dc2:	84 9f       	mul	r24, r20
 dc4:	60 0d       	add	r22, r0
 dc6:	21 1d       	adc	r18, r1
 dc8:	82 2f       	mov	r24, r18
 dca:	76 2f       	mov	r23, r22
 dcc:	6a 2f       	mov	r22, r26
 dce:	11 24       	eor	r1, r1
 dd0:	9f 57       	subi	r25, 0x7F	; 127
 dd2:	50 40       	sbci	r21, 0x00	; 0
 dd4:	9a f0       	brmi	.+38     	; 0xdfc <.L13^B1>
 dd6:	f1 f0       	breq	.+60     	; 0xe14 <.L15^B1>

00000dd8 <.L10^B1>:
 dd8:	88 23       	and	r24, r24
 dda:	4a f0       	brmi	.+18     	; 0xdee <.L11^B1>
 ddc:	ee 0f       	add	r30, r30
 dde:	ff 1f       	adc	r31, r31
 de0:	bb 1f       	adc	r27, r27
 de2:	66 1f       	adc	r22, r22
 de4:	77 1f       	adc	r23, r23
 de6:	88 1f       	adc	r24, r24
 de8:	91 50       	subi	r25, 0x01	; 1
 dea:	50 40       	sbci	r21, 0x00	; 0
 dec:	a9 f7       	brne	.-22     	; 0xdd8 <.L10^B1>

00000dee <.L11^B1>:
 dee:	9e 3f       	cpi	r25, 0xFE	; 254
 df0:	51 05       	cpc	r21, r1
 df2:	80 f0       	brcs	.+32     	; 0xe14 <.L15^B1>
 df4:	0c 94 4e 06 	jmp	0xc9c	; 0xc9c <__fp_inf>

00000df8 <.L12^B1>:
 df8:	0c 94 99 06 	jmp	0xd32	; 0xd32 <__fp_szero>

00000dfc <.L13^B1>:
 dfc:	5f 3f       	cpi	r21, 0xFF	; 255
 dfe:	e4 f3       	brlt	.-8      	; 0xdf8 <.L12^B1>
 e00:	98 3e       	cpi	r25, 0xE8	; 232
 e02:	d4 f3       	brlt	.-12     	; 0xdf8 <.L12^B1>

00000e04 <.L14^B1>:
 e04:	86 95       	lsr	r24
 e06:	77 95       	ror	r23
 e08:	67 95       	ror	r22
 e0a:	b7 95       	ror	r27
 e0c:	f7 95       	ror	r31
 e0e:	e7 95       	ror	r30
 e10:	9f 5f       	subi	r25, 0xFF	; 255
 e12:	c1 f7       	brne	.-16     	; 0xe04 <.L14^B1>

00000e14 <.L15^B1>:
 e14:	fe 2b       	or	r31, r30
 e16:	88 0f       	add	r24, r24
 e18:	91 1d       	adc	r25, r1
 e1a:	96 95       	lsr	r25
 e1c:	87 95       	ror	r24
 e1e:	97 f9       	bld	r25, 7
 e20:	08 95       	ret

00000e22 <_exit>:
 e22:	f8 94       	cli

00000e24 <__stop_program>:
 e24:	ff cf       	rjmp	.-2      	; 0xe24 <__stop_program>
