
bin\Debug\basis.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000002  00800200  00000e76  00000f0a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000e76  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .fuse         00000003  00820000  00820000  00000f0c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .comment      00000012  00000000  00000000  00000f0f  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000f24  2**2
                  CONTENTS, READONLY, OCTETS
  5 .debug_aranges 000000b8  00000000  00000000  00000f68  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  6 .debug_info   0000105b  00000000  00000000  00001020  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  7 .debug_abbrev 00000db3  00000000  00000000  0000207b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  8 .debug_line   0000095d  00000000  00000000  00002e2e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  9 .debug_frame  00000310  00000000  00000000  0000378c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_str    00000611  00000000  00000000  00003a9c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_line_str 000001b8  00000000  00000000  000040ad  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 72 00 	jmp	0xe4	; 0xe4 <__ctors_end>
   4:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
   8:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
   c:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  10:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  14:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  18:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  1c:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  20:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  24:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  28:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  2c:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  30:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  34:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  38:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  3c:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  40:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  44:	0c 94 16 02 	jmp	0x42c	; 0x42c <__vector_17>
  48:	0c 94 3e 02 	jmp	0x47c	; 0x47c <__vector_18>
  4c:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  50:	0c 94 e5 01 	jmp	0x3ca	; 0x3ca <__vector_20>
  54:	0c 94 fc 00 	jmp	0x1f8	; 0x1f8 <__vector_21>
  58:	0c 94 2a 01 	jmp	0x254	; 0x254 <__vector_22>
  5c:	0c 94 8d 00 	jmp	0x11a	; 0x11a <__vector_23>
  60:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  64:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  68:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  6c:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  70:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  74:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  78:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  7c:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  80:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  84:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  88:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  8c:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  90:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  94:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  98:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  9c:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  a0:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  a4:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  a8:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  ac:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  b0:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  b4:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  b8:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  bc:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  c0:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  c4:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  c8:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  cc:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  d0:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  d4:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  d8:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  dc:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
  e0:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	12 e0       	ldi	r17, 0x02	; 2

000000f6 <.Loc.1>:
  f6:	a0 e0       	ldi	r26, 0x00	; 0

000000f8 <.Loc.2>:
  f8:	b2 e0       	ldi	r27, 0x02	; 2

000000fa <.Loc.3>:
  fa:	e6 e7       	ldi	r30, 0x76	; 118

000000fc <.Loc.4>:
  fc:	fe e0       	ldi	r31, 0x0E	; 14

000000fe <.Loc.5>:
  fe:	00 e0       	ldi	r16, 0x00	; 0

00000100 <.Loc.6>:
 100:	0b bf       	out	0x3b, r16	; 59

00000102 <.Loc.7>:
 102:	02 c0       	rjmp	.+4      	; 0x108 <.L__do_copy_data_start>

00000104 <.L__do_copy_data_loop>:
 104:	07 90       	elpm	r0, Z+

00000106 <.Loc.9>:
 106:	0d 92       	st	X+, r0

00000108 <.L__do_copy_data_start>:
 108:	a2 30       	cpi	r26, 0x02	; 2

0000010a <.Loc.11>:
 10a:	b1 07       	cpc	r27, r17

0000010c <.Loc.12>:
 10c:	d9 f7       	brne	.-10     	; 0x104 <.L__do_copy_data_loop>

0000010e <L0^A>:
 10e:	0e 94 09 05 	call	0xa12	; 0xa12 <main>
 112:	0c 94 39 07 	jmp	0xe72	; 0xe72 <_exit>

00000116 <__bad_interrupt>:
 116:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000011a <__vector_23>:
#include <avr/io.h>
#include <avr/interrupt.h>
#include "h_bridge.h"

ISR(TIMER0_OVF_vect)
{
 11a:	1f 92       	push	r1
 11c:	0f 92       	push	r0
 11e:	0f b6       	in	r0, 0x3f	; 63
 120:	0f 92       	push	r0
 122:	11 24       	eor	r1, r1
 124:	0b b6       	in	r0, 0x3b	; 59
 126:	0f 92       	push	r0
 128:	2f 93       	push	r18
 12a:	8f 93       	push	r24
 12c:	9f 93       	push	r25
 12e:	ef 93       	push	r30
 130:	ff 93       	push	r31
 132:	cf 93       	push	r28
 134:	df 93       	push	r29
 136:	cd b7       	in	r28, 0x3d	; 61
 138:	de b7       	in	r29, 0x3e	; 62

0000013a <.Loc.1>:
	if (OCR0A == 0 && OCR0B == 0)
 13a:	87 e4       	ldi	r24, 0x47	; 71
 13c:	90 e0       	ldi	r25, 0x00	; 0
 13e:	fc 01       	movw	r30, r24
 140:	80 81       	ld	r24, Z

00000142 <.Loc.2>:
 142:	88 23       	and	r24, r24
 144:	c9 f4       	brne	.+50     	; 0x178 <.L2>

00000146 <.Loc.3>:
 146:	88 e4       	ldi	r24, 0x48	; 72
 148:	90 e0       	ldi	r25, 0x00	; 0
 14a:	fc 01       	movw	r30, r24
 14c:	80 81       	ld	r24, Z

0000014e <.Loc.4>:
 14e:	88 23       	and	r24, r24
 150:	99 f4       	brne	.+38     	; 0x178 <.L2>

00000152 <.Loc.5>:
	{
		PORT_RPWM &= ~(1<<PIN_RPWM);
 152:	82 e0       	ldi	r24, 0x02	; 2
 154:	91 e0       	ldi	r25, 0x01	; 1
 156:	fc 01       	movw	r30, r24
 158:	20 81       	ld	r18, Z

0000015a <.Loc.6>:
 15a:	82 e0       	ldi	r24, 0x02	; 2
 15c:	91 e0       	ldi	r25, 0x01	; 1

0000015e <.Loc.7>:
 15e:	2f 7b       	andi	r18, 0xBF	; 191
 160:	fc 01       	movw	r30, r24
 162:	20 83       	st	Z, r18

00000164 <.Loc.8>:
		PORT_LPWM &= ~(1<<PIN_LPWM);
 164:	81 e3       	ldi	r24, 0x31	; 49
 166:	90 e0       	ldi	r25, 0x00	; 0
 168:	fc 01       	movw	r30, r24
 16a:	20 81       	ld	r18, Z

0000016c <.Loc.9>:
 16c:	81 e3       	ldi	r24, 0x31	; 49
 16e:	90 e0       	ldi	r25, 0x00	; 0

00000170 <.Loc.10>:
 170:	2f 7d       	andi	r18, 0xDF	; 223
 172:	fc 01       	movw	r30, r24
 174:	20 83       	st	Z, r18

00000176 <.Loc.11>:
	else if (OCR0B != 0)
	{
		PORT_RPWM &= ~(1<<PIN_RPWM);
		PORT_LPWM |= (1<<PIN_LPWM);
	}
}
 176:	31 c0       	rjmp	.+98     	; 0x1da <.L5>

00000178 <.L2>:
	else if (OCR0A != 0)
 178:	87 e4       	ldi	r24, 0x47	; 71
 17a:	90 e0       	ldi	r25, 0x00	; 0
 17c:	fc 01       	movw	r30, r24
 17e:	80 81       	ld	r24, Z

00000180 <.Loc.13>:
 180:	88 23       	and	r24, r24
 182:	99 f0       	breq	.+38     	; 0x1aa <.L4>

00000184 <.Loc.14>:
		PORT_LPWM &= ~(1<<PIN_LPWM);
 184:	81 e3       	ldi	r24, 0x31	; 49
 186:	90 e0       	ldi	r25, 0x00	; 0
 188:	fc 01       	movw	r30, r24
 18a:	20 81       	ld	r18, Z

0000018c <.Loc.15>:
 18c:	81 e3       	ldi	r24, 0x31	; 49
 18e:	90 e0       	ldi	r25, 0x00	; 0

00000190 <.Loc.16>:
 190:	2f 7d       	andi	r18, 0xDF	; 223
 192:	fc 01       	movw	r30, r24
 194:	20 83       	st	Z, r18

00000196 <.Loc.17>:
		PORT_RPWM |= (1<<PIN_RPWM);
 196:	82 e0       	ldi	r24, 0x02	; 2
 198:	91 e0       	ldi	r25, 0x01	; 1
 19a:	fc 01       	movw	r30, r24
 19c:	20 81       	ld	r18, Z
 19e:	82 e0       	ldi	r24, 0x02	; 2
 1a0:	91 e0       	ldi	r25, 0x01	; 1

000001a2 <.Loc.18>:
 1a2:	20 64       	ori	r18, 0x40	; 64
 1a4:	fc 01       	movw	r30, r24
 1a6:	20 83       	st	Z, r18

000001a8 <.Loc.19>:
}
 1a8:	18 c0       	rjmp	.+48     	; 0x1da <.L5>

000001aa <.L4>:
	else if (OCR0B != 0)
 1aa:	88 e4       	ldi	r24, 0x48	; 72
 1ac:	90 e0       	ldi	r25, 0x00	; 0
 1ae:	fc 01       	movw	r30, r24
 1b0:	80 81       	ld	r24, Z

000001b2 <.Loc.21>:
 1b2:	88 23       	and	r24, r24
 1b4:	91 f0       	breq	.+36     	; 0x1da <.L5>

000001b6 <.Loc.22>:
		PORT_RPWM &= ~(1<<PIN_RPWM);
 1b6:	82 e0       	ldi	r24, 0x02	; 2
 1b8:	91 e0       	ldi	r25, 0x01	; 1
 1ba:	fc 01       	movw	r30, r24
 1bc:	20 81       	ld	r18, Z

000001be <.Loc.23>:
 1be:	82 e0       	ldi	r24, 0x02	; 2
 1c0:	91 e0       	ldi	r25, 0x01	; 1

000001c2 <.Loc.24>:
 1c2:	2f 7b       	andi	r18, 0xBF	; 191
 1c4:	fc 01       	movw	r30, r24
 1c6:	20 83       	st	Z, r18

000001c8 <.Loc.25>:
		PORT_LPWM |= (1<<PIN_LPWM);
 1c8:	81 e3       	ldi	r24, 0x31	; 49
 1ca:	90 e0       	ldi	r25, 0x00	; 0
 1cc:	fc 01       	movw	r30, r24
 1ce:	20 81       	ld	r18, Z
 1d0:	81 e3       	ldi	r24, 0x31	; 49
 1d2:	90 e0       	ldi	r25, 0x00	; 0

000001d4 <.Loc.26>:
 1d4:	20 62       	ori	r18, 0x20	; 32
 1d6:	fc 01       	movw	r30, r24
 1d8:	20 83       	st	Z, r18

000001da <.L5>:
}
 1da:	00 00       	nop
 1dc:	df 91       	pop	r29
 1de:	cf 91       	pop	r28
 1e0:	ff 91       	pop	r31
 1e2:	ef 91       	pop	r30
 1e4:	9f 91       	pop	r25
 1e6:	8f 91       	pop	r24
 1e8:	2f 91       	pop	r18
 1ea:	0f 90       	pop	r0
 1ec:	0b be       	out	0x3b, r0	; 59
 1ee:	0f 90       	pop	r0
 1f0:	0f be       	out	0x3f, r0	; 63
 1f2:	0f 90       	pop	r0
 1f4:	1f 90       	pop	r1
 1f6:	18 95       	reti

000001f8 <__vector_21>:

ISR(TIMER0_COMPA_vect)
{
 1f8:	1f 92       	push	r1
 1fa:	0f 92       	push	r0
 1fc:	0f b6       	in	r0, 0x3f	; 63
 1fe:	0f 92       	push	r0
 200:	11 24       	eor	r1, r1
 202:	0b b6       	in	r0, 0x3b	; 59
 204:	0f 92       	push	r0
 206:	2f 93       	push	r18
 208:	8f 93       	push	r24
 20a:	9f 93       	push	r25
 20c:	ef 93       	push	r30
 20e:	ff 93       	push	r31
 210:	cf 93       	push	r28
 212:	df 93       	push	r29
 214:	cd b7       	in	r28, 0x3d	; 61
 216:	de b7       	in	r29, 0x3e	; 62

00000218 <.Loc.29>:
	if (OCR0A != 255)
 218:	87 e4       	ldi	r24, 0x47	; 71
 21a:	90 e0       	ldi	r25, 0x00	; 0
 21c:	fc 01       	movw	r30, r24
 21e:	80 81       	ld	r24, Z

00000220 <.Loc.30>:
 220:	8f 3f       	cpi	r24, 0xFF	; 255
 222:	49 f0       	breq	.+18     	; 0x236 <.L8>

00000224 <.Loc.31>:
	{
		PORT_RPWM &= ~(1<<PIN_RPWM);
 224:	82 e0       	ldi	r24, 0x02	; 2
 226:	91 e0       	ldi	r25, 0x01	; 1
 228:	fc 01       	movw	r30, r24
 22a:	20 81       	ld	r18, Z

0000022c <.Loc.32>:
 22c:	82 e0       	ldi	r24, 0x02	; 2
 22e:	91 e0       	ldi	r25, 0x01	; 1

00000230 <.Loc.33>:
 230:	2f 7b       	andi	r18, 0xBF	; 191
 232:	fc 01       	movw	r30, r24
 234:	20 83       	st	Z, r18

00000236 <.L8>:
	}
}
 236:	00 00       	nop
 238:	df 91       	pop	r29
 23a:	cf 91       	pop	r28
 23c:	ff 91       	pop	r31
 23e:	ef 91       	pop	r30
 240:	9f 91       	pop	r25
 242:	8f 91       	pop	r24
 244:	2f 91       	pop	r18
 246:	0f 90       	pop	r0
 248:	0b be       	out	0x3b, r0	; 59
 24a:	0f 90       	pop	r0
 24c:	0f be       	out	0x3f, r0	; 63
 24e:	0f 90       	pop	r0
 250:	1f 90       	pop	r1
 252:	18 95       	reti

00000254 <__vector_22>:

ISR(TIMER0_COMPB_vect)
{
 254:	1f 92       	push	r1
 256:	0f 92       	push	r0
 258:	0f b6       	in	r0, 0x3f	; 63
 25a:	0f 92       	push	r0
 25c:	11 24       	eor	r1, r1
 25e:	0b b6       	in	r0, 0x3b	; 59
 260:	0f 92       	push	r0
 262:	2f 93       	push	r18
 264:	8f 93       	push	r24
 266:	9f 93       	push	r25
 268:	ef 93       	push	r30
 26a:	ff 93       	push	r31
 26c:	cf 93       	push	r28
 26e:	df 93       	push	r29
 270:	cd b7       	in	r28, 0x3d	; 61
 272:	de b7       	in	r29, 0x3e	; 62

00000274 <.Loc.36>:
	if (OCR0B != 255)
 274:	88 e4       	ldi	r24, 0x48	; 72
 276:	90 e0       	ldi	r25, 0x00	; 0
 278:	fc 01       	movw	r30, r24
 27a:	80 81       	ld	r24, Z

0000027c <.Loc.37>:
 27c:	8f 3f       	cpi	r24, 0xFF	; 255
 27e:	49 f0       	breq	.+18     	; 0x292 <.L11>

00000280 <.Loc.38>:
	{
		PORT_LPWM &= ~(1<<PIN_LPWM);
 280:	81 e3       	ldi	r24, 0x31	; 49
 282:	90 e0       	ldi	r25, 0x00	; 0
 284:	fc 01       	movw	r30, r24
 286:	20 81       	ld	r18, Z

00000288 <.Loc.39>:
 288:	81 e3       	ldi	r24, 0x31	; 49
 28a:	90 e0       	ldi	r25, 0x00	; 0

0000028c <.Loc.40>:
 28c:	2f 7d       	andi	r18, 0xDF	; 223
 28e:	fc 01       	movw	r30, r24
 290:	20 83       	st	Z, r18

00000292 <.L11>:
	}
}
 292:	00 00       	nop
 294:	df 91       	pop	r29
 296:	cf 91       	pop	r28
 298:	ff 91       	pop	r31
 29a:	ef 91       	pop	r30
 29c:	9f 91       	pop	r25
 29e:	8f 91       	pop	r24
 2a0:	2f 91       	pop	r18
 2a2:	0f 90       	pop	r0
 2a4:	0b be       	out	0x3b, r0	; 59
 2a6:	0f 90       	pop	r0
 2a8:	0f be       	out	0x3f, r0	; 63
 2aa:	0f 90       	pop	r0
 2ac:	1f 90       	pop	r1
 2ae:	18 95       	reti

000002b0 <init_h_bridge>:

void init_h_bridge(void)
{
 2b0:	cf 93       	push	r28
 2b2:	df 93       	push	r29
 2b4:	cd b7       	in	r28, 0x3d	; 61
 2b6:	de b7       	in	r29, 0x3e	; 62

000002b8 <.Loc.43>:
	// Config pins as output
	DDR_RPWM |= (1<<PIN_RPWM);
 2b8:	81 e0       	ldi	r24, 0x01	; 1
 2ba:	91 e0       	ldi	r25, 0x01	; 1
 2bc:	fc 01       	movw	r30, r24
 2be:	20 81       	ld	r18, Z
 2c0:	81 e0       	ldi	r24, 0x01	; 1
 2c2:	91 e0       	ldi	r25, 0x01	; 1

000002c4 <.Loc.44>:
 2c4:	20 64       	ori	r18, 0x40	; 64
 2c6:	fc 01       	movw	r30, r24
 2c8:	20 83       	st	Z, r18

000002ca <.Loc.45>:
	DDR_LPWM |= (1<<PIN_LPWM);
 2ca:	80 e3       	ldi	r24, 0x30	; 48
 2cc:	90 e0       	ldi	r25, 0x00	; 0
 2ce:	fc 01       	movw	r30, r24
 2d0:	20 81       	ld	r18, Z
 2d2:	80 e3       	ldi	r24, 0x30	; 48
 2d4:	90 e0       	ldi	r25, 0x00	; 0

000002d6 <.Loc.46>:
 2d6:	20 62       	ori	r18, 0x20	; 32
 2d8:	fc 01       	movw	r30, r24
 2da:	20 83       	st	Z, r18

000002dc <.Loc.47>:

	// Output low
	PORT_RPWM &= ~(1<<PIN_RPWM);
 2dc:	82 e0       	ldi	r24, 0x02	; 2
 2de:	91 e0       	ldi	r25, 0x01	; 1
 2e0:	fc 01       	movw	r30, r24
 2e2:	20 81       	ld	r18, Z

000002e4 <.Loc.48>:
 2e4:	82 e0       	ldi	r24, 0x02	; 2
 2e6:	91 e0       	ldi	r25, 0x01	; 1

000002e8 <.Loc.49>:
 2e8:	2f 7b       	andi	r18, 0xBF	; 191
 2ea:	fc 01       	movw	r30, r24
 2ec:	20 83       	st	Z, r18

000002ee <.Loc.50>:
	PORT_LPWM &= ~(1<<PIN_LPWM);
 2ee:	81 e3       	ldi	r24, 0x31	; 49
 2f0:	90 e0       	ldi	r25, 0x00	; 0
 2f2:	fc 01       	movw	r30, r24
 2f4:	20 81       	ld	r18, Z

000002f6 <.Loc.51>:
 2f6:	81 e3       	ldi	r24, 0x31	; 49
 2f8:	90 e0       	ldi	r25, 0x00	; 0

000002fa <.Loc.52>:
 2fa:	2f 7d       	andi	r18, 0xDF	; 223
 2fc:	fc 01       	movw	r30, r24
 2fe:	20 83       	st	Z, r18

00000300 <.Loc.53>:

	// Use mode 0, clkdiv = 64
	TCCR0A = 0;
 300:	84 e4       	ldi	r24, 0x44	; 68
 302:	90 e0       	ldi	r25, 0x00	; 0

00000304 <.Loc.54>:
 304:	fc 01       	movw	r30, r24
 306:	10 82       	st	Z, r1

00000308 <.Loc.55>:
	TCCR0B = (0<<CS02) | (1<<CS01) | (1<<CS00);
 308:	85 e4       	ldi	r24, 0x45	; 69
 30a:	90 e0       	ldi	r25, 0x00	; 0

0000030c <.Loc.56>:
 30c:	23 e0       	ldi	r18, 0x03	; 3
 30e:	fc 01       	movw	r30, r24
 310:	20 83       	st	Z, r18

00000312 <.Loc.57>:

	// Disable PWM output
	OCR0A = 0;
 312:	87 e4       	ldi	r24, 0x47	; 71
 314:	90 e0       	ldi	r25, 0x00	; 0

00000316 <.Loc.58>:
 316:	fc 01       	movw	r30, r24
 318:	10 82       	st	Z, r1

0000031a <.Loc.59>:
	OCR0B = 0;
 31a:	88 e4       	ldi	r24, 0x48	; 72
 31c:	90 e0       	ldi	r25, 0x00	; 0

0000031e <.Loc.60>:
 31e:	fc 01       	movw	r30, r24
 320:	10 82       	st	Z, r1

00000322 <.Loc.61>:

	// Interrupts on OCA, OCB and OVF
	TIMSK0 = (1<<OCIE0B) | (1<<OCIE0A) | (1<<TOIE0);
 322:	8e e6       	ldi	r24, 0x6E	; 110
 324:	90 e0       	ldi	r25, 0x00	; 0

00000326 <.Loc.62>:
 326:	27 e0       	ldi	r18, 0x07	; 7
 328:	fc 01       	movw	r30, r24
 32a:	20 83       	st	Z, r18

0000032c <.Loc.63>:

	sei();
 32c:	78 94       	sei

0000032e <.Loc.64>:
}
 32e:	00 00       	nop
 330:	df 91       	pop	r29
 332:	cf 91       	pop	r28
 334:	08 95       	ret

00000336 <h_bridge_set_percentage>:

void h_bridge_set_percentage(signed char percentage)
{
 336:	cf 93       	push	r28
 338:	df 93       	push	r29
 33a:	0f 92       	push	r0
 33c:	cd b7       	in	r28, 0x3d	; 61
 33e:	de b7       	in	r29, 0x3e	; 62
 340:	89 83       	std	Y+1, r24	; 0x01

00000342 <.Loc.66>:
	if (percentage >= -100 && percentage <= 100)
 342:	89 81       	ldd	r24, Y+1	; 0x01
 344:	8c 39       	cpi	r24, 0x9C	; 156
 346:	e4 f1       	brlt	.+120    	; 0x3c0 <.L16>

00000348 <.Loc.67>:
 348:	89 81       	ldd	r24, Y+1	; 0x01
 34a:	84 36       	cpi	r24, 0x64	; 100
 34c:	09 f0       	breq	.+2      	; 0x350 <.Loc.68>

0000034e <L0^A>:
 34e:	c4 f5       	brge	.+112    	; 0x3c0 <.L16>

00000350 <.Loc.68>:
	{
		if (percentage >= 0)
 350:	89 81       	ldd	r24, Y+1	; 0x01
 352:	88 23       	and	r24, r24
 354:	dc f0       	brlt	.+54     	; 0x38c <.L15>

00000356 <.Loc.69>:
		{
			// Disable LPWM, calculate RPWM
			OCR0B = 0;
 356:	88 e4       	ldi	r24, 0x48	; 72
 358:	90 e0       	ldi	r25, 0x00	; 0

0000035a <.Loc.70>:
 35a:	fc 01       	movw	r30, r24
 35c:	10 82       	st	Z, r1

0000035e <.Loc.71>:
			OCR0A = (255*percentage)/100;
 35e:	89 81       	ldd	r24, Y+1	; 0x01
 360:	08 2e       	mov	r0, r24
 362:	00 0c       	add	r0, r0
 364:	99 0b       	sbc	r25, r25
 366:	2f ef       	ldi	r18, 0xFF	; 255
 368:	28 9f       	mul	r18, r24
 36a:	a0 01       	movw	r20, r0
 36c:	29 9f       	mul	r18, r25
 36e:	50 0d       	add	r21, r0
 370:	11 24       	eor	r1, r1

00000372 <.Loc.72>:
 372:	24 e6       	ldi	r18, 0x64	; 100
 374:	30 e0       	ldi	r19, 0x00	; 0
 376:	ca 01       	movw	r24, r20
 378:	b9 01       	movw	r22, r18
 37a:	0e 94 4c 05 	call	0xa98	; 0xa98 <__divmodhi4>
 37e:	cb 01       	movw	r24, r22
 380:	9c 01       	movw	r18, r24

00000382 <.Loc.73>:
 382:	87 e4       	ldi	r24, 0x47	; 71
 384:	90 e0       	ldi	r25, 0x00	; 0

00000386 <.Loc.74>:
 386:	fc 01       	movw	r30, r24
 388:	20 83       	st	Z, r18

0000038a <.Loc.75>:
			// Disable RPWM, calculate LPWM
			OCR0A = 0;
			OCR0B = (255*percentage)/-100;
		}
	}
}
 38a:	1a c0       	rjmp	.+52     	; 0x3c0 <.L16>

0000038c <.L15>:
			OCR0A = 0;
 38c:	87 e4       	ldi	r24, 0x47	; 71
 38e:	90 e0       	ldi	r25, 0x00	; 0

00000390 <.Loc.77>:
 390:	fc 01       	movw	r30, r24
 392:	10 82       	st	Z, r1

00000394 <.Loc.78>:
			OCR0B = (255*percentage)/-100;
 394:	89 81       	ldd	r24, Y+1	; 0x01
 396:	08 2e       	mov	r0, r24
 398:	00 0c       	add	r0, r0
 39a:	99 0b       	sbc	r25, r25
 39c:	2f ef       	ldi	r18, 0xFF	; 255
 39e:	28 9f       	mul	r18, r24
 3a0:	a0 01       	movw	r20, r0
 3a2:	29 9f       	mul	r18, r25
 3a4:	50 0d       	add	r21, r0
 3a6:	11 24       	eor	r1, r1

000003a8 <.Loc.79>:
 3a8:	2c e9       	ldi	r18, 0x9C	; 156
 3aa:	3f ef       	ldi	r19, 0xFF	; 255
 3ac:	ca 01       	movw	r24, r20
 3ae:	b9 01       	movw	r22, r18
 3b0:	0e 94 4c 05 	call	0xa98	; 0xa98 <__divmodhi4>
 3b4:	cb 01       	movw	r24, r22
 3b6:	9c 01       	movw	r18, r24

000003b8 <.Loc.80>:
 3b8:	88 e4       	ldi	r24, 0x48	; 72
 3ba:	90 e0       	ldi	r25, 0x00	; 0

000003bc <.Loc.81>:
 3bc:	fc 01       	movw	r30, r24
 3be:	20 83       	st	Z, r18

000003c0 <.L16>:
}
 3c0:	00 00       	nop
 3c2:	0f 90       	pop	r0
 3c4:	df 91       	pop	r29
 3c6:	cf 91       	pop	r28
 3c8:	08 95       	ret

000003ca <__vector_20>:
#define RESET_VALUE	(65636ul-TIME_VALUE)
#define STOP_VALUE	(TIME_VALUE*0.075)
#define RANGE		(TIME_VALUE*0.025)

ISR(TIMER1_OVF_vect)
{
 3ca:	1f 92       	push	r1
 3cc:	0f 92       	push	r0
 3ce:	0f b6       	in	r0, 0x3f	; 63
 3d0:	0f 92       	push	r0
 3d2:	11 24       	eor	r1, r1
 3d4:	0b b6       	in	r0, 0x3b	; 59
 3d6:	0f 92       	push	r0
 3d8:	2f 93       	push	r18
 3da:	3f 93       	push	r19
 3dc:	8f 93       	push	r24
 3de:	9f 93       	push	r25
 3e0:	ef 93       	push	r30
 3e2:	ff 93       	push	r31
 3e4:	cf 93       	push	r28
 3e6:	df 93       	push	r29
 3e8:	cd b7       	in	r28, 0x3d	; 61
 3ea:	de b7       	in	r29, 0x3e	; 62

000003ec <.Loc.84>:
	TCNT1 = RESET_VALUE;
 3ec:	84 e8       	ldi	r24, 0x84	; 132
 3ee:	90 e0       	ldi	r25, 0x00	; 0

000003f0 <.Loc.85>:
 3f0:	24 e2       	ldi	r18, 0x24	; 36
 3f2:	34 e6       	ldi	r19, 0x64	; 100
 3f4:	fc 01       	movw	r30, r24
 3f6:	31 83       	std	Z+1, r19	; 0x01
 3f8:	20 83       	st	Z, r18

000003fa <.Loc.86>:

	PORT_1 |= (1<<PIN_1);
 3fa:	82 e0       	ldi	r24, 0x02	; 2
 3fc:	91 e0       	ldi	r25, 0x01	; 1
 3fe:	fc 01       	movw	r30, r24
 400:	20 81       	ld	r18, Z
 402:	82 e0       	ldi	r24, 0x02	; 2
 404:	91 e0       	ldi	r25, 0x01	; 1

00000406 <.Loc.87>:
 406:	20 62       	ori	r18, 0x20	; 32
 408:	fc 01       	movw	r30, r24
 40a:	20 83       	st	Z, r18

0000040c <.Loc.88>:
}
 40c:	00 00       	nop
 40e:	df 91       	pop	r29
 410:	cf 91       	pop	r28
 412:	ff 91       	pop	r31
 414:	ef 91       	pop	r30
 416:	9f 91       	pop	r25
 418:	8f 91       	pop	r24
 41a:	3f 91       	pop	r19
 41c:	2f 91       	pop	r18
 41e:	0f 90       	pop	r0
 420:	0b be       	out	0x3b, r0	; 59
 422:	0f 90       	pop	r0
 424:	0f be       	out	0x3f, r0	; 63
 426:	0f 90       	pop	r0
 428:	1f 90       	pop	r1
 42a:	18 95       	reti

0000042c <__vector_17>:

ISR(TIMER1_COMPA_vect)
{
 42c:	1f 92       	push	r1
 42e:	0f 92       	push	r0
 430:	0f b6       	in	r0, 0x3f	; 63
 432:	0f 92       	push	r0
 434:	11 24       	eor	r1, r1
 436:	0b b6       	in	r0, 0x3b	; 59
 438:	0f 92       	push	r0
 43a:	2f 93       	push	r18
 43c:	8f 93       	push	r24
 43e:	9f 93       	push	r25
 440:	ef 93       	push	r30
 442:	ff 93       	push	r31
 444:	cf 93       	push	r28
 446:	df 93       	push	r29
 448:	cd b7       	in	r28, 0x3d	; 61
 44a:	de b7       	in	r29, 0x3e	; 62

0000044c <.Loc.90>:
	PORT_1 &= ~(1<<PIN_1);
 44c:	82 e0       	ldi	r24, 0x02	; 2
 44e:	91 e0       	ldi	r25, 0x01	; 1
 450:	fc 01       	movw	r30, r24
 452:	20 81       	ld	r18, Z

00000454 <.Loc.91>:
 454:	82 e0       	ldi	r24, 0x02	; 2
 456:	91 e0       	ldi	r25, 0x01	; 1

00000458 <.Loc.92>:
 458:	2f 7d       	andi	r18, 0xDF	; 223
 45a:	fc 01       	movw	r30, r24
 45c:	20 83       	st	Z, r18

0000045e <.Loc.93>:
}
 45e:	00 00       	nop
 460:	df 91       	pop	r29
 462:	cf 91       	pop	r28
 464:	ff 91       	pop	r31
 466:	ef 91       	pop	r30
 468:	9f 91       	pop	r25
 46a:	8f 91       	pop	r24
 46c:	2f 91       	pop	r18
 46e:	0f 90       	pop	r0
 470:	0b be       	out	0x3b, r0	; 59
 472:	0f 90       	pop	r0
 474:	0f be       	out	0x3f, r0	; 63
 476:	0f 90       	pop	r0
 478:	1f 90       	pop	r1
 47a:	18 95       	reti

0000047c <__vector_18>:

ISR(TIMER1_COMPB_vect)
{
 47c:	1f 92       	push	r1
 47e:	0f 92       	push	r0
 480:	0f b6       	in	r0, 0x3f	; 63
 482:	0f 92       	push	r0
 484:	11 24       	eor	r1, r1
 486:	cf 93       	push	r28
 488:	df 93       	push	r29
 48a:	cd b7       	in	r28, 0x3d	; 61
 48c:	de b7       	in	r29, 0x3e	; 62

0000048e <.Loc.95>:

}
 48e:	00 00       	nop
 490:	df 91       	pop	r29
 492:	cf 91       	pop	r28
 494:	0f 90       	pop	r0
 496:	0f be       	out	0x3f, r0	; 63
 498:	0f 90       	pop	r0
 49a:	1f 90       	pop	r1
 49c:	18 95       	reti

0000049e <init_servo>:

void init_servo(void)
{
 49e:	cf 93       	push	r28
 4a0:	df 93       	push	r29
 4a2:	cd b7       	in	r28, 0x3d	; 61
 4a4:	de b7       	in	r29, 0x3e	; 62

000004a6 <.Loc.97>:
	// Config pins as output
	DDR_1 |= (1<<PIN_1);
 4a6:	81 e0       	ldi	r24, 0x01	; 1
 4a8:	91 e0       	ldi	r25, 0x01	; 1
 4aa:	fc 01       	movw	r30, r24
 4ac:	20 81       	ld	r18, Z
 4ae:	81 e0       	ldi	r24, 0x01	; 1
 4b0:	91 e0       	ldi	r25, 0x01	; 1

000004b2 <.Loc.98>:
 4b2:	20 62       	ori	r18, 0x20	; 32
 4b4:	fc 01       	movw	r30, r24
 4b6:	20 83       	st	Z, r18

000004b8 <.Loc.99>:

	// Use mode 0, clkdiv = 8
	TCCR1A = 0;
 4b8:	80 e8       	ldi	r24, 0x80	; 128
 4ba:	90 e0       	ldi	r25, 0x00	; 0

000004bc <.Loc.100>:
 4bc:	fc 01       	movw	r30, r24
 4be:	10 82       	st	Z, r1

000004c0 <.Loc.101>:
	TCCR1B = (0<<CS12) | (1<<CS11) | (0<<CS10);
 4c0:	81 e8       	ldi	r24, 0x81	; 129
 4c2:	90 e0       	ldi	r25, 0x00	; 0

000004c4 <.Loc.102>:
 4c4:	22 e0       	ldi	r18, 0x02	; 2
 4c6:	fc 01       	movw	r30, r24
 4c8:	20 83       	st	Z, r18

000004ca <.Loc.103>:
	// Interrupts on OCA, OCB and OVF
	TIMSK1 = (1<<OCIE1B) | (1<<OCIE1A) | (1<<TOIE1);
 4ca:	8f e6       	ldi	r24, 0x6F	; 111
 4cc:	90 e0       	ldi	r25, 0x00	; 0

000004ce <.Loc.104>:
 4ce:	27 e0       	ldi	r18, 0x07	; 7
 4d0:	fc 01       	movw	r30, r24
 4d2:	20 83       	st	Z, r18

000004d4 <.Loc.105>:

	TCNT1 = RESET_VALUE;
 4d4:	84 e8       	ldi	r24, 0x84	; 132
 4d6:	90 e0       	ldi	r25, 0x00	; 0

000004d8 <.Loc.106>:
 4d8:	24 e2       	ldi	r18, 0x24	; 36
 4da:	34 e6       	ldi	r19, 0x64	; 100
 4dc:	fc 01       	movw	r30, r24
 4de:	31 83       	std	Z+1, r19	; 0x01
 4e0:	20 83       	st	Z, r18

000004e2 <.Loc.107>:

	servo1_set_percentage(0);
 4e2:	80 e0       	ldi	r24, 0x00	; 0
 4e4:	0e 94 79 02 	call	0x4f2	; 0x4f2 <servo1_set_percentage>

000004e8 <.Loc.108>:


	sei();
 4e8:	78 94       	sei

000004ea <.Loc.109>:
}
 4ea:	00 00       	nop
 4ec:	df 91       	pop	r29
 4ee:	cf 91       	pop	r28
 4f0:	08 95       	ret

000004f2 <servo1_set_percentage>:

void servo1_set_percentage(signed char percentage)
{
 4f2:	0f 93       	push	r16
 4f4:	1f 93       	push	r17
 4f6:	cf 93       	push	r28
 4f8:	df 93       	push	r29
 4fa:	cd b7       	in	r28, 0x3d	; 61
 4fc:	de b7       	in	r29, 0x3e	; 62
 4fe:	6d 97       	sbiw	r28, 0x1d	; 29
 500:	0f b6       	in	r0, 0x3f	; 63
 502:	f8 94       	cli
 504:	de bf       	out	0x3e, r29	; 62
 506:	0f be       	out	0x3f, r0	; 63
 508:	cd bf       	out	0x3d, r28	; 61
 50a:	89 83       	std	Y+1, r24	; 0x01

0000050c <.Loc.111>:
	if (percentage >= -100 && percentage <= 100)
 50c:	89 81       	ldd	r24, Y+1	; 0x01
 50e:	8c 39       	cpi	r24, 0x9C	; 156
 510:	0c f4       	brge	.+2      	; 0x514 <.Loc.112>

00000512 <L0^A>:
 512:	57 c0       	rjmp	.+174    	; 0x5c2 <.L23>

00000514 <.Loc.112>:
 514:	89 81       	ldd	r24, Y+1	; 0x01
 516:	84 36       	cpi	r24, 0x64	; 100
 518:	11 f0       	breq	.+4      	; 0x51e <.Loc.113>

0000051a <L0^A>:
 51a:	0c f0       	brlt	.+2      	; 0x51e <.Loc.113>

0000051c <L0^A>:
 51c:	52 c0       	rjmp	.+164    	; 0x5c2 <.L23>

0000051e <.Loc.113>:
	{
		OCR1A = RESET_VALUE+STOP_VALUE+(RANGE/100*percentage);
 51e:	89 81       	ldd	r24, Y+1	; 0x01
 520:	28 2f       	mov	r18, r24
 522:	88 0f       	add	r24, r24
 524:	33 0b       	sbc	r19, r19
 526:	44 0b       	sbc	r20, r20
 528:	55 0b       	sbc	r21, r21
 52a:	2e 87       	std	Y+14, r18	; 0x0e
 52c:	3f 87       	std	Y+15, r19	; 0x0f
 52e:	48 8b       	std	Y+16, r20	; 0x10
 530:	59 8b       	std	Y+17, r21	; 0x11
 532:	6e 85       	ldd	r22, Y+14	; 0x0e
 534:	7f 85       	ldd	r23, Y+15	; 0x0f
 536:	88 89       	ldd	r24, Y+16	; 0x10
 538:	99 89       	ldd	r25, Y+17	; 0x11
 53a:	0e 94 17 06 	call	0xc2e	; 0xc2e <__floatsisf>
 53e:	6a 83       	std	Y+2, r22	; 0x02
 540:	7b 83       	std	Y+3, r23	; 0x03
 542:	8c 83       	std	Y+4, r24	; 0x04
 544:	9d 83       	std	Y+5, r25	; 0x05
 546:	20 e0       	ldi	r18, 0x00	; 0
 548:	30 e0       	ldi	r19, 0x00	; 0
 54a:	40 e2       	ldi	r20, 0x20	; 32
 54c:	51 e4       	ldi	r21, 0x41	; 65
 54e:	6a 81       	ldd	r22, Y+2	; 0x02
 550:	7b 81       	ldd	r23, Y+3	; 0x03
 552:	8c 81       	ldd	r24, Y+4	; 0x04
 554:	9d 81       	ldd	r25, Y+5	; 0x05
 556:	0e 94 cc 06 	call	0xd98	; 0xd98 <__mulsf3>
 55a:	6a 8b       	std	Y+18, r22	; 0x12
 55c:	7b 8b       	std	Y+19, r23	; 0x13
 55e:	8c 8b       	std	Y+20, r24	; 0x14
 560:	9d 8b       	std	Y+21, r25	; 0x15
 562:	8a 89       	ldd	r24, Y+18	; 0x12
 564:	9b 89       	ldd	r25, Y+19	; 0x13
 566:	ac 89       	ldd	r26, Y+20	; 0x14
 568:	bd 89       	ldd	r27, Y+21	; 0x15
 56a:	8e 83       	std	Y+6, r24	; 0x06
 56c:	9f 83       	std	Y+7, r25	; 0x07
 56e:	a8 87       	std	Y+8, r26	; 0x08
 570:	b9 87       	std	Y+9, r27	; 0x09

00000572 <.Loc.114>:
 572:	20 e0       	ldi	r18, 0x00	; 0
 574:	38 eb       	ldi	r19, 0xB8	; 184
 576:	4f ed       	ldi	r20, 0xDF	; 223
 578:	56 e4       	ldi	r21, 0x46	; 70
 57a:	6e 81       	ldd	r22, Y+6	; 0x06
 57c:	7f 81       	ldd	r23, Y+7	; 0x07
 57e:	88 85       	ldd	r24, Y+8	; 0x08
 580:	99 85       	ldd	r25, Y+9	; 0x09
 582:	0e 94 75 05 	call	0xaea	; 0xaea <__addsf3>
 586:	6e 8b       	std	Y+22, r22	; 0x16
 588:	7f 8b       	std	Y+23, r23	; 0x17
 58a:	88 8f       	std	Y+24, r24	; 0x18
 58c:	99 8f       	std	Y+25, r25	; 0x19
 58e:	2e 89       	ldd	r18, Y+22	; 0x16
 590:	3f 89       	ldd	r19, Y+23	; 0x17
 592:	48 8d       	ldd	r20, Y+24	; 0x18
 594:	59 8d       	ldd	r21, Y+25	; 0x19
 596:	2a 87       	std	Y+10, r18	; 0x0a
 598:	3b 87       	std	Y+11, r19	; 0x0b
 59a:	4c 87       	std	Y+12, r20	; 0x0c
 59c:	5d 87       	std	Y+13, r21	; 0x0d

0000059e <.Loc.115>:
 59e:	08 e8       	ldi	r16, 0x88	; 136
 5a0:	10 e0       	ldi	r17, 0x00	; 0

000005a2 <.Loc.116>:
 5a2:	6a 85       	ldd	r22, Y+10	; 0x0a
 5a4:	7b 85       	ldd	r23, Y+11	; 0x0b
 5a6:	8c 85       	ldd	r24, Y+12	; 0x0c
 5a8:	9d 85       	ldd	r25, Y+13	; 0x0d
 5aa:	0e 94 e6 05 	call	0xbcc	; 0xbcc <__fixunssfsi>
 5ae:	6a 8f       	std	Y+26, r22	; 0x1a
 5b0:	7b 8f       	std	Y+27, r23	; 0x1b
 5b2:	8c 8f       	std	Y+28, r24	; 0x1c
 5b4:	9d 8f       	std	Y+29, r25	; 0x1d
 5b6:	8a 8d       	ldd	r24, Y+26	; 0x1a
 5b8:	9b 8d       	ldd	r25, Y+27	; 0x1b
 5ba:	d8 01       	movw	r26, r16
 5bc:	11 96       	adiw	r26, 0x01	; 1
 5be:	9c 93       	st	X, r25
 5c0:	8e 93       	st	-X, r24

000005c2 <.L23>:
	}
}
 5c2:	00 00       	nop
 5c4:	6d 96       	adiw	r28, 0x1d	; 29
 5c6:	0f b6       	in	r0, 0x3f	; 63
 5c8:	f8 94       	cli
 5ca:	de bf       	out	0x3e, r29	; 62
 5cc:	0f be       	out	0x3f, r0	; 63
 5ce:	cd bf       	out	0x3d, r28	; 61
 5d0:	df 91       	pop	r29
 5d2:	cf 91       	pop	r28
 5d4:	1f 91       	pop	r17
 5d6:	0f 91       	pop	r16
 5d8:	08 95       	ret

000005da <vroem>:
#include "servo.c"
#include <avr/interrupt.h>
#include <util/delay.h>

void vroem()
{
 5da:	cf 93       	push	r28
 5dc:	df 93       	push	r29
 5de:	cd b7       	in	r28, 0x3d	; 61
 5e0:	de b7       	in	r29, 0x3e	; 62

000005e2 <.Loc.119>:
    h_bridge_set_percentage(50);
 5e2:	82 e3       	ldi	r24, 0x32	; 50
 5e4:	0e 94 9b 01 	call	0x336	; 0x336 <h_bridge_set_percentage>

000005e8 <.Loc.120>:
}
 5e8:	00 00       	nop
 5ea:	df 91       	pop	r29
 5ec:	cf 91       	pop	r28
 5ee:	08 95       	ret

000005f0 <plantsensoraan>:

void plantsensoraan()
{
 5f0:	cf 93       	push	r28
 5f2:	df 93       	push	r29
 5f4:	cd b7       	in	r28, 0x3d	; 61
 5f6:	de b7       	in	r29, 0x3e	; 62

000005f8 <.Loc.122>:
    //sensoren aan
}
 5f8:	00 00       	nop
 5fa:	df 91       	pop	r29
 5fc:	cf 91       	pop	r28
 5fe:	08 95       	ret

00000600 <rem>:

void rem()
{
 600:	cf 93       	push	r28
 602:	df 93       	push	r29
 604:	cd b7       	in	r28, 0x3d	; 61
 606:	de b7       	in	r29, 0x3e	; 62
 608:	a2 97       	sbiw	r28, 0x22	; 34
 60a:	0f b6       	in	r0, 0x3f	; 63
 60c:	f8 94       	cli
 60e:	de bf       	out	0x3e, r29	; 62
 610:	0f be       	out	0x3f, r0	; 63
 612:	cd bf       	out	0x3d, r28	; 61

00000614 <.Loc.124>:
    h_bridge_set_percentage(-10);
 614:	86 ef       	ldi	r24, 0xF6	; 246
 616:	0e 94 9b 01 	call	0x336	; 0x336 <h_bridge_set_percentage>
 61a:	80 e0       	ldi	r24, 0x00	; 0
 61c:	90 e0       	ldi	r25, 0x00	; 0
 61e:	a0 e2       	ldi	r26, 0x20	; 32
 620:	b1 e4       	ldi	r27, 0x41	; 65
 622:	89 83       	std	Y+1, r24	; 0x01
 624:	9a 83       	std	Y+2, r25	; 0x02
 626:	ab 83       	std	Y+3, r26	; 0x03
 628:	bc 83       	std	Y+4, r27	; 0x04

0000062a <.LBB24>:

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
 62a:	20 e0       	ldi	r18, 0x00	; 0
 62c:	30 e0       	ldi	r19, 0x00	; 0
 62e:	4a e7       	ldi	r20, 0x7A	; 122
 630:	55 e4       	ldi	r21, 0x45	; 69
 632:	69 81       	ldd	r22, Y+1	; 0x01
 634:	7a 81       	ldd	r23, Y+2	; 0x02
 636:	8b 81       	ldd	r24, Y+3	; 0x03
 638:	9c 81       	ldd	r25, Y+4	; 0x04
 63a:	0e 94 cc 06 	call	0xd98	; 0xd98 <__mulsf3>
 63e:	6b 8b       	std	Y+19, r22	; 0x13
 640:	7c 8b       	std	Y+20, r23	; 0x14
 642:	8d 8b       	std	Y+21, r24	; 0x15
 644:	9e 8b       	std	Y+22, r25	; 0x16
 646:	8b 89       	ldd	r24, Y+19	; 0x13
 648:	9c 89       	ldd	r25, Y+20	; 0x14
 64a:	ad 89       	ldd	r26, Y+21	; 0x15
 64c:	be 89       	ldd	r27, Y+22	; 0x16
 64e:	8d 83       	std	Y+5, r24	; 0x05
 650:	9e 83       	std	Y+6, r25	; 0x06
 652:	af 83       	std	Y+7, r26	; 0x07
 654:	b8 87       	std	Y+8, r27	; 0x08

00000656 <.Loc.126>:
	if (__tmp < 1.0)
 656:	20 e0       	ldi	r18, 0x00	; 0
 658:	30 e0       	ldi	r19, 0x00	; 0
 65a:	40 e8       	ldi	r20, 0x80	; 128
 65c:	5f e3       	ldi	r21, 0x3F	; 63
 65e:	6d 81       	ldd	r22, Y+5	; 0x05
 660:	7e 81       	ldd	r23, Y+6	; 0x06
 662:	8f 81       	ldd	r24, Y+7	; 0x07
 664:	98 85       	ldd	r25, Y+8	; 0x08
 666:	0e 94 e1 05 	call	0xbc2	; 0xbc2 <__cmpsf2>
 66a:	88 23       	and	r24, r24
 66c:	2c f4       	brge	.+10     	; 0x678 <.L37>

0000066e <.Loc.127>:
		__ticks = 1;
 66e:	81 e0       	ldi	r24, 0x01	; 1
 670:	90 e0       	ldi	r25, 0x00	; 0
 672:	9a 87       	std	Y+10, r25	; 0x0a
 674:	89 87       	std	Y+9, r24	; 0x09
 676:	55 c0       	rjmp	.+170    	; 0x722 <.L29>

00000678 <.L37>:
	else if (__tmp > 65535)
 678:	20 e0       	ldi	r18, 0x00	; 0
 67a:	3f ef       	ldi	r19, 0xFF	; 255
 67c:	4f e7       	ldi	r20, 0x7F	; 127
 67e:	57 e4       	ldi	r21, 0x47	; 71
 680:	6d 81       	ldd	r22, Y+5	; 0x05
 682:	7e 81       	ldd	r23, Y+6	; 0x06
 684:	8f 81       	ldd	r24, Y+7	; 0x07
 686:	98 85       	ldd	r25, Y+8	; 0x08
 688:	0e 94 c7 06 	call	0xd8e	; 0xd8e <__gesf2>
 68c:	88 23       	and	r24, r24
 68e:	d9 f1       	breq	.+118    	; 0x706 <.L38>
 690:	d4 f1       	brlt	.+116    	; 0x706 <.L38>

00000692 <.Loc.129>:
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
 692:	20 e0       	ldi	r18, 0x00	; 0
 694:	30 e0       	ldi	r19, 0x00	; 0
 696:	40 e2       	ldi	r20, 0x20	; 32
 698:	51 e4       	ldi	r21, 0x41	; 65
 69a:	69 81       	ldd	r22, Y+1	; 0x01
 69c:	7a 81       	ldd	r23, Y+2	; 0x02
 69e:	8b 81       	ldd	r24, Y+3	; 0x03
 6a0:	9c 81       	ldd	r25, Y+4	; 0x04
 6a2:	0e 94 cc 06 	call	0xd98	; 0xd98 <__mulsf3>
 6a6:	6f 8b       	std	Y+23, r22	; 0x17
 6a8:	78 8f       	std	Y+24, r23	; 0x18
 6aa:	89 8f       	std	Y+25, r24	; 0x19
 6ac:	9a 8f       	std	Y+26, r25	; 0x1a
 6ae:	8f 89       	ldd	r24, Y+23	; 0x17
 6b0:	98 8d       	ldd	r25, Y+24	; 0x18
 6b2:	a9 8d       	ldd	r26, Y+25	; 0x19
 6b4:	ba 8d       	ldd	r27, Y+26	; 0x1a
 6b6:	8f 87       	std	Y+15, r24	; 0x0f
 6b8:	98 8b       	std	Y+16, r25	; 0x10
 6ba:	a9 8b       	std	Y+17, r26	; 0x11
 6bc:	ba 8b       	std	Y+18, r27	; 0x12

000006be <.Loc.130>:
 6be:	6f 85       	ldd	r22, Y+15	; 0x0f
 6c0:	78 89       	ldd	r23, Y+16	; 0x10
 6c2:	89 89       	ldd	r24, Y+17	; 0x11
 6c4:	9a 89       	ldd	r25, Y+18	; 0x12
 6c6:	0e 94 e6 05 	call	0xbcc	; 0xbcc <__fixunssfsi>
 6ca:	6b 8f       	std	Y+27, r22	; 0x1b
 6cc:	7c 8f       	std	Y+28, r23	; 0x1c
 6ce:	8d 8f       	std	Y+29, r24	; 0x1d
 6d0:	9e 8f       	std	Y+30, r25	; 0x1e
 6d2:	ab 8d       	ldd	r26, Y+27	; 0x1b
 6d4:	bc 8d       	ldd	r27, Y+28	; 0x1c
 6d6:	ba 87       	std	Y+10, r27	; 0x0a
 6d8:	a9 87       	std	Y+9, r26	; 0x09

000006da <.Loc.131>:
		while(__ticks)
 6da:	10 c0       	rjmp	.+32     	; 0x6fc <.L32>

000006dc <.L33>:
 6dc:	80 e9       	ldi	r24, 0x90	; 144
 6de:	91 e0       	ldi	r25, 0x01	; 1
 6e0:	9c 87       	std	Y+12, r25	; 0x0c
 6e2:	8b 87       	std	Y+11, r24	; 0x0b

000006e4 <.LBB26>:
		"sbc %B0,__zero_reg__"    "\n\t"
		"brne 1b"
		: "+d" (__count)
	);
#else
	__asm__ volatile (
 6e4:	8b 85       	ldd	r24, Y+11	; 0x0b
 6e6:	9c 85       	ldd	r25, Y+12	; 0x0c

000006e8 <.L1^B1>:
 6e8:	01 97       	sbiw	r24, 0x01	; 1
 6ea:	f1 f7       	brne	.-4      	; 0x6e8 <.L1^B1>
 6ec:	9c 87       	std	Y+12, r25	; 0x0c
 6ee:	8b 87       	std	Y+11, r24	; 0x0b

000006f0 <.Loc.133>:
	...

000006f2 <.LBE26>:
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 6f2:	89 85       	ldd	r24, Y+9	; 0x09
 6f4:	9a 85       	ldd	r25, Y+10	; 0x0a
 6f6:	01 97       	sbiw	r24, 0x01	; 1
 6f8:	9a 87       	std	Y+10, r25	; 0x0a
 6fa:	89 87       	std	Y+9, r24	; 0x09

000006fc <.L32>:
		while(__ticks)
 6fc:	89 85       	ldd	r24, Y+9	; 0x09
 6fe:	9a 85       	ldd	r25, Y+10	; 0x0a
 700:	00 97       	sbiw	r24, 0x00	; 0
 702:	61 f7       	brne	.-40     	; 0x6dc <.L33>

00000704 <.Loc.136>:
		}
		return;
 704:	19 c0       	rjmp	.+50     	; 0x738 <.L34>

00000706 <.L38>:
	}
	else
		__ticks = (uint16_t)__tmp;
 706:	6d 81       	ldd	r22, Y+5	; 0x05
 708:	7e 81       	ldd	r23, Y+6	; 0x06
 70a:	8f 81       	ldd	r24, Y+7	; 0x07
 70c:	98 85       	ldd	r25, Y+8	; 0x08
 70e:	0e 94 e6 05 	call	0xbcc	; 0xbcc <__fixunssfsi>
 712:	6f 8f       	std	Y+31, r22	; 0x1f
 714:	78 a3       	std	Y+32, r23	; 0x20
 716:	89 a3       	std	Y+33, r24	; 0x21
 718:	9a a3       	std	Y+34, r25	; 0x22
 71a:	8f 8d       	ldd	r24, Y+31	; 0x1f
 71c:	98 a1       	ldd	r25, Y+32	; 0x20
 71e:	9a 87       	std	Y+10, r25	; 0x0a
 720:	89 87       	std	Y+9, r24	; 0x09

00000722 <.L29>:
 722:	89 85       	ldd	r24, Y+9	; 0x09
 724:	9a 85       	ldd	r25, Y+10	; 0x0a
 726:	9e 87       	std	Y+14, r25	; 0x0e
 728:	8d 87       	std	Y+13, r24	; 0x0d

0000072a <.LBB28>:
 72a:	8d 85       	ldd	r24, Y+13	; 0x0d
 72c:	9e 85       	ldd	r25, Y+14	; 0x0e

0000072e <.L1^B2>:
 72e:	01 97       	sbiw	r24, 0x01	; 1
 730:	f1 f7       	brne	.-4      	; 0x72e <.L1^B2>
 732:	9e 87       	std	Y+14, r25	; 0x0e
 734:	8d 87       	std	Y+13, r24	; 0x0d

00000736 <.Loc.139>:
	...

00000738 <.L34>:
    _delay_ms(10);
    h_bridge_set_percentage(0);
 738:	80 e0       	ldi	r24, 0x00	; 0
 73a:	0e 94 9b 01 	call	0x336	; 0x336 <h_bridge_set_percentage>

0000073e <.Loc.141>:

}
 73e:	00 00       	nop
 740:	a2 96       	adiw	r28, 0x22	; 34
 742:	0f b6       	in	r0, 0x3f	; 63
 744:	f8 94       	cli
 746:	de bf       	out	0x3e, r29	; 62
 748:	0f be       	out	0x3f, r0	; 63
 74a:	cd bf       	out	0x3d, r28	; 61
 74c:	df 91       	pop	r29
 74e:	cf 91       	pop	r28
 750:	08 95       	ret

00000752 <alarm>:

void alarm()
{
 752:	cf 93       	push	r28
 754:	df 93       	push	r29
 756:	cd b7       	in	r28, 0x3d	; 61
 758:	de b7       	in	r29, 0x3e	; 62

0000075a <.Loc.143>:
    //1 pinnetje aan en uit schakelen voor 2x
}
 75a:	00 00       	nop
 75c:	df 91       	pop	r29
 75e:	cf 91       	pop	r28
 760:	08 95       	ret

00000762 <stuurlinks>:

void stuurlinks()
{
 762:	cf 93       	push	r28
 764:	df 93       	push	r29
 766:	cd b7       	in	r28, 0x3d	; 61
 768:	de b7       	in	r29, 0x3e	; 62
 76a:	a2 97       	sbiw	r28, 0x22	; 34
 76c:	0f b6       	in	r0, 0x3f	; 63
 76e:	f8 94       	cli
 770:	de bf       	out	0x3e, r29	; 62
 772:	0f be       	out	0x3f, r0	; 63
 774:	cd bf       	out	0x3d, r28	; 61

00000776 <.Loc.145>:
    servo1_set_percentage(-100);
 776:	8c e9       	ldi	r24, 0x9C	; 156
 778:	0e 94 79 02 	call	0x4f2	; 0x4f2 <servo1_set_percentage>
 77c:	80 e0       	ldi	r24, 0x00	; 0
 77e:	90 e0       	ldi	r25, 0x00	; 0
 780:	a8 e4       	ldi	r26, 0x48	; 72
 782:	b3 e4       	ldi	r27, 0x43	; 67
 784:	89 83       	std	Y+1, r24	; 0x01
 786:	9a 83       	std	Y+2, r25	; 0x02
 788:	ab 83       	std	Y+3, r26	; 0x03
 78a:	bc 83       	std	Y+4, r27	; 0x04

0000078c <.LBB30>:
	__tmp = ((F_CPU) / 4e3) * __ms;
 78c:	20 e0       	ldi	r18, 0x00	; 0
 78e:	30 e0       	ldi	r19, 0x00	; 0
 790:	4a e7       	ldi	r20, 0x7A	; 122
 792:	55 e4       	ldi	r21, 0x45	; 69
 794:	69 81       	ldd	r22, Y+1	; 0x01
 796:	7a 81       	ldd	r23, Y+2	; 0x02
 798:	8b 81       	ldd	r24, Y+3	; 0x03
 79a:	9c 81       	ldd	r25, Y+4	; 0x04
 79c:	0e 94 cc 06 	call	0xd98	; 0xd98 <__mulsf3>
 7a0:	6b 8b       	std	Y+19, r22	; 0x13
 7a2:	7c 8b       	std	Y+20, r23	; 0x14
 7a4:	8d 8b       	std	Y+21, r24	; 0x15
 7a6:	9e 8b       	std	Y+22, r25	; 0x16
 7a8:	8b 89       	ldd	r24, Y+19	; 0x13
 7aa:	9c 89       	ldd	r25, Y+20	; 0x14
 7ac:	ad 89       	ldd	r26, Y+21	; 0x15
 7ae:	be 89       	ldd	r27, Y+22	; 0x16
 7b0:	8d 83       	std	Y+5, r24	; 0x05
 7b2:	9e 83       	std	Y+6, r25	; 0x06
 7b4:	af 83       	std	Y+7, r26	; 0x07
 7b6:	b8 87       	std	Y+8, r27	; 0x08

000007b8 <.Loc.147>:
	if (__tmp < 1.0)
 7b8:	20 e0       	ldi	r18, 0x00	; 0
 7ba:	30 e0       	ldi	r19, 0x00	; 0
 7bc:	40 e8       	ldi	r20, 0x80	; 128
 7be:	5f e3       	ldi	r21, 0x3F	; 63
 7c0:	6d 81       	ldd	r22, Y+5	; 0x05
 7c2:	7e 81       	ldd	r23, Y+6	; 0x06
 7c4:	8f 81       	ldd	r24, Y+7	; 0x07
 7c6:	98 85       	ldd	r25, Y+8	; 0x08
 7c8:	0e 94 e1 05 	call	0xbc2	; 0xbc2 <__cmpsf2>
 7cc:	88 23       	and	r24, r24
 7ce:	2c f4       	brge	.+10     	; 0x7da <.L51>

000007d0 <.Loc.148>:
		__ticks = 1;
 7d0:	81 e0       	ldi	r24, 0x01	; 1
 7d2:	90 e0       	ldi	r25, 0x00	; 0
 7d4:	9a 87       	std	Y+10, r25	; 0x0a
 7d6:	89 87       	std	Y+9, r24	; 0x09
 7d8:	55 c0       	rjmp	.+170    	; 0x884 <.L43>

000007da <.L51>:
	else if (__tmp > 65535)
 7da:	20 e0       	ldi	r18, 0x00	; 0
 7dc:	3f ef       	ldi	r19, 0xFF	; 255
 7de:	4f e7       	ldi	r20, 0x7F	; 127
 7e0:	57 e4       	ldi	r21, 0x47	; 71
 7e2:	6d 81       	ldd	r22, Y+5	; 0x05
 7e4:	7e 81       	ldd	r23, Y+6	; 0x06
 7e6:	8f 81       	ldd	r24, Y+7	; 0x07
 7e8:	98 85       	ldd	r25, Y+8	; 0x08
 7ea:	0e 94 c7 06 	call	0xd8e	; 0xd8e <__gesf2>
 7ee:	88 23       	and	r24, r24
 7f0:	d9 f1       	breq	.+118    	; 0x868 <.L52>
 7f2:	d4 f1       	brlt	.+116    	; 0x868 <.L52>

000007f4 <.Loc.150>:
		__ticks = (uint16_t) (__ms * 10.0);
 7f4:	20 e0       	ldi	r18, 0x00	; 0
 7f6:	30 e0       	ldi	r19, 0x00	; 0
 7f8:	40 e2       	ldi	r20, 0x20	; 32
 7fa:	51 e4       	ldi	r21, 0x41	; 65
 7fc:	69 81       	ldd	r22, Y+1	; 0x01
 7fe:	7a 81       	ldd	r23, Y+2	; 0x02
 800:	8b 81       	ldd	r24, Y+3	; 0x03
 802:	9c 81       	ldd	r25, Y+4	; 0x04
 804:	0e 94 cc 06 	call	0xd98	; 0xd98 <__mulsf3>
 808:	6f 8b       	std	Y+23, r22	; 0x17
 80a:	78 8f       	std	Y+24, r23	; 0x18
 80c:	89 8f       	std	Y+25, r24	; 0x19
 80e:	9a 8f       	std	Y+26, r25	; 0x1a
 810:	8f 89       	ldd	r24, Y+23	; 0x17
 812:	98 8d       	ldd	r25, Y+24	; 0x18
 814:	a9 8d       	ldd	r26, Y+25	; 0x19
 816:	ba 8d       	ldd	r27, Y+26	; 0x1a
 818:	8f 87       	std	Y+15, r24	; 0x0f
 81a:	98 8b       	std	Y+16, r25	; 0x10
 81c:	a9 8b       	std	Y+17, r26	; 0x11
 81e:	ba 8b       	std	Y+18, r27	; 0x12

00000820 <.Loc.151>:
 820:	6f 85       	ldd	r22, Y+15	; 0x0f
 822:	78 89       	ldd	r23, Y+16	; 0x10
 824:	89 89       	ldd	r24, Y+17	; 0x11
 826:	9a 89       	ldd	r25, Y+18	; 0x12
 828:	0e 94 e6 05 	call	0xbcc	; 0xbcc <__fixunssfsi>
 82c:	6b 8f       	std	Y+27, r22	; 0x1b
 82e:	7c 8f       	std	Y+28, r23	; 0x1c
 830:	8d 8f       	std	Y+29, r24	; 0x1d
 832:	9e 8f       	std	Y+30, r25	; 0x1e
 834:	ab 8d       	ldd	r26, Y+27	; 0x1b
 836:	bc 8d       	ldd	r27, Y+28	; 0x1c
 838:	ba 87       	std	Y+10, r27	; 0x0a
 83a:	a9 87       	std	Y+9, r26	; 0x09

0000083c <.Loc.152>:
		while(__ticks)
 83c:	10 c0       	rjmp	.+32     	; 0x85e <.L46>

0000083e <.L47>:
 83e:	80 e9       	ldi	r24, 0x90	; 144
 840:	91 e0       	ldi	r25, 0x01	; 1
 842:	9c 87       	std	Y+12, r25	; 0x0c
 844:	8b 87       	std	Y+11, r24	; 0x0b

00000846 <.LBB32>:
 846:	8b 85       	ldd	r24, Y+11	; 0x0b
 848:	9c 85       	ldd	r25, Y+12	; 0x0c

0000084a <.L1^B3>:
 84a:	01 97       	sbiw	r24, 0x01	; 1
 84c:	f1 f7       	brne	.-4      	; 0x84a <.L1^B3>
 84e:	9c 87       	std	Y+12, r25	; 0x0c
 850:	8b 87       	std	Y+11, r24	; 0x0b

00000852 <.Loc.154>:
	...

00000854 <.LBE32>:
			__ticks --;
 854:	89 85       	ldd	r24, Y+9	; 0x09
 856:	9a 85       	ldd	r25, Y+10	; 0x0a
 858:	01 97       	sbiw	r24, 0x01	; 1
 85a:	9a 87       	std	Y+10, r25	; 0x0a
 85c:	89 87       	std	Y+9, r24	; 0x09

0000085e <.L46>:
		while(__ticks)
 85e:	89 85       	ldd	r24, Y+9	; 0x09
 860:	9a 85       	ldd	r25, Y+10	; 0x0a
 862:	00 97       	sbiw	r24, 0x00	; 0
 864:	61 f7       	brne	.-40     	; 0x83e <.L47>

00000866 <.Loc.157>:
		return;
 866:	19 c0       	rjmp	.+50     	; 0x89a <.L48>

00000868 <.L52>:
		__ticks = (uint16_t)__tmp;
 868:	6d 81       	ldd	r22, Y+5	; 0x05
 86a:	7e 81       	ldd	r23, Y+6	; 0x06
 86c:	8f 81       	ldd	r24, Y+7	; 0x07
 86e:	98 85       	ldd	r25, Y+8	; 0x08
 870:	0e 94 e6 05 	call	0xbcc	; 0xbcc <__fixunssfsi>
 874:	6f 8f       	std	Y+31, r22	; 0x1f
 876:	78 a3       	std	Y+32, r23	; 0x20
 878:	89 a3       	std	Y+33, r24	; 0x21
 87a:	9a a3       	std	Y+34, r25	; 0x22
 87c:	8f 8d       	ldd	r24, Y+31	; 0x1f
 87e:	98 a1       	ldd	r25, Y+32	; 0x20
 880:	9a 87       	std	Y+10, r25	; 0x0a
 882:	89 87       	std	Y+9, r24	; 0x09

00000884 <.L43>:
 884:	89 85       	ldd	r24, Y+9	; 0x09
 886:	9a 85       	ldd	r25, Y+10	; 0x0a
 888:	9e 87       	std	Y+14, r25	; 0x0e
 88a:	8d 87       	std	Y+13, r24	; 0x0d

0000088c <.LBB34>:
 88c:	8d 85       	ldd	r24, Y+13	; 0x0d
 88e:	9e 85       	ldd	r25, Y+14	; 0x0e

00000890 <.L1^B4>:
 890:	01 97       	sbiw	r24, 0x01	; 1
 892:	f1 f7       	brne	.-4      	; 0x890 <.L1^B4>
 894:	9e 87       	std	Y+14, r25	; 0x0e
 896:	8d 87       	std	Y+13, r24	; 0x0d

00000898 <.Loc.160>:
	...

0000089a <.L48>:
    _delay_ms(200);
    stuurrechts();
 89a:	0e 94 59 04 	call	0x8b2	; 0x8b2 <stuurrechts>

0000089e <.Loc.162>:

}
 89e:	00 00       	nop
 8a0:	a2 96       	adiw	r28, 0x22	; 34
 8a2:	0f b6       	in	r0, 0x3f	; 63
 8a4:	f8 94       	cli
 8a6:	de bf       	out	0x3e, r29	; 62
 8a8:	0f be       	out	0x3f, r0	; 63
 8aa:	cd bf       	out	0x3d, r28	; 61
 8ac:	df 91       	pop	r29
 8ae:	cf 91       	pop	r28
 8b0:	08 95       	ret

000008b2 <stuurrechts>:

void stuurrechts()
{
 8b2:	cf 93       	push	r28
 8b4:	df 93       	push	r29
 8b6:	cd b7       	in	r28, 0x3d	; 61
 8b8:	de b7       	in	r29, 0x3e	; 62
 8ba:	a2 97       	sbiw	r28, 0x22	; 34
 8bc:	0f b6       	in	r0, 0x3f	; 63
 8be:	f8 94       	cli
 8c0:	de bf       	out	0x3e, r29	; 62
 8c2:	0f be       	out	0x3f, r0	; 63
 8c4:	cd bf       	out	0x3d, r28	; 61

000008c6 <.Loc.164>:
   servo1_set_percentage(100);
 8c6:	84 e6       	ldi	r24, 0x64	; 100
 8c8:	0e 94 79 02 	call	0x4f2	; 0x4f2 <servo1_set_percentage>
 8cc:	80 e0       	ldi	r24, 0x00	; 0
 8ce:	90 e0       	ldi	r25, 0x00	; 0
 8d0:	a8 e4       	ldi	r26, 0x48	; 72
 8d2:	b3 e4       	ldi	r27, 0x43	; 67
 8d4:	89 83       	std	Y+1, r24	; 0x01
 8d6:	9a 83       	std	Y+2, r25	; 0x02
 8d8:	ab 83       	std	Y+3, r26	; 0x03
 8da:	bc 83       	std	Y+4, r27	; 0x04

000008dc <.LBB36>:
	__tmp = ((F_CPU) / 4e3) * __ms;
 8dc:	20 e0       	ldi	r18, 0x00	; 0
 8de:	30 e0       	ldi	r19, 0x00	; 0
 8e0:	4a e7       	ldi	r20, 0x7A	; 122
 8e2:	55 e4       	ldi	r21, 0x45	; 69
 8e4:	69 81       	ldd	r22, Y+1	; 0x01
 8e6:	7a 81       	ldd	r23, Y+2	; 0x02
 8e8:	8b 81       	ldd	r24, Y+3	; 0x03
 8ea:	9c 81       	ldd	r25, Y+4	; 0x04
 8ec:	0e 94 cc 06 	call	0xd98	; 0xd98 <__mulsf3>
 8f0:	6b 8b       	std	Y+19, r22	; 0x13
 8f2:	7c 8b       	std	Y+20, r23	; 0x14
 8f4:	8d 8b       	std	Y+21, r24	; 0x15
 8f6:	9e 8b       	std	Y+22, r25	; 0x16
 8f8:	8b 89       	ldd	r24, Y+19	; 0x13
 8fa:	9c 89       	ldd	r25, Y+20	; 0x14
 8fc:	ad 89       	ldd	r26, Y+21	; 0x15
 8fe:	be 89       	ldd	r27, Y+22	; 0x16
 900:	8d 83       	std	Y+5, r24	; 0x05
 902:	9e 83       	std	Y+6, r25	; 0x06
 904:	af 83       	std	Y+7, r26	; 0x07
 906:	b8 87       	std	Y+8, r27	; 0x08

00000908 <.Loc.166>:
	if (__tmp < 1.0)
 908:	20 e0       	ldi	r18, 0x00	; 0
 90a:	30 e0       	ldi	r19, 0x00	; 0
 90c:	40 e8       	ldi	r20, 0x80	; 128
 90e:	5f e3       	ldi	r21, 0x3F	; 63
 910:	6d 81       	ldd	r22, Y+5	; 0x05
 912:	7e 81       	ldd	r23, Y+6	; 0x06
 914:	8f 81       	ldd	r24, Y+7	; 0x07
 916:	98 85       	ldd	r25, Y+8	; 0x08
 918:	0e 94 e1 05 	call	0xbc2	; 0xbc2 <__cmpsf2>
 91c:	88 23       	and	r24, r24
 91e:	2c f4       	brge	.+10     	; 0x92a <.L64>

00000920 <.Loc.167>:
		__ticks = 1;
 920:	81 e0       	ldi	r24, 0x01	; 1
 922:	90 e0       	ldi	r25, 0x00	; 0
 924:	9a 87       	std	Y+10, r25	; 0x0a
 926:	89 87       	std	Y+9, r24	; 0x09
 928:	55 c0       	rjmp	.+170    	; 0x9d4 <.L56>

0000092a <.L64>:
	else if (__tmp > 65535)
 92a:	20 e0       	ldi	r18, 0x00	; 0
 92c:	3f ef       	ldi	r19, 0xFF	; 255
 92e:	4f e7       	ldi	r20, 0x7F	; 127
 930:	57 e4       	ldi	r21, 0x47	; 71
 932:	6d 81       	ldd	r22, Y+5	; 0x05
 934:	7e 81       	ldd	r23, Y+6	; 0x06
 936:	8f 81       	ldd	r24, Y+7	; 0x07
 938:	98 85       	ldd	r25, Y+8	; 0x08
 93a:	0e 94 c7 06 	call	0xd8e	; 0xd8e <__gesf2>
 93e:	88 23       	and	r24, r24
 940:	d9 f1       	breq	.+118    	; 0x9b8 <.L65>
 942:	d4 f1       	brlt	.+116    	; 0x9b8 <.L65>

00000944 <.Loc.169>:
		__ticks = (uint16_t) (__ms * 10.0);
 944:	20 e0       	ldi	r18, 0x00	; 0
 946:	30 e0       	ldi	r19, 0x00	; 0
 948:	40 e2       	ldi	r20, 0x20	; 32
 94a:	51 e4       	ldi	r21, 0x41	; 65
 94c:	69 81       	ldd	r22, Y+1	; 0x01
 94e:	7a 81       	ldd	r23, Y+2	; 0x02
 950:	8b 81       	ldd	r24, Y+3	; 0x03
 952:	9c 81       	ldd	r25, Y+4	; 0x04
 954:	0e 94 cc 06 	call	0xd98	; 0xd98 <__mulsf3>
 958:	6f 8b       	std	Y+23, r22	; 0x17
 95a:	78 8f       	std	Y+24, r23	; 0x18
 95c:	89 8f       	std	Y+25, r24	; 0x19
 95e:	9a 8f       	std	Y+26, r25	; 0x1a
 960:	8f 89       	ldd	r24, Y+23	; 0x17
 962:	98 8d       	ldd	r25, Y+24	; 0x18
 964:	a9 8d       	ldd	r26, Y+25	; 0x19
 966:	ba 8d       	ldd	r27, Y+26	; 0x1a
 968:	8f 87       	std	Y+15, r24	; 0x0f
 96a:	98 8b       	std	Y+16, r25	; 0x10
 96c:	a9 8b       	std	Y+17, r26	; 0x11
 96e:	ba 8b       	std	Y+18, r27	; 0x12

00000970 <.Loc.170>:
 970:	6f 85       	ldd	r22, Y+15	; 0x0f
 972:	78 89       	ldd	r23, Y+16	; 0x10
 974:	89 89       	ldd	r24, Y+17	; 0x11
 976:	9a 89       	ldd	r25, Y+18	; 0x12
 978:	0e 94 e6 05 	call	0xbcc	; 0xbcc <__fixunssfsi>
 97c:	6b 8f       	std	Y+27, r22	; 0x1b
 97e:	7c 8f       	std	Y+28, r23	; 0x1c
 980:	8d 8f       	std	Y+29, r24	; 0x1d
 982:	9e 8f       	std	Y+30, r25	; 0x1e
 984:	ab 8d       	ldd	r26, Y+27	; 0x1b
 986:	bc 8d       	ldd	r27, Y+28	; 0x1c
 988:	ba 87       	std	Y+10, r27	; 0x0a
 98a:	a9 87       	std	Y+9, r26	; 0x09

0000098c <.Loc.171>:
		while(__ticks)
 98c:	10 c0       	rjmp	.+32     	; 0x9ae <.L59>

0000098e <.L60>:
 98e:	80 e9       	ldi	r24, 0x90	; 144
 990:	91 e0       	ldi	r25, 0x01	; 1
 992:	9c 87       	std	Y+12, r25	; 0x0c
 994:	8b 87       	std	Y+11, r24	; 0x0b

00000996 <.LBB38>:
 996:	8b 85       	ldd	r24, Y+11	; 0x0b
 998:	9c 85       	ldd	r25, Y+12	; 0x0c

0000099a <.L1^B5>:
 99a:	01 97       	sbiw	r24, 0x01	; 1
 99c:	f1 f7       	brne	.-4      	; 0x99a <.L1^B5>
 99e:	9c 87       	std	Y+12, r25	; 0x0c
 9a0:	8b 87       	std	Y+11, r24	; 0x0b

000009a2 <.Loc.173>:
	...

000009a4 <.LBE38>:
			__ticks --;
 9a4:	89 85       	ldd	r24, Y+9	; 0x09
 9a6:	9a 85       	ldd	r25, Y+10	; 0x0a
 9a8:	01 97       	sbiw	r24, 0x01	; 1
 9aa:	9a 87       	std	Y+10, r25	; 0x0a
 9ac:	89 87       	std	Y+9, r24	; 0x09

000009ae <.L59>:
		while(__ticks)
 9ae:	89 85       	ldd	r24, Y+9	; 0x09
 9b0:	9a 85       	ldd	r25, Y+10	; 0x0a
 9b2:	00 97       	sbiw	r24, 0x00	; 0
 9b4:	61 f7       	brne	.-40     	; 0x98e <.L60>

000009b6 <.Loc.176>:
		return;
 9b6:	19 c0       	rjmp	.+50     	; 0x9ea <.L61>

000009b8 <.L65>:
		__ticks = (uint16_t)__tmp;
 9b8:	6d 81       	ldd	r22, Y+5	; 0x05
 9ba:	7e 81       	ldd	r23, Y+6	; 0x06
 9bc:	8f 81       	ldd	r24, Y+7	; 0x07
 9be:	98 85       	ldd	r25, Y+8	; 0x08
 9c0:	0e 94 e6 05 	call	0xbcc	; 0xbcc <__fixunssfsi>
 9c4:	6f 8f       	std	Y+31, r22	; 0x1f
 9c6:	78 a3       	std	Y+32, r23	; 0x20
 9c8:	89 a3       	std	Y+33, r24	; 0x21
 9ca:	9a a3       	std	Y+34, r25	; 0x22
 9cc:	8f 8d       	ldd	r24, Y+31	; 0x1f
 9ce:	98 a1       	ldd	r25, Y+32	; 0x20
 9d0:	9a 87       	std	Y+10, r25	; 0x0a
 9d2:	89 87       	std	Y+9, r24	; 0x09

000009d4 <.L56>:
 9d4:	89 85       	ldd	r24, Y+9	; 0x09
 9d6:	9a 85       	ldd	r25, Y+10	; 0x0a
 9d8:	9e 87       	std	Y+14, r25	; 0x0e
 9da:	8d 87       	std	Y+13, r24	; 0x0d

000009dc <.LBB40>:
 9dc:	8d 85       	ldd	r24, Y+13	; 0x0d
 9de:	9e 85       	ldd	r25, Y+14	; 0x0e

000009e0 <.L1^B6>:
 9e0:	01 97       	sbiw	r24, 0x01	; 1
 9e2:	f1 f7       	brne	.-4      	; 0x9e0 <.L1^B6>
 9e4:	9e 87       	std	Y+14, r25	; 0x0e
 9e6:	8d 87       	std	Y+13, r24	; 0x0d

000009e8 <.Loc.179>:
	...

000009ea <.L61>:
   _delay_ms(200);
   stuurlinks();
 9ea:	0e 94 b1 03 	call	0x762	; 0x762 <stuurlinks>

000009ee <.Loc.181>:
}
 9ee:	00 00       	nop
 9f0:	a2 96       	adiw	r28, 0x22	; 34
 9f2:	0f b6       	in	r0, 0x3f	; 63
 9f4:	f8 94       	cli
 9f6:	de bf       	out	0x3e, r29	; 62
 9f8:	0f be       	out	0x3f, r0	; 63
 9fa:	cd bf       	out	0x3d, r28	; 61
 9fc:	df 91       	pop	r29
 9fe:	cf 91       	pop	r28
 a00:	08 95       	ret

00000a02 <stuurvooruit>:

void stuurvooruit()
{
 a02:	cf 93       	push	r28
 a04:	df 93       	push	r29
 a06:	cd b7       	in	r28, 0x3d	; 61
 a08:	de b7       	in	r29, 0x3e	; 62

00000a0a <.Loc.183>:
    //
}
 a0a:	00 00       	nop
 a0c:	df 91       	pop	r29
 a0e:	cf 91       	pop	r28
 a10:	08 95       	ret

00000a12 <main>:

int state = 5;
int main(void)
{
 a12:	cf 93       	push	r28
 a14:	df 93       	push	r29
 a16:	cd b7       	in	r28, 0x3d	; 61
 a18:	de b7       	in	r29, 0x3e	; 62

00000a1a <.Loc.185>:
  init_servo();
 a1a:	0e 94 4f 02 	call	0x49e	; 0x49e <init_servo>

00000a1e <.L75>:
    while(1)
    {
        //sensoren checken

        switch(state)
 a1e:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <state>
 a22:	90 91 01 02 	lds	r25, 0x0201	; 0x800201 <state+0x1>
 a26:	85 30       	cpi	r24, 0x05	; 5
 a28:	91 05       	cpc	r25, r1
 a2a:	89 f1       	breq	.+98     	; 0xa8e <.L68>
 a2c:	85 30       	cpi	r24, 0x05	; 5
 a2e:	91 05       	cpc	r25, r1
 a30:	09 f0       	breq	.+2      	; 0xa34 <L0^A+0x2>

00000a32 <L0^A>:
 a32:	ac f7       	brge	.-22     	; 0xa1e <.L75>
 a34:	84 30       	cpi	r24, 0x04	; 4
 a36:	91 05       	cpc	r25, r1
 a38:	39 f1       	breq	.+78     	; 0xa88 <.L70>
 a3a:	84 30       	cpi	r24, 0x04	; 4
 a3c:	91 05       	cpc	r25, r1
 a3e:	09 f0       	breq	.+2      	; 0xa42 <L0^A+0x2>

00000a40 <L0^A>:
 a40:	74 f7       	brge	.-36     	; 0xa1e <.L75>
 a42:	83 30       	cpi	r24, 0x03	; 3
 a44:	91 05       	cpc	r25, r1
 a46:	31 f1       	breq	.+76     	; 0xa94 <.L76>
 a48:	83 30       	cpi	r24, 0x03	; 3
 a4a:	91 05       	cpc	r25, r1
 a4c:	09 f0       	breq	.+2      	; 0xa50 <L0^A+0x2>

00000a4e <L0^A>:
 a4e:	3c f7       	brge	.-50     	; 0xa1e <.L75>
 a50:	82 30       	cpi	r24, 0x02	; 2
 a52:	91 05       	cpc	r25, r1
 a54:	a1 f0       	breq	.+40     	; 0xa7e <.L72>
 a56:	82 30       	cpi	r24, 0x02	; 2
 a58:	91 05       	cpc	r25, r1
 a5a:	09 f0       	breq	.+2      	; 0xa5e <L0^A+0x2>

00000a5c <L0^A>:
 a5c:	04 f7       	brge	.-64     	; 0xa1e <.L75>
 a5e:	00 97       	sbiw	r24, 0x00	; 0
 a60:	21 f0       	breq	.+8      	; 0xa6a <.L73>
 a62:	81 30       	cpi	r24, 0x01	; 1
 a64:	91 05       	cpc	r25, r1
 a66:	21 f0       	breq	.+8      	; 0xa70 <.L74>
 a68:	da cf       	rjmp	.-76     	; 0xa1e <.L75>

00000a6a <.L73>:
        {
        case(0):
            rem();
 a6a:	0e 94 00 03 	call	0x600	; 0x600 <rem>

00000a6e <.Loc.188>:
            break;
 a6e:	13 c0       	rjmp	.+38     	; 0xa96 <.L69>

00000a70 <.L74>:

        case(1):
            vroem();
 a70:	0e 94 ed 02 	call	0x5da	; 0x5da <vroem>

00000a74 <.Loc.190>:
            plantsensoraan();
 a74:	0e 94 f8 02 	call	0x5f0	; 0x5f0 <plantsensoraan>

00000a78 <.Loc.191>:
            stuurvooruit();
 a78:	0e 94 01 05 	call	0xa02	; 0xa02 <stuurvooruit>

00000a7c <.Loc.192>:
            //zij sensoren en sturen bijhouden
            break;
 a7c:	0c c0       	rjmp	.+24     	; 0xa96 <.L69>

00000a7e <.L72>:

        case(2):
            rem();
 a7e:	0e 94 00 03 	call	0x600	; 0x600 <rem>

00000a82 <.Loc.194>:
            alarm();
 a82:	0e 94 a9 03 	call	0x752	; 0x752 <alarm>

00000a86 <.Loc.195>:
            //plant detect
            //alarm
            break;
 a86:	07 c0       	rjmp	.+14     	; 0xa96 <.L69>

00000a88 <.L70>:
            //bocht
            //plant sensoren uit
            break;

        case(4):
            stuurlinks();
 a88:	0e 94 b1 03 	call	0x762	; 0x762 <stuurlinks>

00000a8c <.Loc.197>:
            break;
 a8c:	04 c0       	rjmp	.+8      	; 0xa96 <.L69>

00000a8e <.L68>:

        case(5):
            stuurrechts();
 a8e:	0e 94 59 04 	call	0x8b2	; 0x8b2 <stuurrechts>

00000a92 <.Loc.199>:
            break;
 a92:	01 c0       	rjmp	.+2      	; 0xa96 <.L69>

00000a94 <.L76>:
	...

00000a96 <.L69>:
        switch(state)
 a96:	c3 cf       	rjmp	.-122    	; 0xa1e <.L75>

00000a98 <__divmodhi4>:
 a98:	97 fb       	bst	r25, 7

00000a9a <.Loc.1>:
 a9a:	07 2e       	mov	r0, r23

00000a9c <.Loc.2>:
 a9c:	16 f4       	brtc	.+4      	; 0xaa2 <.L^B1>

00000a9e <.Loc.3>:
 a9e:	00 94       	com	r0

00000aa0 <.Loc.4>:
 aa0:	07 d0       	rcall	.+14     	; 0xab0 <__divmodhi4_neg1>

00000aa2 <.L^B1>:
 aa2:	77 fd       	sbrc	r23, 7

00000aa4 <.Loc.6>:
 aa4:	09 d0       	rcall	.+18     	; 0xab8 <__divmodhi4_neg2>

00000aa6 <.Loc.7>:
 aa6:	0e 94 60 05 	call	0xac0	; 0xac0 <__udivmodhi4>

00000aaa <.Loc.8>:
 aaa:	07 fc       	sbrc	r0, 7

00000aac <.Loc.9>:
 aac:	05 d0       	rcall	.+10     	; 0xab8 <__divmodhi4_neg2>

00000aae <.Loc.10>:
 aae:	3e f4       	brtc	.+14     	; 0xabe <__divmodhi4_exit>

00000ab0 <__divmodhi4_neg1>:
 ab0:	90 95       	com	r25

00000ab2 <.Loc.12>:
 ab2:	81 95       	neg	r24

00000ab4 <.Loc.13>:
 ab4:	9f 4f       	sbci	r25, 0xFF	; 255

00000ab6 <.Loc.14>:
 ab6:	08 95       	ret

00000ab8 <__divmodhi4_neg2>:
 ab8:	70 95       	com	r23

00000aba <.Loc.16>:
 aba:	61 95       	neg	r22

00000abc <.Loc.17>:
 abc:	7f 4f       	sbci	r23, 0xFF	; 255

00000abe <__divmodhi4_exit>:
 abe:	08 95       	ret

00000ac0 <__udivmodhi4>:
 ac0:	aa 1b       	sub	r26, r26

00000ac2 <.Loc.1>:
 ac2:	bb 1b       	sub	r27, r27

00000ac4 <.Loc.2>:
 ac4:	51 e1       	ldi	r21, 0x11	; 17

00000ac6 <.Loc.3>:
 ac6:	07 c0       	rjmp	.+14     	; 0xad6 <__udivmodhi4_ep>

00000ac8 <__udivmodhi4_loop>:
 ac8:	aa 1f       	adc	r26, r26

00000aca <.Loc.5>:
 aca:	bb 1f       	adc	r27, r27

00000acc <.Loc.6>:
 acc:	a6 17       	cp	r26, r22

00000ace <.Loc.7>:
 ace:	b7 07       	cpc	r27, r23

00000ad0 <.Loc.8>:
 ad0:	10 f0       	brcs	.+4      	; 0xad6 <__udivmodhi4_ep>

00000ad2 <.Loc.9>:
 ad2:	a6 1b       	sub	r26, r22

00000ad4 <.Loc.10>:
 ad4:	b7 0b       	sbc	r27, r23

00000ad6 <__udivmodhi4_ep>:
 ad6:	88 1f       	adc	r24, r24

00000ad8 <.Loc.12>:
 ad8:	99 1f       	adc	r25, r25

00000ada <.Loc.13>:
 ada:	5a 95       	dec	r21

00000adc <.Loc.14>:
 adc:	a9 f7       	brne	.-22     	; 0xac8 <__udivmodhi4_loop>

00000ade <.Loc.15>:
 ade:	80 95       	com	r24

00000ae0 <.Loc.16>:
 ae0:	90 95       	com	r25

00000ae2 <.Loc.17>:
 ae2:	bc 01       	movw	r22, r24

00000ae4 <.Loc.18>:
 ae4:	cd 01       	movw	r24, r26

00000ae6 <.Loc.19>:
 ae6:	08 95       	ret

00000ae8 <__subsf3>:
 ae8:	50 58       	subi	r21, 0x80	; 128

00000aea <__addsf3>:
 aea:	bb 27       	eor	r27, r27
 aec:	aa 27       	eor	r26, r26
 aee:	0e 94 8c 05 	call	0xb18	; 0xb18 <__addsf3x>
 af2:	0c 94 8d 06 	jmp	0xd1a	; 0xd1a <__fp_round>

00000af6 <.L^B1>:
 af6:	0e 94 7f 06 	call	0xcfe	; 0xcfe <__fp_pscA>
 afa:	38 f0       	brcs	.+14     	; 0xb0a <.L_nan>
 afc:	0e 94 86 06 	call	0xd0c	; 0xd0c <__fp_pscB>
 b00:	20 f0       	brcs	.+8      	; 0xb0a <.L_nan>
 b02:	39 f4       	brne	.+14     	; 0xb12 <.L_inf>
 b04:	9f 3f       	cpi	r25, 0xFF	; 255
 b06:	19 f4       	brne	.+6      	; 0xb0e <.L_infB>
 b08:	26 f4       	brtc	.+8      	; 0xb12 <.L_inf>

00000b0a <.L_nan>:
 b0a:	0c 94 7c 06 	jmp	0xcf8	; 0xcf8 <__fp_nan>

00000b0e <.L_infB>:
 b0e:	0e f4       	brtc	.+2      	; 0xb12 <.L_inf>
 b10:	e0 95       	com	r30

00000b12 <.L_inf>:
 b12:	e7 fb       	bst	r30, 7
 b14:	0c 94 76 06 	jmp	0xcec	; 0xcec <__fp_inf>

00000b18 <__addsf3x>:
 b18:	e9 2f       	mov	r30, r25
 b1a:	0e 94 9e 06 	call	0xd3c	; 0xd3c <__fp_split3>
 b1e:	58 f3       	brcs	.-42     	; 0xaf6 <.L^B1>
 b20:	ba 17       	cp	r27, r26
 b22:	62 07       	cpc	r22, r18
 b24:	73 07       	cpc	r23, r19
 b26:	84 07       	cpc	r24, r20
 b28:	95 07       	cpc	r25, r21
 b2a:	20 f0       	brcs	.+8      	; 0xb34 <.L2^B1>
 b2c:	79 f4       	brne	.+30     	; 0xb4c <.L4^B1>
 b2e:	a6 f5       	brtc	.+104    	; 0xb98 <.L_add>
 b30:	0c 94 c0 06 	jmp	0xd80	; 0xd80 <__fp_zero>

00000b34 <.L2^B1>:
 b34:	0e f4       	brtc	.+2      	; 0xb38 <.L3^B1>
 b36:	e0 95       	com	r30

00000b38 <.L3^B1>:
 b38:	0b 2e       	mov	r0, r27
 b3a:	ba 2f       	mov	r27, r26
 b3c:	a0 2d       	mov	r26, r0
 b3e:	0b 01       	movw	r0, r22
 b40:	b9 01       	movw	r22, r18
 b42:	90 01       	movw	r18, r0
 b44:	0c 01       	movw	r0, r24
 b46:	ca 01       	movw	r24, r20
 b48:	a0 01       	movw	r20, r0
 b4a:	11 24       	eor	r1, r1

00000b4c <.L4^B1>:
 b4c:	ff 27       	eor	r31, r31
 b4e:	59 1b       	sub	r21, r25

00000b50 <.L5^B1>:
 b50:	99 f0       	breq	.+38     	; 0xb78 <.L7^B1>
 b52:	59 3f       	cpi	r21, 0xF9	; 249
 b54:	50 f4       	brcc	.+20     	; 0xb6a <.L6^B1>
 b56:	50 3e       	cpi	r21, 0xE0	; 224
 b58:	68 f1       	brcs	.+90     	; 0xbb4 <.L_ret>
 b5a:	1a 16       	cp	r1, r26
 b5c:	f0 40       	sbci	r31, 0x00	; 0
 b5e:	a2 2f       	mov	r26, r18
 b60:	23 2f       	mov	r18, r19
 b62:	34 2f       	mov	r19, r20
 b64:	44 27       	eor	r20, r20
 b66:	58 5f       	subi	r21, 0xF8	; 248
 b68:	f3 cf       	rjmp	.-26     	; 0xb50 <.L5^B1>

00000b6a <.L6^B1>:
 b6a:	46 95       	lsr	r20
 b6c:	37 95       	ror	r19
 b6e:	27 95       	ror	r18
 b70:	a7 95       	ror	r26
 b72:	f0 40       	sbci	r31, 0x00	; 0
 b74:	53 95       	inc	r21
 b76:	c9 f7       	brne	.-14     	; 0xb6a <.L6^B1>

00000b78 <.L7^B1>:
 b78:	7e f4       	brtc	.+30     	; 0xb98 <.L_add>
 b7a:	1f 16       	cp	r1, r31
 b7c:	ba 0b       	sbc	r27, r26
 b7e:	62 0b       	sbc	r22, r18
 b80:	73 0b       	sbc	r23, r19
 b82:	84 0b       	sbc	r24, r20
 b84:	ba f0       	brmi	.+46     	; 0xbb4 <.L_ret>

00000b86 <.L8^B1>:
 b86:	91 50       	subi	r25, 0x01	; 1
 b88:	a1 f0       	breq	.+40     	; 0xbb2 <.L9^B1>
 b8a:	ff 0f       	add	r31, r31
 b8c:	bb 1f       	adc	r27, r27
 b8e:	66 1f       	adc	r22, r22
 b90:	77 1f       	adc	r23, r23
 b92:	88 1f       	adc	r24, r24
 b94:	c2 f7       	brpl	.-16     	; 0xb86 <.L8^B1>
 b96:	0e c0       	rjmp	.+28     	; 0xbb4 <.L_ret>

00000b98 <.L_add>:
 b98:	ba 0f       	add	r27, r26
 b9a:	62 1f       	adc	r22, r18
 b9c:	73 1f       	adc	r23, r19
 b9e:	84 1f       	adc	r24, r20
 ba0:	48 f4       	brcc	.+18     	; 0xbb4 <.L_ret>
 ba2:	87 95       	ror	r24
 ba4:	77 95       	ror	r23
 ba6:	67 95       	ror	r22
 ba8:	b7 95       	ror	r27
 baa:	f7 95       	ror	r31
 bac:	9e 3f       	cpi	r25, 0xFE	; 254
 bae:	08 f0       	brcs	.+2      	; 0xbb2 <.L9^B1>
 bb0:	b0 cf       	rjmp	.-160    	; 0xb12 <.L_inf>

00000bb2 <.L9^B1>:
 bb2:	93 95       	inc	r25

00000bb4 <.L_ret>:
 bb4:	88 0f       	add	r24, r24
 bb6:	08 f0       	brcs	.+2      	; 0xbba <.L1^B1>
 bb8:	99 27       	eor	r25, r25

00000bba <.L1^B1>:
 bba:	ee 0f       	add	r30, r30
 bbc:	97 95       	ror	r25
 bbe:	87 95       	ror	r24
 bc0:	08 95       	ret

00000bc2 <__cmpsf2>:
 bc2:	0e 94 52 06 	call	0xca4	; 0xca4 <__fp_cmp>
 bc6:	08 f4       	brcc	.+2      	; 0xbca <.L1^B1>
 bc8:	81 e0       	ldi	r24, 0x01	; 1

00000bca <.L1^B1>:
 bca:	08 95       	ret

00000bcc <__fixunssfsi>:
 bcc:	0e 94 a6 06 	call	0xd4c	; 0xd4c <__fp_splitA>
 bd0:	88 f0       	brcs	.+34     	; 0xbf4 <.L_err>
 bd2:	9f 57       	subi	r25, 0x7F	; 127
 bd4:	98 f0       	brcs	.+38     	; 0xbfc <.L_zr>
 bd6:	b9 2f       	mov	r27, r25
 bd8:	99 27       	eor	r25, r25
 bda:	b7 51       	subi	r27, 0x17	; 23
 bdc:	b0 f0       	brcs	.+44     	; 0xc0a <.L4^B1>
 bde:	e1 f0       	breq	.+56     	; 0xc18 <.L_sign>

00000be0 <.L1^B1>:
 be0:	66 0f       	add	r22, r22
 be2:	77 1f       	adc	r23, r23
 be4:	88 1f       	adc	r24, r24
 be6:	99 1f       	adc	r25, r25
 be8:	1a f0       	brmi	.+6      	; 0xbf0 <.L2^B1>
 bea:	ba 95       	dec	r27
 bec:	c9 f7       	brne	.-14     	; 0xbe0 <.L1^B1>
 bee:	14 c0       	rjmp	.+40     	; 0xc18 <.L_sign>

00000bf0 <.L2^B1>:
 bf0:	b1 30       	cpi	r27, 0x01	; 1
 bf2:	91 f0       	breq	.+36     	; 0xc18 <.L_sign>

00000bf4 <.L_err>:
 bf4:	0e 94 c0 06 	call	0xd80	; 0xd80 <__fp_zero>
 bf8:	b1 e0       	ldi	r27, 0x01	; 1
 bfa:	08 95       	ret

00000bfc <.L_zr>:
 bfc:	0c 94 c0 06 	jmp	0xd80	; 0xd80 <__fp_zero>

00000c00 <.L3^B1>:
 c00:	67 2f       	mov	r22, r23
 c02:	78 2f       	mov	r23, r24
 c04:	88 27       	eor	r24, r24
 c06:	b8 5f       	subi	r27, 0xF8	; 248
 c08:	39 f0       	breq	.+14     	; 0xc18 <.L_sign>

00000c0a <.L4^B1>:
 c0a:	b9 3f       	cpi	r27, 0xF9	; 249
 c0c:	cc f3       	brlt	.-14     	; 0xc00 <.L3^B1>

00000c0e <.L5^B1>:
 c0e:	86 95       	lsr	r24
 c10:	77 95       	ror	r23
 c12:	67 95       	ror	r22
 c14:	b3 95       	inc	r27
 c16:	d9 f7       	brne	.-10     	; 0xc0e <.L5^B1>

00000c18 <.L_sign>:
 c18:	3e f4       	brtc	.+14     	; 0xc28 <.L6^B1>
 c1a:	90 95       	com	r25
 c1c:	80 95       	com	r24
 c1e:	70 95       	com	r23
 c20:	61 95       	neg	r22
 c22:	7f 4f       	sbci	r23, 0xFF	; 255
 c24:	8f 4f       	sbci	r24, 0xFF	; 255
 c26:	9f 4f       	sbci	r25, 0xFF	; 255

00000c28 <.L6^B1>:
 c28:	08 95       	ret

00000c2a <__floatunsisf>:
 c2a:	e8 94       	clt
 c2c:	09 c0       	rjmp	.+18     	; 0xc40 <.L1^B1>

00000c2e <__floatsisf>:
 c2e:	97 fb       	bst	r25, 7
 c30:	3e f4       	brtc	.+14     	; 0xc40 <.L1^B1>
 c32:	90 95       	com	r25
 c34:	80 95       	com	r24
 c36:	70 95       	com	r23
 c38:	61 95       	neg	r22
 c3a:	7f 4f       	sbci	r23, 0xFF	; 255
 c3c:	8f 4f       	sbci	r24, 0xFF	; 255
 c3e:	9f 4f       	sbci	r25, 0xFF	; 255

00000c40 <.L1^B1>:
 c40:	99 23       	and	r25, r25
 c42:	a9 f0       	breq	.+42     	; 0xc6e <.L4^B1>
 c44:	f9 2f       	mov	r31, r25
 c46:	96 e9       	ldi	r25, 0x96	; 150
 c48:	bb 27       	eor	r27, r27

00000c4a <.L2^B1>:
 c4a:	93 95       	inc	r25
 c4c:	f6 95       	lsr	r31
 c4e:	87 95       	ror	r24
 c50:	77 95       	ror	r23
 c52:	67 95       	ror	r22
 c54:	b7 95       	ror	r27
 c56:	f1 11       	cpse	r31, r1
 c58:	f8 cf       	rjmp	.-16     	; 0xc4a <.L2^B1>
 c5a:	fa f4       	brpl	.+62     	; 0xc9a <.L_pack>
 c5c:	bb 0f       	add	r27, r27
 c5e:	11 f4       	brne	.+4      	; 0xc64 <.L3^B1>
 c60:	60 ff       	sbrs	r22, 0
 c62:	1b c0       	rjmp	.+54     	; 0xc9a <.L_pack>

00000c64 <.L3^B1>:
 c64:	6f 5f       	subi	r22, 0xFF	; 255
 c66:	7f 4f       	sbci	r23, 0xFF	; 255
 c68:	8f 4f       	sbci	r24, 0xFF	; 255
 c6a:	9f 4f       	sbci	r25, 0xFF	; 255
 c6c:	16 c0       	rjmp	.+44     	; 0xc9a <.L_pack>

00000c6e <.L4^B1>:
 c6e:	88 23       	and	r24, r24
 c70:	11 f0       	breq	.+4      	; 0xc76 <.L5^B1>
 c72:	96 e9       	ldi	r25, 0x96	; 150
 c74:	11 c0       	rjmp	.+34     	; 0xc98 <.L8^B1>

00000c76 <.L5^B1>:
 c76:	77 23       	and	r23, r23
 c78:	21 f0       	breq	.+8      	; 0xc82 <.L6^B1>
 c7a:	9e e8       	ldi	r25, 0x8E	; 142
 c7c:	87 2f       	mov	r24, r23
 c7e:	76 2f       	mov	r23, r22
 c80:	05 c0       	rjmp	.+10     	; 0xc8c <.L7^B1>

00000c82 <.L6^B1>:
 c82:	66 23       	and	r22, r22
 c84:	71 f0       	breq	.+28     	; 0xca2 <.L9^B1>
 c86:	96 e8       	ldi	r25, 0x86	; 134
 c88:	86 2f       	mov	r24, r22
 c8a:	70 e0       	ldi	r23, 0x00	; 0

00000c8c <.L7^B1>:
 c8c:	60 e0       	ldi	r22, 0x00	; 0
 c8e:	2a f0       	brmi	.+10     	; 0xc9a <.L_pack>

00000c90 <.L10^B1>:
 c90:	9a 95       	dec	r25
 c92:	66 0f       	add	r22, r22
 c94:	77 1f       	adc	r23, r23
 c96:	88 1f       	adc	r24, r24

00000c98 <.L8^B1>:
 c98:	da f7       	brpl	.-10     	; 0xc90 <.L10^B1>

00000c9a <.L_pack>:
 c9a:	88 0f       	add	r24, r24
 c9c:	96 95       	lsr	r25
 c9e:	87 95       	ror	r24
 ca0:	97 f9       	bld	r25, 7

00000ca2 <.L9^B1>:
 ca2:	08 95       	ret

00000ca4 <__fp_cmp>:
 ca4:	99 0f       	add	r25, r25
 ca6:	00 08       	sbc	r0, r0
 ca8:	55 0f       	add	r21, r21
 caa:	aa 0b       	sbc	r26, r26
 cac:	e0 e8       	ldi	r30, 0x80	; 128
 cae:	fe ef       	ldi	r31, 0xFE	; 254
 cb0:	16 16       	cp	r1, r22
 cb2:	17 06       	cpc	r1, r23
 cb4:	e8 07       	cpc	r30, r24
 cb6:	f9 07       	cpc	r31, r25
 cb8:	c0 f0       	brcs	.+48     	; 0xcea <.L9^B1>
 cba:	12 16       	cp	r1, r18
 cbc:	13 06       	cpc	r1, r19
 cbe:	e4 07       	cpc	r30, r20
 cc0:	f5 07       	cpc	r31, r21
 cc2:	98 f0       	brcs	.+38     	; 0xcea <.L9^B1>
 cc4:	62 1b       	sub	r22, r18
 cc6:	73 0b       	sbc	r23, r19
 cc8:	84 0b       	sbc	r24, r20
 cca:	95 0b       	sbc	r25, r21
 ccc:	39 f4       	brne	.+14     	; 0xcdc <.L1^B1>
 cce:	0a 26       	eor	r0, r26
 cd0:	61 f0       	breq	.+24     	; 0xcea <.L9^B1>
 cd2:	23 2b       	or	r18, r19
 cd4:	24 2b       	or	r18, r20
 cd6:	25 2b       	or	r18, r21
 cd8:	21 f4       	brne	.+8      	; 0xce2 <.L2^B1>
 cda:	08 95       	ret

00000cdc <.L1^B1>:
 cdc:	0a 26       	eor	r0, r26
 cde:	09 f4       	brne	.+2      	; 0xce2 <.L2^B1>
 ce0:	a1 40       	sbci	r26, 0x01	; 1

00000ce2 <.L2^B1>:
 ce2:	a6 95       	lsr	r26
 ce4:	8f ef       	ldi	r24, 0xFF	; 255
 ce6:	81 1d       	adc	r24, r1
 ce8:	81 1d       	adc	r24, r1

00000cea <.L9^B1>:
 cea:	08 95       	ret

00000cec <__fp_inf>:
 cec:	97 f9       	bld	r25, 7
 cee:	9f 67       	ori	r25, 0x7F	; 127
 cf0:	80 e8       	ldi	r24, 0x80	; 128
 cf2:	70 e0       	ldi	r23, 0x00	; 0
 cf4:	60 e0       	ldi	r22, 0x00	; 0
 cf6:	08 95       	ret

00000cf8 <__fp_nan>:
 cf8:	9f ef       	ldi	r25, 0xFF	; 255
 cfa:	80 ec       	ldi	r24, 0xC0	; 192
 cfc:	08 95       	ret

00000cfe <__fp_pscA>:
 cfe:	00 24       	eor	r0, r0
 d00:	0a 94       	dec	r0
 d02:	16 16       	cp	r1, r22
 d04:	17 06       	cpc	r1, r23
 d06:	18 06       	cpc	r1, r24
 d08:	09 06       	cpc	r0, r25
 d0a:	08 95       	ret

00000d0c <__fp_pscB>:
 d0c:	00 24       	eor	r0, r0
 d0e:	0a 94       	dec	r0
 d10:	12 16       	cp	r1, r18
 d12:	13 06       	cpc	r1, r19
 d14:	14 06       	cpc	r1, r20
 d16:	05 06       	cpc	r0, r21
 d18:	08 95       	ret

00000d1a <__fp_round>:
 d1a:	09 2e       	mov	r0, r25
 d1c:	03 94       	inc	r0
 d1e:	00 0c       	add	r0, r0
 d20:	11 f4       	brne	.+4      	; 0xd26 <.L1^B1>
 d22:	88 23       	and	r24, r24
 d24:	52 f0       	brmi	.+20     	; 0xd3a <.L3^B1>

00000d26 <.L1^B1>:
 d26:	bb 0f       	add	r27, r27
 d28:	40 f4       	brcc	.+16     	; 0xd3a <.L3^B1>
 d2a:	bf 2b       	or	r27, r31
 d2c:	11 f4       	brne	.+4      	; 0xd32 <.L2^B1>
 d2e:	60 ff       	sbrs	r22, 0
 d30:	04 c0       	rjmp	.+8      	; 0xd3a <.L3^B1>

00000d32 <.L2^B1>:
 d32:	6f 5f       	subi	r22, 0xFF	; 255
 d34:	7f 4f       	sbci	r23, 0xFF	; 255
 d36:	8f 4f       	sbci	r24, 0xFF	; 255
 d38:	9f 4f       	sbci	r25, 0xFF	; 255

00000d3a <.L3^B1>:
 d3a:	08 95       	ret

00000d3c <__fp_split3>:
 d3c:	57 fd       	sbrc	r21, 7
 d3e:	90 58       	subi	r25, 0x80	; 128
 d40:	44 0f       	add	r20, r20
 d42:	55 1f       	adc	r21, r21
 d44:	59 f0       	breq	.+22     	; 0xd5c <.L4^B1>
 d46:	5f 3f       	cpi	r21, 0xFF	; 255
 d48:	71 f0       	breq	.+28     	; 0xd66 <.L5^B1>

00000d4a <.L1^B1>:
 d4a:	47 95       	ror	r20

00000d4c <__fp_splitA>:
 d4c:	88 0f       	add	r24, r24
 d4e:	97 fb       	bst	r25, 7
 d50:	99 1f       	adc	r25, r25
 d52:	61 f0       	breq	.+24     	; 0xd6c <.L6^B1>
 d54:	9f 3f       	cpi	r25, 0xFF	; 255
 d56:	79 f0       	breq	.+30     	; 0xd76 <.L7^B1>

00000d58 <.L3^B1>:
 d58:	87 95       	ror	r24
 d5a:	08 95       	ret

00000d5c <.L4^B1>:
 d5c:	12 16       	cp	r1, r18
 d5e:	13 06       	cpc	r1, r19
 d60:	14 06       	cpc	r1, r20
 d62:	55 1f       	adc	r21, r21
 d64:	f2 cf       	rjmp	.-28     	; 0xd4a <.L1^B1>

00000d66 <.L5^B1>:
 d66:	46 95       	lsr	r20
 d68:	f1 df       	rcall	.-30     	; 0xd4c <__fp_splitA>
 d6a:	08 c0       	rjmp	.+16     	; 0xd7c <.L8^B1>

00000d6c <.L6^B1>:
 d6c:	16 16       	cp	r1, r22
 d6e:	17 06       	cpc	r1, r23
 d70:	18 06       	cpc	r1, r24
 d72:	99 1f       	adc	r25, r25
 d74:	f1 cf       	rjmp	.-30     	; 0xd58 <.L3^B1>

00000d76 <.L7^B1>:
 d76:	86 95       	lsr	r24
 d78:	71 05       	cpc	r23, r1
 d7a:	61 05       	cpc	r22, r1

00000d7c <.L8^B1>:
 d7c:	08 94       	sec
 d7e:	08 95       	ret

00000d80 <__fp_zero>:
 d80:	e8 94       	clt

00000d82 <__fp_szero>:
 d82:	bb 27       	eor	r27, r27
 d84:	66 27       	eor	r22, r22
 d86:	77 27       	eor	r23, r23
 d88:	cb 01       	movw	r24, r22
 d8a:	97 f9       	bld	r25, 7
 d8c:	08 95       	ret

00000d8e <__gesf2>:
 d8e:	0e 94 52 06 	call	0xca4	; 0xca4 <__fp_cmp>
 d92:	08 f4       	brcc	.+2      	; 0xd96 <.L1^B1>
 d94:	8f ef       	ldi	r24, 0xFF	; 255

00000d96 <.L1^B1>:
 d96:	08 95       	ret

00000d98 <__mulsf3>:
 d98:	0e 94 df 06 	call	0xdbe	; 0xdbe <__mulsf3x>
 d9c:	0c 94 8d 06 	jmp	0xd1a	; 0xd1a <__fp_round>

00000da0 <.L^B1>:
 da0:	0e 94 7f 06 	call	0xcfe	; 0xcfe <__fp_pscA>
 da4:	38 f0       	brcs	.+14     	; 0xdb4 <.L1^B1>
 da6:	0e 94 86 06 	call	0xd0c	; 0xd0c <__fp_pscB>
 daa:	20 f0       	brcs	.+8      	; 0xdb4 <.L1^B1>
 dac:	95 23       	and	r25, r21
 dae:	11 f0       	breq	.+4      	; 0xdb4 <.L1^B1>
 db0:	0c 94 76 06 	jmp	0xcec	; 0xcec <__fp_inf>

00000db4 <.L1^B1>:
 db4:	0c 94 7c 06 	jmp	0xcf8	; 0xcf8 <__fp_nan>

00000db8 <.L2^B1>:
 db8:	11 24       	eor	r1, r1
 dba:	0c 94 c1 06 	jmp	0xd82	; 0xd82 <__fp_szero>

00000dbe <__mulsf3x>:
 dbe:	0e 94 9e 06 	call	0xd3c	; 0xd3c <__fp_split3>
 dc2:	70 f3       	brcs	.-36     	; 0xda0 <.L^B1>

00000dc4 <__mulsf3_pse>:
 dc4:	95 9f       	mul	r25, r21
 dc6:	c1 f3       	breq	.-16     	; 0xdb8 <.L2^B1>
 dc8:	95 0f       	add	r25, r21
 dca:	50 e0       	ldi	r21, 0x00	; 0
 dcc:	55 1f       	adc	r21, r21
 dce:	62 9f       	mul	r22, r18
 dd0:	f0 01       	movw	r30, r0
 dd2:	72 9f       	mul	r23, r18
 dd4:	bb 27       	eor	r27, r27
 dd6:	f0 0d       	add	r31, r0
 dd8:	b1 1d       	adc	r27, r1
 dda:	63 9f       	mul	r22, r19
 ddc:	aa 27       	eor	r26, r26
 dde:	f0 0d       	add	r31, r0
 de0:	b1 1d       	adc	r27, r1
 de2:	aa 1f       	adc	r26, r26
 de4:	64 9f       	mul	r22, r20
 de6:	66 27       	eor	r22, r22
 de8:	b0 0d       	add	r27, r0
 dea:	a1 1d       	adc	r26, r1
 dec:	66 1f       	adc	r22, r22
 dee:	82 9f       	mul	r24, r18
 df0:	22 27       	eor	r18, r18
 df2:	b0 0d       	add	r27, r0
 df4:	a1 1d       	adc	r26, r1
 df6:	62 1f       	adc	r22, r18
 df8:	73 9f       	mul	r23, r19
 dfa:	b0 0d       	add	r27, r0
 dfc:	a1 1d       	adc	r26, r1
 dfe:	62 1f       	adc	r22, r18
 e00:	83 9f       	mul	r24, r19
 e02:	a0 0d       	add	r26, r0
 e04:	61 1d       	adc	r22, r1
 e06:	22 1f       	adc	r18, r18
 e08:	74 9f       	mul	r23, r20
 e0a:	33 27       	eor	r19, r19
 e0c:	a0 0d       	add	r26, r0
 e0e:	61 1d       	adc	r22, r1
 e10:	23 1f       	adc	r18, r19
 e12:	84 9f       	mul	r24, r20
 e14:	60 0d       	add	r22, r0
 e16:	21 1d       	adc	r18, r1
 e18:	82 2f       	mov	r24, r18
 e1a:	76 2f       	mov	r23, r22
 e1c:	6a 2f       	mov	r22, r26
 e1e:	11 24       	eor	r1, r1
 e20:	9f 57       	subi	r25, 0x7F	; 127
 e22:	50 40       	sbci	r21, 0x00	; 0
 e24:	9a f0       	brmi	.+38     	; 0xe4c <.L13^B1>
 e26:	f1 f0       	breq	.+60     	; 0xe64 <.L15^B1>

00000e28 <.L10^B1>:
 e28:	88 23       	and	r24, r24
 e2a:	4a f0       	brmi	.+18     	; 0xe3e <.L11^B1>
 e2c:	ee 0f       	add	r30, r30
 e2e:	ff 1f       	adc	r31, r31
 e30:	bb 1f       	adc	r27, r27
 e32:	66 1f       	adc	r22, r22
 e34:	77 1f       	adc	r23, r23
 e36:	88 1f       	adc	r24, r24
 e38:	91 50       	subi	r25, 0x01	; 1
 e3a:	50 40       	sbci	r21, 0x00	; 0
 e3c:	a9 f7       	brne	.-22     	; 0xe28 <.L10^B1>

00000e3e <.L11^B1>:
 e3e:	9e 3f       	cpi	r25, 0xFE	; 254
 e40:	51 05       	cpc	r21, r1
 e42:	80 f0       	brcs	.+32     	; 0xe64 <.L15^B1>
 e44:	0c 94 76 06 	jmp	0xcec	; 0xcec <__fp_inf>

00000e48 <.L12^B1>:
 e48:	0c 94 c1 06 	jmp	0xd82	; 0xd82 <__fp_szero>

00000e4c <.L13^B1>:
 e4c:	5f 3f       	cpi	r21, 0xFF	; 255
 e4e:	e4 f3       	brlt	.-8      	; 0xe48 <.L12^B1>
 e50:	98 3e       	cpi	r25, 0xE8	; 232
 e52:	d4 f3       	brlt	.-12     	; 0xe48 <.L12^B1>

00000e54 <.L14^B1>:
 e54:	86 95       	lsr	r24
 e56:	77 95       	ror	r23
 e58:	67 95       	ror	r22
 e5a:	b7 95       	ror	r27
 e5c:	f7 95       	ror	r31
 e5e:	e7 95       	ror	r30
 e60:	9f 5f       	subi	r25, 0xFF	; 255
 e62:	c1 f7       	brne	.-16     	; 0xe54 <.L14^B1>

00000e64 <.L15^B1>:
 e64:	fe 2b       	or	r31, r30
 e66:	88 0f       	add	r24, r24
 e68:	91 1d       	adc	r25, r1
 e6a:	96 95       	lsr	r25
 e6c:	87 95       	ror	r24
 e6e:	97 f9       	bld	r25, 7
 e70:	08 95       	ret

00000e72 <_exit>:
 e72:	f8 94       	cli

00000e74 <__stop_program>:
 e74:	ff cf       	rjmp	.-2      	; 0xe74 <__stop_program>
