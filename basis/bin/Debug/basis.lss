
bin\Debug\basis.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800200  0000137a  0000142e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000137a  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000006  00800200  00800200  0000142e  2**0
                  ALLOC
  3 .fuse         00000003  00820000  00820000  0000142e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  4 .comment      00000012  00000000  00000000  00001431  2**0
                  CONTENTS, READONLY
  5 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001444  2**2
                  CONTENTS, READONLY, OCTETS
  6 .debug_aranges 000000b8  00000000  00000000  00001488  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  7 .debug_info   00001111  00000000  00000000  00001540  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  8 .debug_abbrev 00000d95  00000000  00000000  00002651  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  9 .debug_line   00000d5e  00000000  00000000  000033e6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_frame  00000394  00000000  00000000  00004144  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_str    0000064b  00000000  00000000  000044d8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_line_str 000001b8  00000000  00000000  00004b23  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 72 00 	jmp	0xe4	; 0xe4 <__ctors_end>
       4:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
       8:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
       c:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      10:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      14:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      18:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      1c:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      20:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      24:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      28:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      2c:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      30:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      34:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      38:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      3c:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      40:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      44:	0c 94 11 02 	jmp	0x422	; 0x422 <__vector_17>
      48:	0c 94 39 02 	jmp	0x472	; 0x472 <__vector_18>
      4c:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      50:	0c 94 e0 01 	jmp	0x3c0	; 0x3c0 <__vector_20>
      54:	0c 94 f7 00 	jmp	0x1ee	; 0x1ee <__vector_21>
      58:	0c 94 25 01 	jmp	0x24a	; 0x24a <__vector_22>
      5c:	0c 94 88 00 	jmp	0x110	; 0x110 <__vector_23>
      60:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      64:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      68:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      6c:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      70:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      74:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      78:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      7c:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      80:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      84:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      88:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      8c:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      90:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      94:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      98:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      9c:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      a0:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      a4:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      a8:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      ac:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      b0:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      b4:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      b8:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      bc:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      c0:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      c4:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      c8:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      cc:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      d0:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      d4:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      d8:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      dc:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      e0:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>

000000e4 <__ctors_end>:
      e4:	11 24       	eor	r1, r1
      e6:	1f be       	out	0x3f, r1	; 63
      e8:	cf ef       	ldi	r28, 0xFF	; 255
      ea:	d1 e2       	ldi	r29, 0x21	; 33
      ec:	de bf       	out	0x3e, r29	; 62
      ee:	cd bf       	out	0x3d, r28	; 61
      f0:	00 e0       	ldi	r16, 0x00	; 0
      f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_clear_bss>:
      f4:	22 e0       	ldi	r18, 0x02	; 2

000000f6 <.Loc.1>:
      f6:	a0 e0       	ldi	r26, 0x00	; 0

000000f8 <.Loc.2>:
      f8:	b2 e0       	ldi	r27, 0x02	; 2

000000fa <.Loc.3>:
      fa:	01 c0       	rjmp	.+2      	; 0xfe <.Loc.5>

000000fc <.Loc.4>:
      fc:	1d 92       	st	X+, r1

000000fe <.Loc.5>:
      fe:	a6 30       	cpi	r26, 0x06	; 6

00000100 <.Loc.6>:
     100:	b2 07       	cpc	r27, r18

00000102 <.Loc.7>:
     102:	e1 f7       	brne	.-8      	; 0xfc <.Loc.4>

00000104 <L0^A>:
     104:	0e 94 66 07 	call	0xecc	; 0xecc <main>
     108:	0c 94 bb 09 	jmp	0x1376	; 0x1376 <_exit>

0000010c <__bad_interrupt>:
     10c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000110 <__vector_23>:
#include <avr/io.h>
#include <avr/interrupt.h>
#include "h_bridge.h"

ISR(TIMER0_OVF_vect)
{
     110:	1f 92       	push	r1
     112:	0f 92       	push	r0
     114:	0f b6       	in	r0, 0x3f	; 63
     116:	0f 92       	push	r0
     118:	11 24       	eor	r1, r1
     11a:	0b b6       	in	r0, 0x3b	; 59
     11c:	0f 92       	push	r0
     11e:	2f 93       	push	r18
     120:	8f 93       	push	r24
     122:	9f 93       	push	r25
     124:	ef 93       	push	r30
     126:	ff 93       	push	r31
     128:	cf 93       	push	r28
     12a:	df 93       	push	r29
     12c:	cd b7       	in	r28, 0x3d	; 61
     12e:	de b7       	in	r29, 0x3e	; 62

00000130 <.Loc.1>:
	if (OCR0A == 0 && OCR0B == 0)
     130:	87 e4       	ldi	r24, 0x47	; 71
     132:	90 e0       	ldi	r25, 0x00	; 0
     134:	fc 01       	movw	r30, r24
     136:	80 81       	ld	r24, Z

00000138 <.Loc.2>:
     138:	88 23       	and	r24, r24
     13a:	c9 f4       	brne	.+50     	; 0x16e <.L2>

0000013c <.Loc.3>:
     13c:	88 e4       	ldi	r24, 0x48	; 72
     13e:	90 e0       	ldi	r25, 0x00	; 0
     140:	fc 01       	movw	r30, r24
     142:	80 81       	ld	r24, Z

00000144 <.Loc.4>:
     144:	88 23       	and	r24, r24
     146:	99 f4       	brne	.+38     	; 0x16e <.L2>

00000148 <.Loc.5>:
	{
		PORT_RPWM &= ~(1<<PIN_RPWM);
     148:	85 e2       	ldi	r24, 0x25	; 37
     14a:	90 e0       	ldi	r25, 0x00	; 0
     14c:	fc 01       	movw	r30, r24
     14e:	20 81       	ld	r18, Z

00000150 <.Loc.6>:
     150:	85 e2       	ldi	r24, 0x25	; 37
     152:	90 e0       	ldi	r25, 0x00	; 0

00000154 <.Loc.7>:
     154:	2f 7b       	andi	r18, 0xBF	; 191
     156:	fc 01       	movw	r30, r24
     158:	20 83       	st	Z, r18

0000015a <.Loc.8>:
		PORT_LPWM &= ~(1<<PIN_LPWM);
     15a:	85 e2       	ldi	r24, 0x25	; 37
     15c:	90 e0       	ldi	r25, 0x00	; 0
     15e:	fc 01       	movw	r30, r24
     160:	20 81       	ld	r18, Z

00000162 <.Loc.9>:
     162:	85 e2       	ldi	r24, 0x25	; 37
     164:	90 e0       	ldi	r25, 0x00	; 0

00000166 <.Loc.10>:
     166:	2f 77       	andi	r18, 0x7F	; 127
     168:	fc 01       	movw	r30, r24
     16a:	20 83       	st	Z, r18

0000016c <.Loc.11>:
	else if (OCR0B != 0)
	{
		PORT_RPWM &= ~(1<<PIN_RPWM);
		PORT_LPWM |= (1<<PIN_LPWM);
	}
}
     16c:	31 c0       	rjmp	.+98     	; 0x1d0 <.L5>

0000016e <.L2>:
	else if (OCR0A != 0)
     16e:	87 e4       	ldi	r24, 0x47	; 71
     170:	90 e0       	ldi	r25, 0x00	; 0
     172:	fc 01       	movw	r30, r24
     174:	80 81       	ld	r24, Z

00000176 <.Loc.13>:
     176:	88 23       	and	r24, r24
     178:	99 f0       	breq	.+38     	; 0x1a0 <.L4>

0000017a <.Loc.14>:
		PORT_LPWM &= ~(1<<PIN_LPWM);
     17a:	85 e2       	ldi	r24, 0x25	; 37
     17c:	90 e0       	ldi	r25, 0x00	; 0
     17e:	fc 01       	movw	r30, r24
     180:	20 81       	ld	r18, Z

00000182 <.Loc.15>:
     182:	85 e2       	ldi	r24, 0x25	; 37
     184:	90 e0       	ldi	r25, 0x00	; 0

00000186 <.Loc.16>:
     186:	2f 77       	andi	r18, 0x7F	; 127
     188:	fc 01       	movw	r30, r24
     18a:	20 83       	st	Z, r18

0000018c <.Loc.17>:
		PORT_RPWM |= (1<<PIN_RPWM);
     18c:	85 e2       	ldi	r24, 0x25	; 37
     18e:	90 e0       	ldi	r25, 0x00	; 0
     190:	fc 01       	movw	r30, r24
     192:	20 81       	ld	r18, Z
     194:	85 e2       	ldi	r24, 0x25	; 37
     196:	90 e0       	ldi	r25, 0x00	; 0

00000198 <.Loc.18>:
     198:	20 64       	ori	r18, 0x40	; 64
     19a:	fc 01       	movw	r30, r24
     19c:	20 83       	st	Z, r18

0000019e <.Loc.19>:
}
     19e:	18 c0       	rjmp	.+48     	; 0x1d0 <.L5>

000001a0 <.L4>:
	else if (OCR0B != 0)
     1a0:	88 e4       	ldi	r24, 0x48	; 72
     1a2:	90 e0       	ldi	r25, 0x00	; 0
     1a4:	fc 01       	movw	r30, r24
     1a6:	80 81       	ld	r24, Z

000001a8 <.Loc.21>:
     1a8:	88 23       	and	r24, r24
     1aa:	91 f0       	breq	.+36     	; 0x1d0 <.L5>

000001ac <.Loc.22>:
		PORT_RPWM &= ~(1<<PIN_RPWM);
     1ac:	85 e2       	ldi	r24, 0x25	; 37
     1ae:	90 e0       	ldi	r25, 0x00	; 0
     1b0:	fc 01       	movw	r30, r24
     1b2:	20 81       	ld	r18, Z

000001b4 <.Loc.23>:
     1b4:	85 e2       	ldi	r24, 0x25	; 37
     1b6:	90 e0       	ldi	r25, 0x00	; 0

000001b8 <.Loc.24>:
     1b8:	2f 7b       	andi	r18, 0xBF	; 191
     1ba:	fc 01       	movw	r30, r24
     1bc:	20 83       	st	Z, r18

000001be <.Loc.25>:
		PORT_LPWM |= (1<<PIN_LPWM);
     1be:	85 e2       	ldi	r24, 0x25	; 37
     1c0:	90 e0       	ldi	r25, 0x00	; 0
     1c2:	fc 01       	movw	r30, r24
     1c4:	20 81       	ld	r18, Z
     1c6:	85 e2       	ldi	r24, 0x25	; 37
     1c8:	90 e0       	ldi	r25, 0x00	; 0

000001ca <.Loc.26>:
     1ca:	20 68       	ori	r18, 0x80	; 128
     1cc:	fc 01       	movw	r30, r24
     1ce:	20 83       	st	Z, r18

000001d0 <.L5>:
}
     1d0:	00 00       	nop
     1d2:	df 91       	pop	r29
     1d4:	cf 91       	pop	r28
     1d6:	ff 91       	pop	r31
     1d8:	ef 91       	pop	r30
     1da:	9f 91       	pop	r25
     1dc:	8f 91       	pop	r24
     1de:	2f 91       	pop	r18
     1e0:	0f 90       	pop	r0
     1e2:	0b be       	out	0x3b, r0	; 59
     1e4:	0f 90       	pop	r0
     1e6:	0f be       	out	0x3f, r0	; 63
     1e8:	0f 90       	pop	r0
     1ea:	1f 90       	pop	r1
     1ec:	18 95       	reti

000001ee <__vector_21>:

ISR(TIMER0_COMPA_vect)
{
     1ee:	1f 92       	push	r1
     1f0:	0f 92       	push	r0
     1f2:	0f b6       	in	r0, 0x3f	; 63
     1f4:	0f 92       	push	r0
     1f6:	11 24       	eor	r1, r1
     1f8:	0b b6       	in	r0, 0x3b	; 59
     1fa:	0f 92       	push	r0
     1fc:	2f 93       	push	r18
     1fe:	8f 93       	push	r24
     200:	9f 93       	push	r25
     202:	ef 93       	push	r30
     204:	ff 93       	push	r31
     206:	cf 93       	push	r28
     208:	df 93       	push	r29
     20a:	cd b7       	in	r28, 0x3d	; 61
     20c:	de b7       	in	r29, 0x3e	; 62

0000020e <.Loc.29>:
	if (OCR0A != 255)
     20e:	87 e4       	ldi	r24, 0x47	; 71
     210:	90 e0       	ldi	r25, 0x00	; 0
     212:	fc 01       	movw	r30, r24
     214:	80 81       	ld	r24, Z

00000216 <.Loc.30>:
     216:	8f 3f       	cpi	r24, 0xFF	; 255
     218:	49 f0       	breq	.+18     	; 0x22c <.L8>

0000021a <.Loc.31>:
	{
		PORT_RPWM &= ~(1<<PIN_RPWM);
     21a:	85 e2       	ldi	r24, 0x25	; 37
     21c:	90 e0       	ldi	r25, 0x00	; 0
     21e:	fc 01       	movw	r30, r24
     220:	20 81       	ld	r18, Z

00000222 <.Loc.32>:
     222:	85 e2       	ldi	r24, 0x25	; 37
     224:	90 e0       	ldi	r25, 0x00	; 0

00000226 <.Loc.33>:
     226:	2f 7b       	andi	r18, 0xBF	; 191
     228:	fc 01       	movw	r30, r24
     22a:	20 83       	st	Z, r18

0000022c <.L8>:
	}
}
     22c:	00 00       	nop
     22e:	df 91       	pop	r29
     230:	cf 91       	pop	r28
     232:	ff 91       	pop	r31
     234:	ef 91       	pop	r30
     236:	9f 91       	pop	r25
     238:	8f 91       	pop	r24
     23a:	2f 91       	pop	r18
     23c:	0f 90       	pop	r0
     23e:	0b be       	out	0x3b, r0	; 59
     240:	0f 90       	pop	r0
     242:	0f be       	out	0x3f, r0	; 63
     244:	0f 90       	pop	r0
     246:	1f 90       	pop	r1
     248:	18 95       	reti

0000024a <__vector_22>:

ISR(TIMER0_COMPB_vect)
{
     24a:	1f 92       	push	r1
     24c:	0f 92       	push	r0
     24e:	0f b6       	in	r0, 0x3f	; 63
     250:	0f 92       	push	r0
     252:	11 24       	eor	r1, r1
     254:	0b b6       	in	r0, 0x3b	; 59
     256:	0f 92       	push	r0
     258:	2f 93       	push	r18
     25a:	8f 93       	push	r24
     25c:	9f 93       	push	r25
     25e:	ef 93       	push	r30
     260:	ff 93       	push	r31
     262:	cf 93       	push	r28
     264:	df 93       	push	r29
     266:	cd b7       	in	r28, 0x3d	; 61
     268:	de b7       	in	r29, 0x3e	; 62

0000026a <.Loc.36>:
	if (OCR0B != 255)
     26a:	88 e4       	ldi	r24, 0x48	; 72
     26c:	90 e0       	ldi	r25, 0x00	; 0
     26e:	fc 01       	movw	r30, r24
     270:	80 81       	ld	r24, Z

00000272 <.Loc.37>:
     272:	8f 3f       	cpi	r24, 0xFF	; 255
     274:	49 f0       	breq	.+18     	; 0x288 <.L11>

00000276 <.Loc.38>:
	{
		PORT_LPWM &= ~(1<<PIN_LPWM);
     276:	85 e2       	ldi	r24, 0x25	; 37
     278:	90 e0       	ldi	r25, 0x00	; 0
     27a:	fc 01       	movw	r30, r24
     27c:	20 81       	ld	r18, Z

0000027e <.Loc.39>:
     27e:	85 e2       	ldi	r24, 0x25	; 37
     280:	90 e0       	ldi	r25, 0x00	; 0

00000282 <.Loc.40>:
     282:	2f 77       	andi	r18, 0x7F	; 127
     284:	fc 01       	movw	r30, r24
     286:	20 83       	st	Z, r18

00000288 <.L11>:
	}
}
     288:	00 00       	nop
     28a:	df 91       	pop	r29
     28c:	cf 91       	pop	r28
     28e:	ff 91       	pop	r31
     290:	ef 91       	pop	r30
     292:	9f 91       	pop	r25
     294:	8f 91       	pop	r24
     296:	2f 91       	pop	r18
     298:	0f 90       	pop	r0
     29a:	0b be       	out	0x3b, r0	; 59
     29c:	0f 90       	pop	r0
     29e:	0f be       	out	0x3f, r0	; 63
     2a0:	0f 90       	pop	r0
     2a2:	1f 90       	pop	r1
     2a4:	18 95       	reti

000002a6 <init_h_bridge>:

void init_h_bridge(void)
{
     2a6:	cf 93       	push	r28
     2a8:	df 93       	push	r29
     2aa:	cd b7       	in	r28, 0x3d	; 61
     2ac:	de b7       	in	r29, 0x3e	; 62

000002ae <.Loc.43>:
	// Config pins as output
	DDR_RPWM |= (1<<PIN_RPWM);
     2ae:	84 e2       	ldi	r24, 0x24	; 36
     2b0:	90 e0       	ldi	r25, 0x00	; 0
     2b2:	fc 01       	movw	r30, r24
     2b4:	20 81       	ld	r18, Z
     2b6:	84 e2       	ldi	r24, 0x24	; 36
     2b8:	90 e0       	ldi	r25, 0x00	; 0

000002ba <.Loc.44>:
     2ba:	20 64       	ori	r18, 0x40	; 64
     2bc:	fc 01       	movw	r30, r24
     2be:	20 83       	st	Z, r18

000002c0 <.Loc.45>:
	DDR_LPWM |= (1<<PIN_LPWM);
     2c0:	84 e2       	ldi	r24, 0x24	; 36
     2c2:	90 e0       	ldi	r25, 0x00	; 0
     2c4:	fc 01       	movw	r30, r24
     2c6:	20 81       	ld	r18, Z
     2c8:	84 e2       	ldi	r24, 0x24	; 36
     2ca:	90 e0       	ldi	r25, 0x00	; 0

000002cc <.Loc.46>:
     2cc:	20 68       	ori	r18, 0x80	; 128
     2ce:	fc 01       	movw	r30, r24
     2d0:	20 83       	st	Z, r18

000002d2 <.Loc.47>:

	// Output low
	PORT_RPWM &= ~(1<<PIN_RPWM);
     2d2:	85 e2       	ldi	r24, 0x25	; 37
     2d4:	90 e0       	ldi	r25, 0x00	; 0
     2d6:	fc 01       	movw	r30, r24
     2d8:	20 81       	ld	r18, Z

000002da <.Loc.48>:
     2da:	85 e2       	ldi	r24, 0x25	; 37
     2dc:	90 e0       	ldi	r25, 0x00	; 0

000002de <.Loc.49>:
     2de:	2f 7b       	andi	r18, 0xBF	; 191
     2e0:	fc 01       	movw	r30, r24
     2e2:	20 83       	st	Z, r18

000002e4 <.Loc.50>:
	PORT_LPWM &= ~(1<<PIN_LPWM);
     2e4:	85 e2       	ldi	r24, 0x25	; 37
     2e6:	90 e0       	ldi	r25, 0x00	; 0
     2e8:	fc 01       	movw	r30, r24
     2ea:	20 81       	ld	r18, Z

000002ec <.Loc.51>:
     2ec:	85 e2       	ldi	r24, 0x25	; 37
     2ee:	90 e0       	ldi	r25, 0x00	; 0

000002f0 <.Loc.52>:
     2f0:	2f 77       	andi	r18, 0x7F	; 127
     2f2:	fc 01       	movw	r30, r24
     2f4:	20 83       	st	Z, r18

000002f6 <.Loc.53>:

	// Use mode 0, clkdiv = 64
	TCCR0A = 0;
     2f6:	84 e4       	ldi	r24, 0x44	; 68
     2f8:	90 e0       	ldi	r25, 0x00	; 0

000002fa <.Loc.54>:
     2fa:	fc 01       	movw	r30, r24
     2fc:	10 82       	st	Z, r1

000002fe <.Loc.55>:
	TCCR0B = (0<<CS02) | (1<<CS01) | (1<<CS00);
     2fe:	85 e4       	ldi	r24, 0x45	; 69
     300:	90 e0       	ldi	r25, 0x00	; 0

00000302 <.Loc.56>:
     302:	23 e0       	ldi	r18, 0x03	; 3
     304:	fc 01       	movw	r30, r24
     306:	20 83       	st	Z, r18

00000308 <.Loc.57>:

	// Disable PWM output
	OCR0A = 0;
     308:	87 e4       	ldi	r24, 0x47	; 71
     30a:	90 e0       	ldi	r25, 0x00	; 0

0000030c <.Loc.58>:
     30c:	fc 01       	movw	r30, r24
     30e:	10 82       	st	Z, r1

00000310 <.Loc.59>:
	OCR0B = 0;
     310:	88 e4       	ldi	r24, 0x48	; 72
     312:	90 e0       	ldi	r25, 0x00	; 0

00000314 <.Loc.60>:
     314:	fc 01       	movw	r30, r24
     316:	10 82       	st	Z, r1

00000318 <.Loc.61>:

	// Interrupts on OCA, OCB and OVF
	TIMSK0 = (1<<OCIE0B) | (1<<OCIE0A) | (1<<TOIE0);
     318:	8e e6       	ldi	r24, 0x6E	; 110
     31a:	90 e0       	ldi	r25, 0x00	; 0

0000031c <.Loc.62>:
     31c:	27 e0       	ldi	r18, 0x07	; 7
     31e:	fc 01       	movw	r30, r24
     320:	20 83       	st	Z, r18

00000322 <.Loc.63>:

	sei();
     322:	78 94       	sei

00000324 <.Loc.64>:
}
     324:	00 00       	nop
     326:	df 91       	pop	r29
     328:	cf 91       	pop	r28
     32a:	08 95       	ret

0000032c <h_bridge_set_percentage>:

void h_bridge_set_percentage(signed char percentage)
{
     32c:	cf 93       	push	r28
     32e:	df 93       	push	r29
     330:	0f 92       	push	r0
     332:	cd b7       	in	r28, 0x3d	; 61
     334:	de b7       	in	r29, 0x3e	; 62
     336:	89 83       	std	Y+1, r24	; 0x01

00000338 <.Loc.66>:
	if (percentage >= -100 && percentage <= 100)
     338:	89 81       	ldd	r24, Y+1	; 0x01
     33a:	8c 39       	cpi	r24, 0x9C	; 156
     33c:	e4 f1       	brlt	.+120    	; 0x3b6 <.L16>

0000033e <.Loc.67>:
     33e:	89 81       	ldd	r24, Y+1	; 0x01
     340:	84 36       	cpi	r24, 0x64	; 100
     342:	09 f0       	breq	.+2      	; 0x346 <.Loc.68>

00000344 <L0^A>:
     344:	c4 f5       	brge	.+112    	; 0x3b6 <.L16>

00000346 <.Loc.68>:
	{
		if (percentage >= 0)
     346:	89 81       	ldd	r24, Y+1	; 0x01
     348:	88 23       	and	r24, r24
     34a:	dc f0       	brlt	.+54     	; 0x382 <.L15>

0000034c <.Loc.69>:
		{
			// Disable LPWM, calculate RPWM
			OCR0B = 0;
     34c:	88 e4       	ldi	r24, 0x48	; 72
     34e:	90 e0       	ldi	r25, 0x00	; 0

00000350 <.Loc.70>:
     350:	fc 01       	movw	r30, r24
     352:	10 82       	st	Z, r1

00000354 <.Loc.71>:
			OCR0A = (255*percentage)/100;
     354:	89 81       	ldd	r24, Y+1	; 0x01
     356:	08 2e       	mov	r0, r24
     358:	00 0c       	add	r0, r0
     35a:	99 0b       	sbc	r25, r25
     35c:	2f ef       	ldi	r18, 0xFF	; 255
     35e:	28 9f       	mul	r18, r24
     360:	a0 01       	movw	r20, r0
     362:	29 9f       	mul	r18, r25
     364:	50 0d       	add	r21, r0
     366:	11 24       	eor	r1, r1

00000368 <.Loc.72>:
     368:	24 e6       	ldi	r18, 0x64	; 100
     36a:	30 e0       	ldi	r19, 0x00	; 0
     36c:	ca 01       	movw	r24, r20
     36e:	b9 01       	movw	r22, r18
     370:	0e 94 ce 07 	call	0xf9c	; 0xf9c <__divmodhi4>
     374:	cb 01       	movw	r24, r22
     376:	9c 01       	movw	r18, r24

00000378 <.Loc.73>:
     378:	87 e4       	ldi	r24, 0x47	; 71
     37a:	90 e0       	ldi	r25, 0x00	; 0

0000037c <.Loc.74>:
     37c:	fc 01       	movw	r30, r24
     37e:	20 83       	st	Z, r18

00000380 <.Loc.75>:
			// Disable RPWM, calculate LPWM
			OCR0A = 0;
			OCR0B = (255*percentage)/-100;
		}
	}
}
     380:	1a c0       	rjmp	.+52     	; 0x3b6 <.L16>

00000382 <.L15>:
			OCR0A = 0;
     382:	87 e4       	ldi	r24, 0x47	; 71
     384:	90 e0       	ldi	r25, 0x00	; 0

00000386 <.Loc.77>:
     386:	fc 01       	movw	r30, r24
     388:	10 82       	st	Z, r1

0000038a <.Loc.78>:
			OCR0B = (255*percentage)/-100;
     38a:	89 81       	ldd	r24, Y+1	; 0x01
     38c:	08 2e       	mov	r0, r24
     38e:	00 0c       	add	r0, r0
     390:	99 0b       	sbc	r25, r25
     392:	2f ef       	ldi	r18, 0xFF	; 255
     394:	28 9f       	mul	r18, r24
     396:	a0 01       	movw	r20, r0
     398:	29 9f       	mul	r18, r25
     39a:	50 0d       	add	r21, r0
     39c:	11 24       	eor	r1, r1

0000039e <.Loc.79>:
     39e:	2c e9       	ldi	r18, 0x9C	; 156
     3a0:	3f ef       	ldi	r19, 0xFF	; 255
     3a2:	ca 01       	movw	r24, r20
     3a4:	b9 01       	movw	r22, r18
     3a6:	0e 94 ce 07 	call	0xf9c	; 0xf9c <__divmodhi4>
     3aa:	cb 01       	movw	r24, r22
     3ac:	9c 01       	movw	r18, r24

000003ae <.Loc.80>:
     3ae:	88 e4       	ldi	r24, 0x48	; 72
     3b0:	90 e0       	ldi	r25, 0x00	; 0

000003b2 <.Loc.81>:
     3b2:	fc 01       	movw	r30, r24
     3b4:	20 83       	st	Z, r18

000003b6 <.L16>:
}
     3b6:	00 00       	nop
     3b8:	0f 90       	pop	r0
     3ba:	df 91       	pop	r29
     3bc:	cf 91       	pop	r28
     3be:	08 95       	ret

000003c0 <__vector_20>:
#define RESET_VALUE	(65636ul-TIME_VALUE)
#define STOP_VALUE	(TIME_VALUE*0.075)
#define RANGE		(TIME_VALUE*0.025)

ISR(TIMER1_OVF_vect)
{
     3c0:	1f 92       	push	r1
     3c2:	0f 92       	push	r0
     3c4:	0f b6       	in	r0, 0x3f	; 63
     3c6:	0f 92       	push	r0
     3c8:	11 24       	eor	r1, r1
     3ca:	0b b6       	in	r0, 0x3b	; 59
     3cc:	0f 92       	push	r0
     3ce:	2f 93       	push	r18
     3d0:	3f 93       	push	r19
     3d2:	8f 93       	push	r24
     3d4:	9f 93       	push	r25
     3d6:	ef 93       	push	r30
     3d8:	ff 93       	push	r31
     3da:	cf 93       	push	r28
     3dc:	df 93       	push	r29
     3de:	cd b7       	in	r28, 0x3d	; 61
     3e0:	de b7       	in	r29, 0x3e	; 62

000003e2 <.Loc.84>:
	TCNT1 = RESET_VALUE;
     3e2:	84 e8       	ldi	r24, 0x84	; 132
     3e4:	90 e0       	ldi	r25, 0x00	; 0

000003e6 <.Loc.85>:
     3e6:	24 e2       	ldi	r18, 0x24	; 36
     3e8:	34 e6       	ldi	r19, 0x64	; 100
     3ea:	fc 01       	movw	r30, r24
     3ec:	31 83       	std	Z+1, r19	; 0x01
     3ee:	20 83       	st	Z, r18

000003f0 <.Loc.86>:

	PORT_1 |= (1<<PIN_1);
     3f0:	85 e2       	ldi	r24, 0x25	; 37
     3f2:	90 e0       	ldi	r25, 0x00	; 0
     3f4:	fc 01       	movw	r30, r24
     3f6:	20 81       	ld	r18, Z
     3f8:	85 e2       	ldi	r24, 0x25	; 37
     3fa:	90 e0       	ldi	r25, 0x00	; 0

000003fc <.Loc.87>:
     3fc:	20 62       	ori	r18, 0x20	; 32
     3fe:	fc 01       	movw	r30, r24
     400:	20 83       	st	Z, r18

00000402 <.Loc.88>:
}
     402:	00 00       	nop
     404:	df 91       	pop	r29
     406:	cf 91       	pop	r28
     408:	ff 91       	pop	r31
     40a:	ef 91       	pop	r30
     40c:	9f 91       	pop	r25
     40e:	8f 91       	pop	r24
     410:	3f 91       	pop	r19
     412:	2f 91       	pop	r18
     414:	0f 90       	pop	r0
     416:	0b be       	out	0x3b, r0	; 59
     418:	0f 90       	pop	r0
     41a:	0f be       	out	0x3f, r0	; 63
     41c:	0f 90       	pop	r0
     41e:	1f 90       	pop	r1
     420:	18 95       	reti

00000422 <__vector_17>:

ISR(TIMER1_COMPA_vect)
{
     422:	1f 92       	push	r1
     424:	0f 92       	push	r0
     426:	0f b6       	in	r0, 0x3f	; 63
     428:	0f 92       	push	r0
     42a:	11 24       	eor	r1, r1
     42c:	0b b6       	in	r0, 0x3b	; 59
     42e:	0f 92       	push	r0
     430:	2f 93       	push	r18
     432:	8f 93       	push	r24
     434:	9f 93       	push	r25
     436:	ef 93       	push	r30
     438:	ff 93       	push	r31
     43a:	cf 93       	push	r28
     43c:	df 93       	push	r29
     43e:	cd b7       	in	r28, 0x3d	; 61
     440:	de b7       	in	r29, 0x3e	; 62

00000442 <.Loc.90>:
	PORT_1 &= ~(1<<PIN_1);
     442:	85 e2       	ldi	r24, 0x25	; 37
     444:	90 e0       	ldi	r25, 0x00	; 0
     446:	fc 01       	movw	r30, r24
     448:	20 81       	ld	r18, Z

0000044a <.Loc.91>:
     44a:	85 e2       	ldi	r24, 0x25	; 37
     44c:	90 e0       	ldi	r25, 0x00	; 0

0000044e <.Loc.92>:
     44e:	2f 7d       	andi	r18, 0xDF	; 223
     450:	fc 01       	movw	r30, r24
     452:	20 83       	st	Z, r18

00000454 <.Loc.93>:
}
     454:	00 00       	nop
     456:	df 91       	pop	r29
     458:	cf 91       	pop	r28
     45a:	ff 91       	pop	r31
     45c:	ef 91       	pop	r30
     45e:	9f 91       	pop	r25
     460:	8f 91       	pop	r24
     462:	2f 91       	pop	r18
     464:	0f 90       	pop	r0
     466:	0b be       	out	0x3b, r0	; 59
     468:	0f 90       	pop	r0
     46a:	0f be       	out	0x3f, r0	; 63
     46c:	0f 90       	pop	r0
     46e:	1f 90       	pop	r1
     470:	18 95       	reti

00000472 <__vector_18>:

ISR(TIMER1_COMPB_vect)
{
     472:	1f 92       	push	r1
     474:	0f 92       	push	r0
     476:	0f b6       	in	r0, 0x3f	; 63
     478:	0f 92       	push	r0
     47a:	11 24       	eor	r1, r1
     47c:	cf 93       	push	r28
     47e:	df 93       	push	r29
     480:	cd b7       	in	r28, 0x3d	; 61
     482:	de b7       	in	r29, 0x3e	; 62

00000484 <.Loc.95>:

}
     484:	00 00       	nop
     486:	df 91       	pop	r29
     488:	cf 91       	pop	r28
     48a:	0f 90       	pop	r0
     48c:	0f be       	out	0x3f, r0	; 63
     48e:	0f 90       	pop	r0
     490:	1f 90       	pop	r1
     492:	18 95       	reti

00000494 <init_servo>:

void init_servo(void)
{
     494:	cf 93       	push	r28
     496:	df 93       	push	r29
     498:	cd b7       	in	r28, 0x3d	; 61
     49a:	de b7       	in	r29, 0x3e	; 62

0000049c <.Loc.97>:
	// Config pins as output
	DDR_1 |= (1<<PIN_1);
     49c:	84 e2       	ldi	r24, 0x24	; 36
     49e:	90 e0       	ldi	r25, 0x00	; 0
     4a0:	fc 01       	movw	r30, r24
     4a2:	20 81       	ld	r18, Z
     4a4:	84 e2       	ldi	r24, 0x24	; 36
     4a6:	90 e0       	ldi	r25, 0x00	; 0

000004a8 <.Loc.98>:
     4a8:	20 62       	ori	r18, 0x20	; 32
     4aa:	fc 01       	movw	r30, r24
     4ac:	20 83       	st	Z, r18

000004ae <.Loc.99>:

	// Use mode 0, clkdiv = 8
	TCCR1A = 0;
     4ae:	80 e8       	ldi	r24, 0x80	; 128
     4b0:	90 e0       	ldi	r25, 0x00	; 0

000004b2 <.Loc.100>:
     4b2:	fc 01       	movw	r30, r24
     4b4:	10 82       	st	Z, r1

000004b6 <.Loc.101>:
	TCCR1B = (0<<CS12) | (1<<CS11) | (0<<CS10);
     4b6:	81 e8       	ldi	r24, 0x81	; 129
     4b8:	90 e0       	ldi	r25, 0x00	; 0

000004ba <.Loc.102>:
     4ba:	22 e0       	ldi	r18, 0x02	; 2
     4bc:	fc 01       	movw	r30, r24
     4be:	20 83       	st	Z, r18

000004c0 <.Loc.103>:
	// Interrupts on OCA, OCB and OVF
	TIMSK1 = (1<<OCIE1B) | (1<<OCIE1A) | (1<<TOIE1);
     4c0:	8f e6       	ldi	r24, 0x6F	; 111
     4c2:	90 e0       	ldi	r25, 0x00	; 0

000004c4 <.Loc.104>:
     4c4:	27 e0       	ldi	r18, 0x07	; 7
     4c6:	fc 01       	movw	r30, r24
     4c8:	20 83       	st	Z, r18

000004ca <.Loc.105>:

	TCNT1 = RESET_VALUE;
     4ca:	84 e8       	ldi	r24, 0x84	; 132
     4cc:	90 e0       	ldi	r25, 0x00	; 0

000004ce <.Loc.106>:
     4ce:	24 e2       	ldi	r18, 0x24	; 36
     4d0:	34 e6       	ldi	r19, 0x64	; 100
     4d2:	fc 01       	movw	r30, r24
     4d4:	31 83       	std	Z+1, r19	; 0x01
     4d6:	20 83       	st	Z, r18

000004d8 <.Loc.107>:

	servo1_set_percentage(0);
     4d8:	80 e0       	ldi	r24, 0x00	; 0
     4da:	0e 94 74 02 	call	0x4e8	; 0x4e8 <servo1_set_percentage>

000004de <.Loc.108>:


	sei();
     4de:	78 94       	sei

000004e0 <.Loc.109>:
}
     4e0:	00 00       	nop
     4e2:	df 91       	pop	r29
     4e4:	cf 91       	pop	r28
     4e6:	08 95       	ret

000004e8 <servo1_set_percentage>:

void servo1_set_percentage(signed char percentage)
{
     4e8:	0f 93       	push	r16
     4ea:	1f 93       	push	r17
     4ec:	cf 93       	push	r28
     4ee:	df 93       	push	r29
     4f0:	cd b7       	in	r28, 0x3d	; 61
     4f2:	de b7       	in	r29, 0x3e	; 62
     4f4:	6d 97       	sbiw	r28, 0x1d	; 29
     4f6:	0f b6       	in	r0, 0x3f	; 63
     4f8:	f8 94       	cli
     4fa:	de bf       	out	0x3e, r29	; 62
     4fc:	0f be       	out	0x3f, r0	; 63
     4fe:	cd bf       	out	0x3d, r28	; 61
     500:	89 83       	std	Y+1, r24	; 0x01

00000502 <.Loc.111>:
	if (percentage >= -100 && percentage <= 100)
     502:	89 81       	ldd	r24, Y+1	; 0x01
     504:	8c 39       	cpi	r24, 0x9C	; 156
     506:	0c f4       	brge	.+2      	; 0x50a <.Loc.112>

00000508 <L0^A>:
     508:	57 c0       	rjmp	.+174    	; 0x5b8 <.L23>

0000050a <.Loc.112>:
     50a:	89 81       	ldd	r24, Y+1	; 0x01
     50c:	84 36       	cpi	r24, 0x64	; 100
     50e:	11 f0       	breq	.+4      	; 0x514 <.Loc.113>

00000510 <L0^A>:
     510:	0c f0       	brlt	.+2      	; 0x514 <.Loc.113>

00000512 <L0^A>:
     512:	52 c0       	rjmp	.+164    	; 0x5b8 <.L23>

00000514 <.Loc.113>:
	{
		OCR1A = RESET_VALUE+STOP_VALUE+(RANGE/100*percentage);
     514:	89 81       	ldd	r24, Y+1	; 0x01
     516:	28 2f       	mov	r18, r24
     518:	88 0f       	add	r24, r24
     51a:	33 0b       	sbc	r19, r19
     51c:	44 0b       	sbc	r20, r20
     51e:	55 0b       	sbc	r21, r21
     520:	2e 87       	std	Y+14, r18	; 0x0e
     522:	3f 87       	std	Y+15, r19	; 0x0f
     524:	48 8b       	std	Y+16, r20	; 0x10
     526:	59 8b       	std	Y+17, r21	; 0x11
     528:	6e 85       	ldd	r22, Y+14	; 0x0e
     52a:	7f 85       	ldd	r23, Y+15	; 0x0f
     52c:	88 89       	ldd	r24, Y+16	; 0x10
     52e:	99 89       	ldd	r25, Y+17	; 0x11
     530:	0e 94 99 08 	call	0x1132	; 0x1132 <__floatsisf>
     534:	6a 83       	std	Y+2, r22	; 0x02
     536:	7b 83       	std	Y+3, r23	; 0x03
     538:	8c 83       	std	Y+4, r24	; 0x04
     53a:	9d 83       	std	Y+5, r25	; 0x05
     53c:	20 e0       	ldi	r18, 0x00	; 0
     53e:	30 e0       	ldi	r19, 0x00	; 0
     540:	40 e2       	ldi	r20, 0x20	; 32
     542:	51 e4       	ldi	r21, 0x41	; 65
     544:	6a 81       	ldd	r22, Y+2	; 0x02
     546:	7b 81       	ldd	r23, Y+3	; 0x03
     548:	8c 81       	ldd	r24, Y+4	; 0x04
     54a:	9d 81       	ldd	r25, Y+5	; 0x05
     54c:	0e 94 4e 09 	call	0x129c	; 0x129c <__mulsf3>
     550:	6a 8b       	std	Y+18, r22	; 0x12
     552:	7b 8b       	std	Y+19, r23	; 0x13
     554:	8c 8b       	std	Y+20, r24	; 0x14
     556:	9d 8b       	std	Y+21, r25	; 0x15
     558:	8a 89       	ldd	r24, Y+18	; 0x12
     55a:	9b 89       	ldd	r25, Y+19	; 0x13
     55c:	ac 89       	ldd	r26, Y+20	; 0x14
     55e:	bd 89       	ldd	r27, Y+21	; 0x15
     560:	8e 83       	std	Y+6, r24	; 0x06
     562:	9f 83       	std	Y+7, r25	; 0x07
     564:	a8 87       	std	Y+8, r26	; 0x08
     566:	b9 87       	std	Y+9, r27	; 0x09

00000568 <.Loc.114>:
     568:	20 e0       	ldi	r18, 0x00	; 0
     56a:	38 eb       	ldi	r19, 0xB8	; 184
     56c:	4f ed       	ldi	r20, 0xDF	; 223
     56e:	56 e4       	ldi	r21, 0x46	; 70
     570:	6e 81       	ldd	r22, Y+6	; 0x06
     572:	7f 81       	ldd	r23, Y+7	; 0x07
     574:	88 85       	ldd	r24, Y+8	; 0x08
     576:	99 85       	ldd	r25, Y+9	; 0x09
     578:	0e 94 f7 07 	call	0xfee	; 0xfee <__addsf3>
     57c:	6e 8b       	std	Y+22, r22	; 0x16
     57e:	7f 8b       	std	Y+23, r23	; 0x17
     580:	88 8f       	std	Y+24, r24	; 0x18
     582:	99 8f       	std	Y+25, r25	; 0x19
     584:	2e 89       	ldd	r18, Y+22	; 0x16
     586:	3f 89       	ldd	r19, Y+23	; 0x17
     588:	48 8d       	ldd	r20, Y+24	; 0x18
     58a:	59 8d       	ldd	r21, Y+25	; 0x19
     58c:	2a 87       	std	Y+10, r18	; 0x0a
     58e:	3b 87       	std	Y+11, r19	; 0x0b
     590:	4c 87       	std	Y+12, r20	; 0x0c
     592:	5d 87       	std	Y+13, r21	; 0x0d

00000594 <.Loc.115>:
     594:	08 e8       	ldi	r16, 0x88	; 136
     596:	10 e0       	ldi	r17, 0x00	; 0

00000598 <.Loc.116>:
     598:	6a 85       	ldd	r22, Y+10	; 0x0a
     59a:	7b 85       	ldd	r23, Y+11	; 0x0b
     59c:	8c 85       	ldd	r24, Y+12	; 0x0c
     59e:	9d 85       	ldd	r25, Y+13	; 0x0d
     5a0:	0e 94 68 08 	call	0x10d0	; 0x10d0 <__fixunssfsi>
     5a4:	6a 8f       	std	Y+26, r22	; 0x1a
     5a6:	7b 8f       	std	Y+27, r23	; 0x1b
     5a8:	8c 8f       	std	Y+28, r24	; 0x1c
     5aa:	9d 8f       	std	Y+29, r25	; 0x1d
     5ac:	8a 8d       	ldd	r24, Y+26	; 0x1a
     5ae:	9b 8d       	ldd	r25, Y+27	; 0x1b
     5b0:	d8 01       	movw	r26, r16
     5b2:	11 96       	adiw	r26, 0x01	; 1
     5b4:	9c 93       	st	X, r25
     5b6:	8e 93       	st	-X, r24

000005b8 <.L23>:
	}
}
     5b8:	00 00       	nop
     5ba:	6d 96       	adiw	r28, 0x1d	; 29
     5bc:	0f b6       	in	r0, 0x3f	; 63
     5be:	f8 94       	cli
     5c0:	de bf       	out	0x3e, r29	; 62
     5c2:	0f be       	out	0x3f, r0	; 63
     5c4:	cd bf       	out	0x3d, r28	; 61
     5c6:	df 91       	pop	r29
     5c8:	cf 91       	pop	r28
     5ca:	1f 91       	pop	r17
     5cc:	0f 91       	pop	r16
     5ce:	08 95       	ret

000005d0 <init>:
#include <util/delay.h>
int state = 0;
int random1 = 0;        //ints bij buzzer
int random2 = 0;
void init()
{
     5d0:	cf 93       	push	r28
     5d2:	df 93       	push	r29
     5d4:	cd b7       	in	r28, 0x3d	; 61
     5d6:	de b7       	in	r29, 0x3e	; 62

000005d8 <.Loc.119>:
    DDRF &= ~(1<<PF0); //A0, ir links voor
     5d8:	80 e3       	ldi	r24, 0x30	; 48
     5da:	90 e0       	ldi	r25, 0x00	; 0
     5dc:	fc 01       	movw	r30, r24
     5de:	20 81       	ld	r18, Z

000005e0 <.Loc.120>:
     5e0:	80 e3       	ldi	r24, 0x30	; 48
     5e2:	90 e0       	ldi	r25, 0x00	; 0

000005e4 <.Loc.121>:
     5e4:	2e 7f       	andi	r18, 0xFE	; 254
     5e6:	fc 01       	movw	r30, r24
     5e8:	20 83       	st	Z, r18

000005ea <.Loc.122>:
    PORTF |= (1<<PF0);
     5ea:	81 e3       	ldi	r24, 0x31	; 49
     5ec:	90 e0       	ldi	r25, 0x00	; 0
     5ee:	fc 01       	movw	r30, r24
     5f0:	20 81       	ld	r18, Z
     5f2:	81 e3       	ldi	r24, 0x31	; 49
     5f4:	90 e0       	ldi	r25, 0x00	; 0

000005f6 <.Loc.123>:
     5f6:	21 60       	ori	r18, 0x01	; 1
     5f8:	fc 01       	movw	r30, r24
     5fa:	20 83       	st	Z, r18

000005fc <.Loc.124>:
    DDRF &= ~(1<<PF1); //A1, ir rechts voor
     5fc:	80 e3       	ldi	r24, 0x30	; 48
     5fe:	90 e0       	ldi	r25, 0x00	; 0
     600:	fc 01       	movw	r30, r24
     602:	20 81       	ld	r18, Z

00000604 <.Loc.125>:
     604:	80 e3       	ldi	r24, 0x30	; 48
     606:	90 e0       	ldi	r25, 0x00	; 0

00000608 <.Loc.126>:
     608:	2d 7f       	andi	r18, 0xFD	; 253
     60a:	fc 01       	movw	r30, r24
     60c:	20 83       	st	Z, r18

0000060e <.Loc.127>:
    PORTF |= (1<<PF1);
     60e:	81 e3       	ldi	r24, 0x31	; 49
     610:	90 e0       	ldi	r25, 0x00	; 0
     612:	fc 01       	movw	r30, r24
     614:	20 81       	ld	r18, Z
     616:	81 e3       	ldi	r24, 0x31	; 49
     618:	90 e0       	ldi	r25, 0x00	; 0

0000061a <.Loc.128>:
     61a:	22 60       	ori	r18, 0x02	; 2
     61c:	fc 01       	movw	r30, r24
     61e:	20 83       	st	Z, r18

00000620 <.Loc.129>:
    DDRF &= ~(1<<PF2); //A2, ir bomen rechts
     620:	80 e3       	ldi	r24, 0x30	; 48
     622:	90 e0       	ldi	r25, 0x00	; 0
     624:	fc 01       	movw	r30, r24
     626:	20 81       	ld	r18, Z

00000628 <.Loc.130>:
     628:	80 e3       	ldi	r24, 0x30	; 48
     62a:	90 e0       	ldi	r25, 0x00	; 0

0000062c <.Loc.131>:
     62c:	2b 7f       	andi	r18, 0xFB	; 251
     62e:	fc 01       	movw	r30, r24
     630:	20 83       	st	Z, r18

00000632 <.Loc.132>:
    PORTF |= (1<<PF2);
     632:	81 e3       	ldi	r24, 0x31	; 49
     634:	90 e0       	ldi	r25, 0x00	; 0
     636:	fc 01       	movw	r30, r24
     638:	20 81       	ld	r18, Z
     63a:	81 e3       	ldi	r24, 0x31	; 49
     63c:	90 e0       	ldi	r25, 0x00	; 0

0000063e <.Loc.133>:
     63e:	24 60       	ori	r18, 0x04	; 4
     640:	fc 01       	movw	r30, r24
     642:	20 83       	st	Z, r18

00000644 <.Loc.134>:
    DDRF &= ~(1<<PF3);//A3, ir bomen links
     644:	80 e3       	ldi	r24, 0x30	; 48
     646:	90 e0       	ldi	r25, 0x00	; 0
     648:	fc 01       	movw	r30, r24
     64a:	20 81       	ld	r18, Z

0000064c <.Loc.135>:
     64c:	80 e3       	ldi	r24, 0x30	; 48
     64e:	90 e0       	ldi	r25, 0x00	; 0

00000650 <.Loc.136>:
     650:	27 7f       	andi	r18, 0xF7	; 247
     652:	fc 01       	movw	r30, r24
     654:	20 83       	st	Z, r18

00000656 <.Loc.137>:
    PORTF |= (1<<PF3);
     656:	81 e3       	ldi	r24, 0x31	; 49
     658:	90 e0       	ldi	r25, 0x00	; 0
     65a:	fc 01       	movw	r30, r24
     65c:	20 81       	ld	r18, Z
     65e:	81 e3       	ldi	r24, 0x31	; 49
     660:	90 e0       	ldi	r25, 0x00	; 0

00000662 <.Loc.138>:
     662:	28 60       	ori	r18, 0x08	; 8
     664:	fc 01       	movw	r30, r24
     666:	20 83       	st	Z, r18

00000668 <.Loc.139>:
    DDRF &= ~(1<<PF4);//A4, voren detecteren
     668:	80 e3       	ldi	r24, 0x30	; 48
     66a:	90 e0       	ldi	r25, 0x00	; 0
     66c:	fc 01       	movw	r30, r24
     66e:	20 81       	ld	r18, Z

00000670 <.Loc.140>:
     670:	80 e3       	ldi	r24, 0x30	; 48
     672:	90 e0       	ldi	r25, 0x00	; 0

00000674 <.Loc.141>:
     674:	2f 7e       	andi	r18, 0xEF	; 239
     676:	fc 01       	movw	r30, r24
     678:	20 83       	st	Z, r18

0000067a <.Loc.142>:
    PORTF |= (1<<PF4);
     67a:	81 e3       	ldi	r24, 0x31	; 49
     67c:	90 e0       	ldi	r25, 0x00	; 0
     67e:	fc 01       	movw	r30, r24
     680:	20 81       	ld	r18, Z
     682:	81 e3       	ldi	r24, 0x31	; 49
     684:	90 e0       	ldi	r25, 0x00	; 0

00000686 <.Loc.143>:
     686:	20 61       	ori	r18, 0x10	; 16
     688:	fc 01       	movw	r30, r24
     68a:	20 83       	st	Z, r18

0000068c <.Loc.144>:
    DDRF &= ~(1<<PF5);//A5, eind van balk detectie
     68c:	80 e3       	ldi	r24, 0x30	; 48
     68e:	90 e0       	ldi	r25, 0x00	; 0
     690:	fc 01       	movw	r30, r24
     692:	20 81       	ld	r18, Z

00000694 <.Loc.145>:
     694:	80 e3       	ldi	r24, 0x30	; 48
     696:	90 e0       	ldi	r25, 0x00	; 0

00000698 <.Loc.146>:
     698:	2f 7d       	andi	r18, 0xDF	; 223
     69a:	fc 01       	movw	r30, r24
     69c:	20 83       	st	Z, r18

0000069e <.Loc.147>:
    PORTF |= (1<<PF5);
     69e:	81 e3       	ldi	r24, 0x31	; 49
     6a0:	90 e0       	ldi	r25, 0x00	; 0
     6a2:	fc 01       	movw	r30, r24
     6a4:	20 81       	ld	r18, Z
     6a6:	81 e3       	ldi	r24, 0x31	; 49
     6a8:	90 e0       	ldi	r25, 0x00	; 0

000006aa <.Loc.148>:
     6aa:	20 62       	ori	r18, 0x20	; 32
     6ac:	fc 01       	movw	r30, r24
     6ae:	20 83       	st	Z, r18

000006b0 <.Loc.149>:
    DDRB |= (1<<PB0);  //53, links leds
     6b0:	84 e2       	ldi	r24, 0x24	; 36
     6b2:	90 e0       	ldi	r25, 0x00	; 0
     6b4:	fc 01       	movw	r30, r24
     6b6:	20 81       	ld	r18, Z
     6b8:	84 e2       	ldi	r24, 0x24	; 36
     6ba:	90 e0       	ldi	r25, 0x00	; 0

000006bc <.Loc.150>:
     6bc:	21 60       	ori	r18, 0x01	; 1
     6be:	fc 01       	movw	r30, r24
     6c0:	20 83       	st	Z, r18

000006c2 <.Loc.151>:
    PORTB &= ~(1<<PB0);
     6c2:	85 e2       	ldi	r24, 0x25	; 37
     6c4:	90 e0       	ldi	r25, 0x00	; 0
     6c6:	fc 01       	movw	r30, r24
     6c8:	20 81       	ld	r18, Z

000006ca <.Loc.152>:
     6ca:	85 e2       	ldi	r24, 0x25	; 37
     6cc:	90 e0       	ldi	r25, 0x00	; 0

000006ce <.Loc.153>:
     6ce:	2e 7f       	andi	r18, 0xFE	; 254
     6d0:	fc 01       	movw	r30, r24
     6d2:	20 83       	st	Z, r18

000006d4 <.Loc.154>:
    DDRB |= (1<<PB1);   //52, leds rechts
     6d4:	84 e2       	ldi	r24, 0x24	; 36
     6d6:	90 e0       	ldi	r25, 0x00	; 0
     6d8:	fc 01       	movw	r30, r24
     6da:	20 81       	ld	r18, Z
     6dc:	84 e2       	ldi	r24, 0x24	; 36
     6de:	90 e0       	ldi	r25, 0x00	; 0

000006e0 <.Loc.155>:
     6e0:	22 60       	ori	r18, 0x02	; 2
     6e2:	fc 01       	movw	r30, r24
     6e4:	20 83       	st	Z, r18

000006e6 <.Loc.156>:
    PORTB &= ~(1<<PB1);
     6e6:	85 e2       	ldi	r24, 0x25	; 37
     6e8:	90 e0       	ldi	r25, 0x00	; 0
     6ea:	fc 01       	movw	r30, r24
     6ec:	20 81       	ld	r18, Z

000006ee <.Loc.157>:
     6ee:	85 e2       	ldi	r24, 0x25	; 37
     6f0:	90 e0       	ldi	r25, 0x00	; 0

000006f2 <.Loc.158>:
     6f2:	2d 7f       	andi	r18, 0xFD	; 253
     6f4:	fc 01       	movw	r30, r24
     6f6:	20 83       	st	Z, r18

000006f8 <.Loc.159>:
}
     6f8:	00 00       	nop
     6fa:	df 91       	pop	r29
     6fc:	cf 91       	pop	r28
     6fe:	08 95       	ret

00000700 <sensoren>:

void sensoren()
{
     700:	cf 93       	push	r28
     702:	df 93       	push	r29
     704:	cd b7       	in	r28, 0x3d	; 61
     706:	de b7       	in	r29, 0x3e	; 62

00000708 <.Loc.161>:
        if ((PINF & (1<<PF0))==0)       //beide zijkanten checken, rechtdoor
     708:	8f e2       	ldi	r24, 0x2F	; 47
     70a:	90 e0       	ldi	r25, 0x00	; 0
     70c:	fc 01       	movw	r30, r24
     70e:	80 81       	ld	r24, Z

00000710 <.Loc.162>:
     710:	88 2f       	mov	r24, r24
     712:	90 e0       	ldi	r25, 0x00	; 0
     714:	81 70       	andi	r24, 0x01	; 1
     716:	99 27       	eor	r25, r25

00000718 <.Loc.163>:
     718:	00 97       	sbiw	r24, 0x00	; 0
     71a:	81 f4       	brne	.+32     	; 0x73c <.L26>

0000071c <.Loc.164>:
        {
        if ((PINF & (1<<PF1))==0)
     71c:	8f e2       	ldi	r24, 0x2F	; 47
     71e:	90 e0       	ldi	r25, 0x00	; 0
     720:	fc 01       	movw	r30, r24
     722:	80 81       	ld	r24, Z

00000724 <.Loc.165>:
     724:	88 2f       	mov	r24, r24
     726:	90 e0       	ldi	r25, 0x00	; 0
     728:	82 70       	andi	r24, 0x02	; 2
     72a:	99 27       	eor	r25, r25

0000072c <.Loc.166>:
     72c:	00 97       	sbiw	r24, 0x00	; 0
     72e:	31 f4       	brne	.+12     	; 0x73c <.L26>

00000730 <.Loc.167>:
        {
            state = 1;
     730:	81 e0       	ldi	r24, 0x01	; 1
     732:	90 e0       	ldi	r25, 0x00	; 0
     734:	90 93 01 02 	sts	0x0201, r25	; 0x800201 <state+0x1>
     738:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <state>

0000073c <.L26>:
        }
        }
        if (PINF & (1<<PF0))                   //links checken, rechts corigeren
     73c:	8f e2       	ldi	r24, 0x2F	; 47
     73e:	90 e0       	ldi	r25, 0x00	; 0
     740:	fc 01       	movw	r30, r24
     742:	80 81       	ld	r24, Z

00000744 <.Loc.169>:
     744:	88 2f       	mov	r24, r24
     746:	90 e0       	ldi	r25, 0x00	; 0
     748:	81 70       	andi	r24, 0x01	; 1
     74a:	99 27       	eor	r25, r25

0000074c <.Loc.170>:
     74c:	00 97       	sbiw	r24, 0x00	; 0
     74e:	31 f0       	breq	.+12     	; 0x75c <.L27>

00000750 <.Loc.171>:
        {
            state = 5;
     750:	85 e0       	ldi	r24, 0x05	; 5
     752:	90 e0       	ldi	r25, 0x00	; 0
     754:	90 93 01 02 	sts	0x0201, r25	; 0x800201 <state+0x1>
     758:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <state>

0000075c <.L27>:
        }
        if (PINF & (1<<PF1))                    //rechts checken, links corigeren
     75c:	8f e2       	ldi	r24, 0x2F	; 47
     75e:	90 e0       	ldi	r25, 0x00	; 0
     760:	fc 01       	movw	r30, r24
     762:	80 81       	ld	r24, Z

00000764 <.Loc.173>:
     764:	88 2f       	mov	r24, r24
     766:	90 e0       	ldi	r25, 0x00	; 0
     768:	82 70       	andi	r24, 0x02	; 2
     76a:	99 27       	eor	r25, r25

0000076c <.Loc.174>:
     76c:	00 97       	sbiw	r24, 0x00	; 0
     76e:	31 f0       	breq	.+12     	; 0x77c <.L28>

00000770 <.Loc.175>:
        {
            state = 4;
     770:	84 e0       	ldi	r24, 0x04	; 4
     772:	90 e0       	ldi	r25, 0x00	; 0
     774:	90 93 01 02 	sts	0x0201, r25	; 0x800201 <state+0x1>
     778:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <state>

0000077c <.L28>:
        }
            if (PINF & (1<<PF5)==0)                 //balk checken, grote bocht
     77c:	8f e2       	ldi	r24, 0x2F	; 47
     77e:	90 e0       	ldi	r25, 0x00	; 0
     780:	fc 01       	movw	r30, r24
     782:	80 81       	ld	r24, Z

00000784 <.Loc.177>:
        {
        state = 3;
        }


}
     784:	00 00       	nop
     786:	df 91       	pop	r29
     788:	cf 91       	pop	r28
     78a:	08 95       	ret

0000078c <veiligheidsensor>:
void veiligheidsensor()
{
     78c:	cf 93       	push	r28
     78e:	df 93       	push	r29
     790:	cd b7       	in	r28, 0x3d	; 61
     792:	de b7       	in	r29, 0x3e	; 62

00000794 <.Loc.179>:
    if (PINF & (1<<PF4)==0)                        //voren iets, staan stil
     794:	8f e2       	ldi	r24, 0x2F	; 47
     796:	90 e0       	ldi	r25, 0x00	; 0
     798:	fc 01       	movw	r30, r24
     79a:	80 81       	ld	r24, Z

0000079c <.Loc.180>:
        {
            state = 0;
        }
}
     79c:	00 00       	nop
     79e:	df 91       	pop	r29
     7a0:	cf 91       	pop	r28
     7a2:	08 95       	ret

000007a4 <vroem>:
void vroem()
{
     7a4:	cf 93       	push	r28
     7a6:	df 93       	push	r29
     7a8:	cd b7       	in	r28, 0x3d	; 61
     7aa:	de b7       	in	r29, 0x3e	; 62

000007ac <.Loc.182>:
    h_bridge_set_percentage(50);
     7ac:	82 e3       	ldi	r24, 0x32	; 50
     7ae:	0e 94 96 01 	call	0x32c	; 0x32c <h_bridge_set_percentage>

000007b2 <.Loc.183>:
}
     7b2:	00 00       	nop
     7b4:	df 91       	pop	r29
     7b6:	cf 91       	pop	r28
     7b8:	08 95       	ret

000007ba <plantsensoraan>:

void plantsensoraan()
{
     7ba:	cf 93       	push	r28
     7bc:	df 93       	push	r29
     7be:	cd b7       	in	r28, 0x3d	; 61
     7c0:	de b7       	in	r29, 0x3e	; 62

000007c2 <.Loc.185>:
if(random1 <= 0)
     7c2:	80 91 02 02 	lds	r24, 0x0202	; 0x800202 <random1>
     7c6:	90 91 03 02 	lds	r25, 0x0203	; 0x800203 <random1+0x1>

000007ca <.Loc.186>:
     7ca:	00 97       	sbiw	r24, 0x00	; 0
     7cc:	09 f0       	breq	.+2      	; 0x7d0 <.Loc.187>

000007ce <L0^A>:
     7ce:	bc f4       	brge	.+46     	; 0x7fe <.L32>

000007d0 <.Loc.187>:
{
if ((PINF & (1<<PF2))==0)                    //bomen rechts, staan stil
     7d0:	8f e2       	ldi	r24, 0x2F	; 47
     7d2:	90 e0       	ldi	r25, 0x00	; 0
     7d4:	fc 01       	movw	r30, r24
     7d6:	80 81       	ld	r24, Z

000007d8 <.Loc.188>:
     7d8:	88 2f       	mov	r24, r24
     7da:	90 e0       	ldi	r25, 0x00	; 0
     7dc:	84 70       	andi	r24, 0x04	; 4
     7de:	99 27       	eor	r25, r25

000007e0 <.Loc.189>:
     7e0:	00 97       	sbiw	r24, 0x00	; 0
     7e2:	b1 f4       	brne	.+44     	; 0x810 <.L33>

000007e4 <.Loc.190>:
{
state = 2;
     7e4:	82 e0       	ldi	r24, 0x02	; 2
     7e6:	90 e0       	ldi	r25, 0x00	; 0
     7e8:	90 93 01 02 	sts	0x0201, r25	; 0x800201 <state+0x1>
     7ec:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <state>

000007f0 <.Loc.191>:
random1 = 6000; //kan wisselen
     7f0:	80 e7       	ldi	r24, 0x70	; 112
     7f2:	97 e1       	ldi	r25, 0x17	; 23
     7f4:	90 93 03 02 	sts	0x0203, r25	; 0x800203 <random1+0x1>
     7f8:	80 93 02 02 	sts	0x0202, r24	; 0x800202 <random1>
     7fc:	09 c0       	rjmp	.+18     	; 0x810 <.L33>

000007fe <.L32>:
}
}
else
{
    random1--;
     7fe:	80 91 02 02 	lds	r24, 0x0202	; 0x800202 <random1>
     802:	90 91 03 02 	lds	r25, 0x0203	; 0x800203 <random1+0x1>
     806:	01 97       	sbiw	r24, 0x01	; 1
     808:	90 93 03 02 	sts	0x0203, r25	; 0x800203 <random1+0x1>
     80c:	80 93 02 02 	sts	0x0202, r24	; 0x800202 <random1>

00000810 <.L33>:
}
if (random2 <= 0)
     810:	80 91 04 02 	lds	r24, 0x0204	; 0x800204 <random2>
     814:	90 91 05 02 	lds	r25, 0x0205	; 0x800205 <random2+0x1>

00000818 <.Loc.194>:
     818:	00 97       	sbiw	r24, 0x00	; 0
     81a:	09 f0       	breq	.+2      	; 0x81e <.Loc.195>

0000081c <L0^A>:
     81c:	bc f4       	brge	.+46     	; 0x84c <.L34>

0000081e <.Loc.195>:
{
if ((PINF & (1<<PF3))==0)                    //bomen links, staan stil
     81e:	8f e2       	ldi	r24, 0x2F	; 47
     820:	90 e0       	ldi	r25, 0x00	; 0
     822:	fc 01       	movw	r30, r24
     824:	80 81       	ld	r24, Z

00000826 <.Loc.196>:
     826:	88 2f       	mov	r24, r24
     828:	90 e0       	ldi	r25, 0x00	; 0
     82a:	88 70       	andi	r24, 0x08	; 8
     82c:	99 27       	eor	r25, r25

0000082e <.Loc.197>:
     82e:	00 97       	sbiw	r24, 0x00	; 0
     830:	b1 f4       	brne	.+44     	; 0x85e <.L36>

00000832 <.Loc.198>:
{
state = 2;
     832:	82 e0       	ldi	r24, 0x02	; 2
     834:	90 e0       	ldi	r25, 0x00	; 0
     836:	90 93 01 02 	sts	0x0201, r25	; 0x800201 <state+0x1>
     83a:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <state>

0000083e <.Loc.199>:
random2 = 300; //kan wisselen
     83e:	8c e2       	ldi	r24, 0x2C	; 44
     840:	91 e0       	ldi	r25, 0x01	; 1
     842:	90 93 05 02 	sts	0x0205, r25	; 0x800205 <random2+0x1>
     846:	80 93 04 02 	sts	0x0204, r24	; 0x800204 <random2>

0000084a <.Loc.200>:
}
else
{
    random2--;
}
}
     84a:	09 c0       	rjmp	.+18     	; 0x85e <.L36>

0000084c <.L34>:
    random2--;
     84c:	80 91 04 02 	lds	r24, 0x0204	; 0x800204 <random2>
     850:	90 91 05 02 	lds	r25, 0x0205	; 0x800205 <random2+0x1>
     854:	01 97       	sbiw	r24, 0x01	; 1
     856:	90 93 05 02 	sts	0x0205, r25	; 0x800205 <random2+0x1>
     85a:	80 93 04 02 	sts	0x0204, r24	; 0x800204 <random2>

0000085e <.L36>:
}
     85e:	00 00       	nop
     860:	df 91       	pop	r29
     862:	cf 91       	pop	r28
     864:	08 95       	ret

00000866 <rem>:


void rem()
{
     866:	cf 93       	push	r28
     868:	df 93       	push	r29
     86a:	cd b7       	in	r28, 0x3d	; 61
     86c:	de b7       	in	r29, 0x3e	; 62

0000086e <.Loc.204>:
    h_bridge_set_percentage(0);
     86e:	80 e0       	ldi	r24, 0x00	; 0
     870:	0e 94 96 01 	call	0x32c	; 0x32c <h_bridge_set_percentage>

00000874 <.Loc.205>:
}
     874:	00 00       	nop
     876:	df 91       	pop	r29
     878:	cf 91       	pop	r28
     87a:	08 95       	ret

0000087c <alarm>:

void alarm()
{
     87c:	cf 93       	push	r28
     87e:	df 93       	push	r29
     880:	cd b7       	in	r28, 0x3d	; 61
     882:	de b7       	in	r29, 0x3e	; 62
     884:	c8 58       	subi	r28, 0x88	; 136
     886:	d1 09       	sbc	r29, r1
     888:	0f b6       	in	r0, 0x3f	; 63
     88a:	f8 94       	cli
     88c:	de bf       	out	0x3e, r29	; 62
     88e:	0f be       	out	0x3f, r0	; 63
     890:	cd bf       	out	0x3d, r28	; 61

00000892 <.Loc.207>:
        PORTB |= (1<<PB0);
     892:	85 e2       	ldi	r24, 0x25	; 37
     894:	90 e0       	ldi	r25, 0x00	; 0
     896:	dc 01       	movw	r26, r24
     898:	2c 91       	ld	r18, X
     89a:	85 e2       	ldi	r24, 0x25	; 37
     89c:	90 e0       	ldi	r25, 0x00	; 0

0000089e <.Loc.208>:
     89e:	21 60       	ori	r18, 0x01	; 1
     8a0:	fc 01       	movw	r30, r24
     8a2:	20 83       	st	Z, r18
     8a4:	80 e0       	ldi	r24, 0x00	; 0
     8a6:	90 e0       	ldi	r25, 0x00	; 0
     8a8:	aa ef       	ldi	r26, 0xFA	; 250
     8aa:	b3 e4       	ldi	r27, 0x43	; 67
     8ac:	8b a7       	std	Y+43, r24	; 0x2b
     8ae:	9c a7       	std	Y+44, r25	; 0x2c
     8b0:	ad a7       	std	Y+45, r26	; 0x2d
     8b2:	be a7       	std	Y+46, r27	; 0x2e

000008b4 <.LBB30>:

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     8b4:	20 e0       	ldi	r18, 0x00	; 0
     8b6:	30 e0       	ldi	r19, 0x00	; 0
     8b8:	4a e7       	ldi	r20, 0x7A	; 122
     8ba:	55 e4       	ldi	r21, 0x45	; 69
     8bc:	6b a5       	ldd	r22, Y+43	; 0x2b
     8be:	7c a5       	ldd	r23, Y+44	; 0x2c
     8c0:	8d a5       	ldd	r24, Y+45	; 0x2d
     8c2:	9e a5       	ldd	r25, Y+46	; 0x2e
     8c4:	0e 94 4e 09 	call	0x129c	; 0x129c <__mulsf3>
     8c8:	2d 96       	adiw	r28, 0x0d	; 13
     8ca:	6c af       	std	Y+60, r22	; 0x3c
     8cc:	7d af       	std	Y+61, r23	; 0x3d
     8ce:	8e af       	std	Y+62, r24	; 0x3e
     8d0:	9f af       	std	Y+63, r25	; 0x3f
     8d2:	2d 97       	sbiw	r28, 0x0d	; 13
     8d4:	2d 96       	adiw	r28, 0x0d	; 13
     8d6:	8c ad       	ldd	r24, Y+60	; 0x3c
     8d8:	9d ad       	ldd	r25, Y+61	; 0x3d
     8da:	ae ad       	ldd	r26, Y+62	; 0x3e
     8dc:	bf ad       	ldd	r27, Y+63	; 0x3f
     8de:	2d 97       	sbiw	r28, 0x0d	; 13
     8e0:	8f a7       	std	Y+47, r24	; 0x2f
     8e2:	98 ab       	std	Y+48, r25	; 0x30
     8e4:	a9 ab       	std	Y+49, r26	; 0x31
     8e6:	ba ab       	std	Y+50, r27	; 0x32

000008e8 <.Loc.210>:
	if (__tmp < 1.0)
     8e8:	20 e0       	ldi	r18, 0x00	; 0
     8ea:	30 e0       	ldi	r19, 0x00	; 0
     8ec:	40 e8       	ldi	r20, 0x80	; 128
     8ee:	5f e3       	ldi	r21, 0x3F	; 63
     8f0:	6f a5       	ldd	r22, Y+47	; 0x2f
     8f2:	78 a9       	ldd	r23, Y+48	; 0x30
     8f4:	89 a9       	ldd	r24, Y+49	; 0x31
     8f6:	9a a9       	ldd	r25, Y+50	; 0x32
     8f8:	0e 94 63 08 	call	0x10c6	; 0x10c6 <__cmpsf2>
     8fc:	88 23       	and	r24, r24
     8fe:	2c f4       	brge	.+10     	; 0x90a <.L79>

00000900 <.Loc.211>:
		__ticks = 1;
     900:	81 e0       	ldi	r24, 0x01	; 1
     902:	90 e0       	ldi	r25, 0x00	; 0
     904:	9c ab       	std	Y+52, r25	; 0x34
     906:	8b ab       	std	Y+51, r24	; 0x33
     908:	66 c0       	rjmp	.+204    	; 0x9d6 <.L41>

0000090a <.L79>:
	else if (__tmp > 65535)
     90a:	20 e0       	ldi	r18, 0x00	; 0
     90c:	3f ef       	ldi	r19, 0xFF	; 255
     90e:	4f e7       	ldi	r20, 0x7F	; 127
     910:	57 e4       	ldi	r21, 0x47	; 71
     912:	6f a5       	ldd	r22, Y+47	; 0x2f
     914:	78 a9       	ldd	r23, Y+48	; 0x30
     916:	89 a9       	ldd	r24, Y+49	; 0x31
     918:	9a a9       	ldd	r25, Y+50	; 0x32
     91a:	0e 94 49 09 	call	0x1292	; 0x1292 <__gesf2>
     91e:	88 23       	and	r24, r24
     920:	09 f0       	breq	.+2      	; 0x924 <L0^A>

00000922 <L0^A>:
     922:	0c f4       	brge	.+2      	; 0x926 <.Loc.213>

00000924 <L0^A>:
     924:	46 c0       	rjmp	.+140    	; 0x9b2 <.L80>

00000926 <.Loc.213>:
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     926:	20 e0       	ldi	r18, 0x00	; 0
     928:	30 e0       	ldi	r19, 0x00	; 0
     92a:	40 e2       	ldi	r20, 0x20	; 32
     92c:	51 e4       	ldi	r21, 0x41	; 65
     92e:	6b a5       	ldd	r22, Y+43	; 0x2b
     930:	7c a5       	ldd	r23, Y+44	; 0x2c
     932:	8d a5       	ldd	r24, Y+45	; 0x2d
     934:	9e a5       	ldd	r25, Y+46	; 0x2e
     936:	0e 94 4e 09 	call	0x129c	; 0x129c <__mulsf3>
     93a:	61 96       	adiw	r28, 0x11	; 17
     93c:	6c af       	std	Y+60, r22	; 0x3c
     93e:	7d af       	std	Y+61, r23	; 0x3d
     940:	8e af       	std	Y+62, r24	; 0x3e
     942:	9f af       	std	Y+63, r25	; 0x3f
     944:	61 97       	sbiw	r28, 0x11	; 17
     946:	61 96       	adiw	r28, 0x11	; 17
     948:	8c ad       	ldd	r24, Y+60	; 0x3c
     94a:	9d ad       	ldd	r25, Y+61	; 0x3d
     94c:	ae ad       	ldd	r26, Y+62	; 0x3e
     94e:	bf ad       	ldd	r27, Y+63	; 0x3f
     950:	61 97       	sbiw	r28, 0x11	; 17
     952:	29 96       	adiw	r28, 0x09	; 9
     954:	8c af       	std	Y+60, r24	; 0x3c
     956:	9d af       	std	Y+61, r25	; 0x3d
     958:	ae af       	std	Y+62, r26	; 0x3e
     95a:	bf af       	std	Y+63, r27	; 0x3f
     95c:	29 97       	sbiw	r28, 0x09	; 9

0000095e <.Loc.214>:
     95e:	29 96       	adiw	r28, 0x09	; 9
     960:	6c ad       	ldd	r22, Y+60	; 0x3c
     962:	7d ad       	ldd	r23, Y+61	; 0x3d
     964:	8e ad       	ldd	r24, Y+62	; 0x3e
     966:	9f ad       	ldd	r25, Y+63	; 0x3f
     968:	29 97       	sbiw	r28, 0x09	; 9
     96a:	0e 94 68 08 	call	0x10d0	; 0x10d0 <__fixunssfsi>
     96e:	65 96       	adiw	r28, 0x15	; 21
     970:	6c af       	std	Y+60, r22	; 0x3c
     972:	7d af       	std	Y+61, r23	; 0x3d
     974:	8e af       	std	Y+62, r24	; 0x3e
     976:	9f af       	std	Y+63, r25	; 0x3f
     978:	65 97       	sbiw	r28, 0x15	; 21
     97a:	63 96       	adiw	r28, 0x13	; 19
     97c:	ae ad       	ldd	r26, Y+62	; 0x3e
     97e:	bf ad       	ldd	r27, Y+63	; 0x3f
     980:	63 97       	sbiw	r28, 0x13	; 19
     982:	bc ab       	std	Y+52, r27	; 0x34
     984:	ab ab       	std	Y+51, r26	; 0x33

00000986 <.Loc.215>:
		while(__ticks)
     986:	10 c0       	rjmp	.+32     	; 0x9a8 <.L44>

00000988 <.L45>:
     988:	80 e9       	ldi	r24, 0x90	; 144
     98a:	91 e0       	ldi	r25, 0x01	; 1
     98c:	9e ab       	std	Y+54, r25	; 0x36
     98e:	8d ab       	std	Y+53, r24	; 0x35

00000990 <.LBB32>:
		"sbc %B0,__zero_reg__"    "\n\t"
		"brne 1b"
		: "+d" (__count)
	);
#else
	__asm__ volatile (
     990:	8d a9       	ldd	r24, Y+53	; 0x35
     992:	9e a9       	ldd	r25, Y+54	; 0x36

00000994 <.L1^B1>:
     994:	01 97       	sbiw	r24, 0x01	; 1
     996:	f1 f7       	brne	.-4      	; 0x994 <.L1^B1>
     998:	9e ab       	std	Y+54, r25	; 0x36
     99a:	8d ab       	std	Y+53, r24	; 0x35

0000099c <.Loc.217>:
	...

0000099e <.LBE32>:
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     99e:	8b a9       	ldd	r24, Y+51	; 0x33
     9a0:	9c a9       	ldd	r25, Y+52	; 0x34
     9a2:	01 97       	sbiw	r24, 0x01	; 1
     9a4:	9c ab       	std	Y+52, r25	; 0x34
     9a6:	8b ab       	std	Y+51, r24	; 0x33

000009a8 <.L44>:
		while(__ticks)
     9a8:	8b a9       	ldd	r24, Y+51	; 0x33
     9aa:	9c a9       	ldd	r25, Y+52	; 0x34
     9ac:	00 97       	sbiw	r24, 0x00	; 0
     9ae:	61 f7       	brne	.-40     	; 0x988 <.L45>

000009b0 <.Loc.220>:
		}
		return;
     9b0:	1d c0       	rjmp	.+58     	; 0x9ec <.L46>

000009b2 <.L80>:
	}
	else
		__ticks = (uint16_t)__tmp;
     9b2:	6f a5       	ldd	r22, Y+47	; 0x2f
     9b4:	78 a9       	ldd	r23, Y+48	; 0x30
     9b6:	89 a9       	ldd	r24, Y+49	; 0x31
     9b8:	9a a9       	ldd	r25, Y+50	; 0x32
     9ba:	0e 94 68 08 	call	0x10d0	; 0x10d0 <__fixunssfsi>
     9be:	69 96       	adiw	r28, 0x19	; 25
     9c0:	6c af       	std	Y+60, r22	; 0x3c
     9c2:	7d af       	std	Y+61, r23	; 0x3d
     9c4:	8e af       	std	Y+62, r24	; 0x3e
     9c6:	9f af       	std	Y+63, r25	; 0x3f
     9c8:	69 97       	sbiw	r28, 0x19	; 25
     9ca:	67 96       	adiw	r28, 0x17	; 23
     9cc:	ee ad       	ldd	r30, Y+62	; 0x3e
     9ce:	ff ad       	ldd	r31, Y+63	; 0x3f
     9d0:	67 97       	sbiw	r28, 0x17	; 23
     9d2:	fc ab       	std	Y+52, r31	; 0x34
     9d4:	eb ab       	std	Y+51, r30	; 0x33

000009d6 <.L41>:
     9d6:	8b a9       	ldd	r24, Y+51	; 0x33
     9d8:	9c a9       	ldd	r25, Y+52	; 0x34
     9da:	98 af       	std	Y+56, r25	; 0x38
     9dc:	8f ab       	std	Y+55, r24	; 0x37

000009de <.LBB34>:
     9de:	8f a9       	ldd	r24, Y+55	; 0x37
     9e0:	98 ad       	ldd	r25, Y+56	; 0x38

000009e2 <.L1^B2>:
     9e2:	01 97       	sbiw	r24, 0x01	; 1
     9e4:	f1 f7       	brne	.-4      	; 0x9e2 <.L1^B2>
     9e6:	98 af       	std	Y+56, r25	; 0x38
     9e8:	8f ab       	std	Y+55, r24	; 0x37

000009ea <.Loc.223>:
	...

000009ec <.L46>:
        _delay_ms(500);
        PORTB &= ~(1<<PB0);
     9ec:	85 e2       	ldi	r24, 0x25	; 37
     9ee:	90 e0       	ldi	r25, 0x00	; 0
     9f0:	dc 01       	movw	r26, r24
     9f2:	2c 91       	ld	r18, X

000009f4 <.Loc.225>:
     9f4:	85 e2       	ldi	r24, 0x25	; 37
     9f6:	90 e0       	ldi	r25, 0x00	; 0

000009f8 <.Loc.226>:
     9f8:	2e 7f       	andi	r18, 0xFE	; 254
     9fa:	fc 01       	movw	r30, r24
     9fc:	20 83       	st	Z, r18

000009fe <.Loc.227>:
        PORTB |= (1<<PB1);
     9fe:	85 e2       	ldi	r24, 0x25	; 37
     a00:	90 e0       	ldi	r25, 0x00	; 0
     a02:	dc 01       	movw	r26, r24
     a04:	2c 91       	ld	r18, X
     a06:	85 e2       	ldi	r24, 0x25	; 37
     a08:	90 e0       	ldi	r25, 0x00	; 0

00000a0a <.Loc.228>:
     a0a:	22 60       	ori	r18, 0x02	; 2
     a0c:	fc 01       	movw	r30, r24
     a0e:	20 83       	st	Z, r18
     a10:	80 e0       	ldi	r24, 0x00	; 0
     a12:	90 e0       	ldi	r25, 0x00	; 0
     a14:	aa ef       	ldi	r26, 0xFA	; 250
     a16:	b3 e4       	ldi	r27, 0x43	; 67
     a18:	8d 8f       	std	Y+29, r24	; 0x1d
     a1a:	9e 8f       	std	Y+30, r25	; 0x1e
     a1c:	af 8f       	std	Y+31, r26	; 0x1f
     a1e:	b8 a3       	std	Y+32, r27	; 0x20

00000a20 <.LBB36>:
	__tmp = ((F_CPU) / 4e3) * __ms;
     a20:	20 e0       	ldi	r18, 0x00	; 0
     a22:	30 e0       	ldi	r19, 0x00	; 0
     a24:	4a e7       	ldi	r20, 0x7A	; 122
     a26:	55 e4       	ldi	r21, 0x45	; 69
     a28:	6d 8d       	ldd	r22, Y+29	; 0x1d
     a2a:	7e 8d       	ldd	r23, Y+30	; 0x1e
     a2c:	8f 8d       	ldd	r24, Y+31	; 0x1f
     a2e:	98 a1       	ldd	r25, Y+32	; 0x20
     a30:	0e 94 4e 09 	call	0x129c	; 0x129c <__mulsf3>
     a34:	6d 96       	adiw	r28, 0x1d	; 29
     a36:	6c af       	std	Y+60, r22	; 0x3c
     a38:	7d af       	std	Y+61, r23	; 0x3d
     a3a:	8e af       	std	Y+62, r24	; 0x3e
     a3c:	9f af       	std	Y+63, r25	; 0x3f
     a3e:	6d 97       	sbiw	r28, 0x1d	; 29
     a40:	6d 96       	adiw	r28, 0x1d	; 29
     a42:	8c ad       	ldd	r24, Y+60	; 0x3c
     a44:	9d ad       	ldd	r25, Y+61	; 0x3d
     a46:	ae ad       	ldd	r26, Y+62	; 0x3e
     a48:	bf ad       	ldd	r27, Y+63	; 0x3f
     a4a:	6d 97       	sbiw	r28, 0x1d	; 29
     a4c:	89 a3       	std	Y+33, r24	; 0x21
     a4e:	9a a3       	std	Y+34, r25	; 0x22
     a50:	ab a3       	std	Y+35, r26	; 0x23
     a52:	bc a3       	std	Y+36, r27	; 0x24

00000a54 <.Loc.230>:
	if (__tmp < 1.0)
     a54:	20 e0       	ldi	r18, 0x00	; 0
     a56:	30 e0       	ldi	r19, 0x00	; 0
     a58:	40 e8       	ldi	r20, 0x80	; 128
     a5a:	5f e3       	ldi	r21, 0x3F	; 63
     a5c:	69 a1       	ldd	r22, Y+33	; 0x21
     a5e:	7a a1       	ldd	r23, Y+34	; 0x22
     a60:	8b a1       	ldd	r24, Y+35	; 0x23
     a62:	9c a1       	ldd	r25, Y+36	; 0x24
     a64:	0e 94 63 08 	call	0x10c6	; 0x10c6 <__cmpsf2>
     a68:	88 23       	and	r24, r24
     a6a:	2c f4       	brge	.+10     	; 0xa76 <.L81>

00000a6c <.Loc.231>:
		__ticks = 1;
     a6c:	81 e0       	ldi	r24, 0x01	; 1
     a6e:	90 e0       	ldi	r25, 0x00	; 0
     a70:	9e a3       	std	Y+38, r25	; 0x26
     a72:	8d a3       	std	Y+37, r24	; 0x25
     a74:	66 c0       	rjmp	.+204    	; 0xb42 <.L49>

00000a76 <.L81>:
	else if (__tmp > 65535)
     a76:	20 e0       	ldi	r18, 0x00	; 0
     a78:	3f ef       	ldi	r19, 0xFF	; 255
     a7a:	4f e7       	ldi	r20, 0x7F	; 127
     a7c:	57 e4       	ldi	r21, 0x47	; 71
     a7e:	69 a1       	ldd	r22, Y+33	; 0x21
     a80:	7a a1       	ldd	r23, Y+34	; 0x22
     a82:	8b a1       	ldd	r24, Y+35	; 0x23
     a84:	9c a1       	ldd	r25, Y+36	; 0x24
     a86:	0e 94 49 09 	call	0x1292	; 0x1292 <__gesf2>
     a8a:	88 23       	and	r24, r24
     a8c:	09 f0       	breq	.+2      	; 0xa90 <L0^A>

00000a8e <L0^A>:
     a8e:	0c f4       	brge	.+2      	; 0xa92 <.Loc.233>

00000a90 <L0^A>:
     a90:	46 c0       	rjmp	.+140    	; 0xb1e <.L82>

00000a92 <.Loc.233>:
		__ticks = (uint16_t) (__ms * 10.0);
     a92:	20 e0       	ldi	r18, 0x00	; 0
     a94:	30 e0       	ldi	r19, 0x00	; 0
     a96:	40 e2       	ldi	r20, 0x20	; 32
     a98:	51 e4       	ldi	r21, 0x41	; 65
     a9a:	6d 8d       	ldd	r22, Y+29	; 0x1d
     a9c:	7e 8d       	ldd	r23, Y+30	; 0x1e
     a9e:	8f 8d       	ldd	r24, Y+31	; 0x1f
     aa0:	98 a1       	ldd	r25, Y+32	; 0x20
     aa2:	0e 94 4e 09 	call	0x129c	; 0x129c <__mulsf3>
     aa6:	a1 96       	adiw	r28, 0x21	; 33
     aa8:	6c af       	std	Y+60, r22	; 0x3c
     aaa:	7d af       	std	Y+61, r23	; 0x3d
     aac:	8e af       	std	Y+62, r24	; 0x3e
     aae:	9f af       	std	Y+63, r25	; 0x3f
     ab0:	a1 97       	sbiw	r28, 0x21	; 33
     ab2:	a1 96       	adiw	r28, 0x21	; 33
     ab4:	8c ad       	ldd	r24, Y+60	; 0x3c
     ab6:	9d ad       	ldd	r25, Y+61	; 0x3d
     ab8:	ae ad       	ldd	r26, Y+62	; 0x3e
     aba:	bf ad       	ldd	r27, Y+63	; 0x3f
     abc:	a1 97       	sbiw	r28, 0x21	; 33
     abe:	25 96       	adiw	r28, 0x05	; 5
     ac0:	8c af       	std	Y+60, r24	; 0x3c
     ac2:	9d af       	std	Y+61, r25	; 0x3d
     ac4:	ae af       	std	Y+62, r26	; 0x3e
     ac6:	bf af       	std	Y+63, r27	; 0x3f
     ac8:	25 97       	sbiw	r28, 0x05	; 5

00000aca <.Loc.234>:
     aca:	25 96       	adiw	r28, 0x05	; 5
     acc:	6c ad       	ldd	r22, Y+60	; 0x3c
     ace:	7d ad       	ldd	r23, Y+61	; 0x3d
     ad0:	8e ad       	ldd	r24, Y+62	; 0x3e
     ad2:	9f ad       	ldd	r25, Y+63	; 0x3f
     ad4:	25 97       	sbiw	r28, 0x05	; 5
     ad6:	0e 94 68 08 	call	0x10d0	; 0x10d0 <__fixunssfsi>
     ada:	a5 96       	adiw	r28, 0x25	; 37
     adc:	6c af       	std	Y+60, r22	; 0x3c
     ade:	7d af       	std	Y+61, r23	; 0x3d
     ae0:	8e af       	std	Y+62, r24	; 0x3e
     ae2:	9f af       	std	Y+63, r25	; 0x3f
     ae4:	a5 97       	sbiw	r28, 0x25	; 37
     ae6:	a3 96       	adiw	r28, 0x23	; 35
     ae8:	ae ad       	ldd	r26, Y+62	; 0x3e
     aea:	bf ad       	ldd	r27, Y+63	; 0x3f
     aec:	a3 97       	sbiw	r28, 0x23	; 35
     aee:	be a3       	std	Y+38, r27	; 0x26
     af0:	ad a3       	std	Y+37, r26	; 0x25

00000af2 <.Loc.235>:
		while(__ticks)
     af2:	10 c0       	rjmp	.+32     	; 0xb14 <.L52>

00000af4 <.L53>:
     af4:	80 e9       	ldi	r24, 0x90	; 144
     af6:	91 e0       	ldi	r25, 0x01	; 1
     af8:	98 a7       	std	Y+40, r25	; 0x28
     afa:	8f a3       	std	Y+39, r24	; 0x27

00000afc <.LBB38>:
     afc:	8f a1       	ldd	r24, Y+39	; 0x27
     afe:	98 a5       	ldd	r25, Y+40	; 0x28

00000b00 <.L1^B3>:
     b00:	01 97       	sbiw	r24, 0x01	; 1
     b02:	f1 f7       	brne	.-4      	; 0xb00 <.L1^B3>
     b04:	98 a7       	std	Y+40, r25	; 0x28
     b06:	8f a3       	std	Y+39, r24	; 0x27

00000b08 <.Loc.237>:
	...

00000b0a <.LBE38>:
			__ticks --;
     b0a:	8d a1       	ldd	r24, Y+37	; 0x25
     b0c:	9e a1       	ldd	r25, Y+38	; 0x26
     b0e:	01 97       	sbiw	r24, 0x01	; 1
     b10:	9e a3       	std	Y+38, r25	; 0x26
     b12:	8d a3       	std	Y+37, r24	; 0x25

00000b14 <.L52>:
		while(__ticks)
     b14:	8d a1       	ldd	r24, Y+37	; 0x25
     b16:	9e a1       	ldd	r25, Y+38	; 0x26
     b18:	00 97       	sbiw	r24, 0x00	; 0
     b1a:	61 f7       	brne	.-40     	; 0xaf4 <.L53>

00000b1c <.Loc.240>:
		return;
     b1c:	1d c0       	rjmp	.+58     	; 0xb58 <.L54>

00000b1e <.L82>:
		__ticks = (uint16_t)__tmp;
     b1e:	69 a1       	ldd	r22, Y+33	; 0x21
     b20:	7a a1       	ldd	r23, Y+34	; 0x22
     b22:	8b a1       	ldd	r24, Y+35	; 0x23
     b24:	9c a1       	ldd	r25, Y+36	; 0x24
     b26:	0e 94 68 08 	call	0x10d0	; 0x10d0 <__fixunssfsi>
     b2a:	a9 96       	adiw	r28, 0x29	; 41
     b2c:	6c af       	std	Y+60, r22	; 0x3c
     b2e:	7d af       	std	Y+61, r23	; 0x3d
     b30:	8e af       	std	Y+62, r24	; 0x3e
     b32:	9f af       	std	Y+63, r25	; 0x3f
     b34:	a9 97       	sbiw	r28, 0x29	; 41
     b36:	a7 96       	adiw	r28, 0x27	; 39
     b38:	ee ad       	ldd	r30, Y+62	; 0x3e
     b3a:	ff ad       	ldd	r31, Y+63	; 0x3f
     b3c:	a7 97       	sbiw	r28, 0x27	; 39
     b3e:	fe a3       	std	Y+38, r31	; 0x26
     b40:	ed a3       	std	Y+37, r30	; 0x25

00000b42 <.L49>:
     b42:	8d a1       	ldd	r24, Y+37	; 0x25
     b44:	9e a1       	ldd	r25, Y+38	; 0x26
     b46:	9a a7       	std	Y+42, r25	; 0x2a
     b48:	89 a7       	std	Y+41, r24	; 0x29

00000b4a <.LBB40>:
     b4a:	89 a5       	ldd	r24, Y+41	; 0x29
     b4c:	9a a5       	ldd	r25, Y+42	; 0x2a

00000b4e <.L1^B4>:
     b4e:	01 97       	sbiw	r24, 0x01	; 1
     b50:	f1 f7       	brne	.-4      	; 0xb4e <.L1^B4>
     b52:	9a a7       	std	Y+42, r25	; 0x2a
     b54:	89 a7       	std	Y+41, r24	; 0x29

00000b56 <.Loc.243>:
	...

00000b58 <.L54>:
        _delay_ms(500);
        PORTB |= (1<<PB0);
     b58:	85 e2       	ldi	r24, 0x25	; 37
     b5a:	90 e0       	ldi	r25, 0x00	; 0
     b5c:	dc 01       	movw	r26, r24
     b5e:	2c 91       	ld	r18, X
     b60:	85 e2       	ldi	r24, 0x25	; 37
     b62:	90 e0       	ldi	r25, 0x00	; 0

00000b64 <.Loc.245>:
     b64:	21 60       	ori	r18, 0x01	; 1
     b66:	fc 01       	movw	r30, r24
     b68:	20 83       	st	Z, r18

00000b6a <.Loc.246>:
        PORTB &= ~(1<<PB1);
     b6a:	85 e2       	ldi	r24, 0x25	; 37
     b6c:	90 e0       	ldi	r25, 0x00	; 0
     b6e:	dc 01       	movw	r26, r24
     b70:	2c 91       	ld	r18, X

00000b72 <.Loc.247>:
     b72:	85 e2       	ldi	r24, 0x25	; 37
     b74:	90 e0       	ldi	r25, 0x00	; 0

00000b76 <.Loc.248>:
     b76:	2d 7f       	andi	r18, 0xFD	; 253
     b78:	fc 01       	movw	r30, r24
     b7a:	20 83       	st	Z, r18
     b7c:	80 e0       	ldi	r24, 0x00	; 0
     b7e:	90 e0       	ldi	r25, 0x00	; 0
     b80:	aa ef       	ldi	r26, 0xFA	; 250
     b82:	b3 e4       	ldi	r27, 0x43	; 67
     b84:	8f 87       	std	Y+15, r24	; 0x0f
     b86:	98 8b       	std	Y+16, r25	; 0x10
     b88:	a9 8b       	std	Y+17, r26	; 0x11
     b8a:	ba 8b       	std	Y+18, r27	; 0x12

00000b8c <.LBB42>:
	__tmp = ((F_CPU) / 4e3) * __ms;
     b8c:	20 e0       	ldi	r18, 0x00	; 0
     b8e:	30 e0       	ldi	r19, 0x00	; 0
     b90:	4a e7       	ldi	r20, 0x7A	; 122
     b92:	55 e4       	ldi	r21, 0x45	; 69
     b94:	6f 85       	ldd	r22, Y+15	; 0x0f
     b96:	78 89       	ldd	r23, Y+16	; 0x10
     b98:	89 89       	ldd	r24, Y+17	; 0x11
     b9a:	9a 89       	ldd	r25, Y+18	; 0x12
     b9c:	0e 94 4e 09 	call	0x129c	; 0x129c <__mulsf3>
     ba0:	ad 96       	adiw	r28, 0x2d	; 45
     ba2:	6c af       	std	Y+60, r22	; 0x3c
     ba4:	7d af       	std	Y+61, r23	; 0x3d
     ba6:	8e af       	std	Y+62, r24	; 0x3e
     ba8:	9f af       	std	Y+63, r25	; 0x3f
     baa:	ad 97       	sbiw	r28, 0x2d	; 45
     bac:	ad 96       	adiw	r28, 0x2d	; 45
     bae:	8c ad       	ldd	r24, Y+60	; 0x3c
     bb0:	9d ad       	ldd	r25, Y+61	; 0x3d
     bb2:	ae ad       	ldd	r26, Y+62	; 0x3e
     bb4:	bf ad       	ldd	r27, Y+63	; 0x3f
     bb6:	ad 97       	sbiw	r28, 0x2d	; 45
     bb8:	8b 8b       	std	Y+19, r24	; 0x13
     bba:	9c 8b       	std	Y+20, r25	; 0x14
     bbc:	ad 8b       	std	Y+21, r26	; 0x15
     bbe:	be 8b       	std	Y+22, r27	; 0x16

00000bc0 <.Loc.250>:
	if (__tmp < 1.0)
     bc0:	20 e0       	ldi	r18, 0x00	; 0
     bc2:	30 e0       	ldi	r19, 0x00	; 0
     bc4:	40 e8       	ldi	r20, 0x80	; 128
     bc6:	5f e3       	ldi	r21, 0x3F	; 63
     bc8:	6b 89       	ldd	r22, Y+19	; 0x13
     bca:	7c 89       	ldd	r23, Y+20	; 0x14
     bcc:	8d 89       	ldd	r24, Y+21	; 0x15
     bce:	9e 89       	ldd	r25, Y+22	; 0x16
     bd0:	0e 94 63 08 	call	0x10c6	; 0x10c6 <__cmpsf2>
     bd4:	88 23       	and	r24, r24
     bd6:	2c f4       	brge	.+10     	; 0xbe2 <.L83>

00000bd8 <.Loc.251>:
		__ticks = 1;
     bd8:	81 e0       	ldi	r24, 0x01	; 1
     bda:	90 e0       	ldi	r25, 0x00	; 0
     bdc:	98 8f       	std	Y+24, r25	; 0x18
     bde:	8f 8b       	std	Y+23, r24	; 0x17
     be0:	66 c0       	rjmp	.+204    	; 0xcae <.L57>

00000be2 <.L83>:
	else if (__tmp > 65535)
     be2:	20 e0       	ldi	r18, 0x00	; 0
     be4:	3f ef       	ldi	r19, 0xFF	; 255
     be6:	4f e7       	ldi	r20, 0x7F	; 127
     be8:	57 e4       	ldi	r21, 0x47	; 71
     bea:	6b 89       	ldd	r22, Y+19	; 0x13
     bec:	7c 89       	ldd	r23, Y+20	; 0x14
     bee:	8d 89       	ldd	r24, Y+21	; 0x15
     bf0:	9e 89       	ldd	r25, Y+22	; 0x16
     bf2:	0e 94 49 09 	call	0x1292	; 0x1292 <__gesf2>
     bf6:	88 23       	and	r24, r24
     bf8:	09 f0       	breq	.+2      	; 0xbfc <L0^A>

00000bfa <L0^A>:
     bfa:	0c f4       	brge	.+2      	; 0xbfe <.Loc.253>

00000bfc <L0^A>:
     bfc:	46 c0       	rjmp	.+140    	; 0xc8a <.L84>

00000bfe <.Loc.253>:
		__ticks = (uint16_t) (__ms * 10.0);
     bfe:	20 e0       	ldi	r18, 0x00	; 0
     c00:	30 e0       	ldi	r19, 0x00	; 0
     c02:	40 e2       	ldi	r20, 0x20	; 32
     c04:	51 e4       	ldi	r21, 0x41	; 65
     c06:	6f 85       	ldd	r22, Y+15	; 0x0f
     c08:	78 89       	ldd	r23, Y+16	; 0x10
     c0a:	89 89       	ldd	r24, Y+17	; 0x11
     c0c:	9a 89       	ldd	r25, Y+18	; 0x12
     c0e:	0e 94 4e 09 	call	0x129c	; 0x129c <__mulsf3>
     c12:	e1 96       	adiw	r28, 0x31	; 49
     c14:	6c af       	std	Y+60, r22	; 0x3c
     c16:	7d af       	std	Y+61, r23	; 0x3d
     c18:	8e af       	std	Y+62, r24	; 0x3e
     c1a:	9f af       	std	Y+63, r25	; 0x3f
     c1c:	e1 97       	sbiw	r28, 0x31	; 49
     c1e:	e1 96       	adiw	r28, 0x31	; 49
     c20:	8c ad       	ldd	r24, Y+60	; 0x3c
     c22:	9d ad       	ldd	r25, Y+61	; 0x3d
     c24:	ae ad       	ldd	r26, Y+62	; 0x3e
     c26:	bf ad       	ldd	r27, Y+63	; 0x3f
     c28:	e1 97       	sbiw	r28, 0x31	; 49
     c2a:	21 96       	adiw	r28, 0x01	; 1
     c2c:	8c af       	std	Y+60, r24	; 0x3c
     c2e:	9d af       	std	Y+61, r25	; 0x3d
     c30:	ae af       	std	Y+62, r26	; 0x3e
     c32:	bf af       	std	Y+63, r27	; 0x3f
     c34:	21 97       	sbiw	r28, 0x01	; 1

00000c36 <.Loc.254>:
     c36:	21 96       	adiw	r28, 0x01	; 1
     c38:	6c ad       	ldd	r22, Y+60	; 0x3c
     c3a:	7d ad       	ldd	r23, Y+61	; 0x3d
     c3c:	8e ad       	ldd	r24, Y+62	; 0x3e
     c3e:	9f ad       	ldd	r25, Y+63	; 0x3f
     c40:	21 97       	sbiw	r28, 0x01	; 1
     c42:	0e 94 68 08 	call	0x10d0	; 0x10d0 <__fixunssfsi>
     c46:	e5 96       	adiw	r28, 0x35	; 53
     c48:	6c af       	std	Y+60, r22	; 0x3c
     c4a:	7d af       	std	Y+61, r23	; 0x3d
     c4c:	8e af       	std	Y+62, r24	; 0x3e
     c4e:	9f af       	std	Y+63, r25	; 0x3f
     c50:	e5 97       	sbiw	r28, 0x35	; 53
     c52:	e3 96       	adiw	r28, 0x33	; 51
     c54:	ae ad       	ldd	r26, Y+62	; 0x3e
     c56:	bf ad       	ldd	r27, Y+63	; 0x3f
     c58:	e3 97       	sbiw	r28, 0x33	; 51
     c5a:	b8 8f       	std	Y+24, r27	; 0x18
     c5c:	af 8b       	std	Y+23, r26	; 0x17

00000c5e <.Loc.255>:
		while(__ticks)
     c5e:	10 c0       	rjmp	.+32     	; 0xc80 <.L60>

00000c60 <.L61>:
     c60:	80 e9       	ldi	r24, 0x90	; 144
     c62:	91 e0       	ldi	r25, 0x01	; 1
     c64:	9a 8f       	std	Y+26, r25	; 0x1a
     c66:	89 8f       	std	Y+25, r24	; 0x19

00000c68 <.LBB44>:
     c68:	89 8d       	ldd	r24, Y+25	; 0x19
     c6a:	9a 8d       	ldd	r25, Y+26	; 0x1a

00000c6c <.L1^B5>:
     c6c:	01 97       	sbiw	r24, 0x01	; 1
     c6e:	f1 f7       	brne	.-4      	; 0xc6c <.L1^B5>
     c70:	9a 8f       	std	Y+26, r25	; 0x1a
     c72:	89 8f       	std	Y+25, r24	; 0x19

00000c74 <.Loc.257>:
	...

00000c76 <.LBE44>:
			__ticks --;
     c76:	8f 89       	ldd	r24, Y+23	; 0x17
     c78:	98 8d       	ldd	r25, Y+24	; 0x18
     c7a:	01 97       	sbiw	r24, 0x01	; 1
     c7c:	98 8f       	std	Y+24, r25	; 0x18
     c7e:	8f 8b       	std	Y+23, r24	; 0x17

00000c80 <.L60>:
		while(__ticks)
     c80:	8f 89       	ldd	r24, Y+23	; 0x17
     c82:	98 8d       	ldd	r25, Y+24	; 0x18
     c84:	00 97       	sbiw	r24, 0x00	; 0
     c86:	61 f7       	brne	.-40     	; 0xc60 <.L61>

00000c88 <.Loc.260>:
		return;
     c88:	1d c0       	rjmp	.+58     	; 0xcc4 <.L62>

00000c8a <.L84>:
		__ticks = (uint16_t)__tmp;
     c8a:	6b 89       	ldd	r22, Y+19	; 0x13
     c8c:	7c 89       	ldd	r23, Y+20	; 0x14
     c8e:	8d 89       	ldd	r24, Y+21	; 0x15
     c90:	9e 89       	ldd	r25, Y+22	; 0x16
     c92:	0e 94 68 08 	call	0x10d0	; 0x10d0 <__fixunssfsi>
     c96:	e9 96       	adiw	r28, 0x39	; 57
     c98:	6c af       	std	Y+60, r22	; 0x3c
     c9a:	7d af       	std	Y+61, r23	; 0x3d
     c9c:	8e af       	std	Y+62, r24	; 0x3e
     c9e:	9f af       	std	Y+63, r25	; 0x3f
     ca0:	e9 97       	sbiw	r28, 0x39	; 57
     ca2:	e7 96       	adiw	r28, 0x37	; 55
     ca4:	ee ad       	ldd	r30, Y+62	; 0x3e
     ca6:	ff ad       	ldd	r31, Y+63	; 0x3f
     ca8:	e7 97       	sbiw	r28, 0x37	; 55
     caa:	f8 8f       	std	Y+24, r31	; 0x18
     cac:	ef 8b       	std	Y+23, r30	; 0x17

00000cae <.L57>:
     cae:	8f 89       	ldd	r24, Y+23	; 0x17
     cb0:	98 8d       	ldd	r25, Y+24	; 0x18
     cb2:	9c 8f       	std	Y+28, r25	; 0x1c
     cb4:	8b 8f       	std	Y+27, r24	; 0x1b

00000cb6 <.LBB46>:
     cb6:	8b 8d       	ldd	r24, Y+27	; 0x1b
     cb8:	9c 8d       	ldd	r25, Y+28	; 0x1c

00000cba <.L1^B6>:
     cba:	01 97       	sbiw	r24, 0x01	; 1
     cbc:	f1 f7       	brne	.-4      	; 0xcba <.L1^B6>
     cbe:	9c 8f       	std	Y+28, r25	; 0x1c
     cc0:	8b 8f       	std	Y+27, r24	; 0x1b

00000cc2 <.Loc.263>:
	...

00000cc4 <.L62>:
        _delay_ms(500);
        PORTB &= ~(1<<PB0);
     cc4:	85 e2       	ldi	r24, 0x25	; 37
     cc6:	90 e0       	ldi	r25, 0x00	; 0
     cc8:	dc 01       	movw	r26, r24
     cca:	2c 91       	ld	r18, X

00000ccc <.Loc.265>:
     ccc:	85 e2       	ldi	r24, 0x25	; 37
     cce:	90 e0       	ldi	r25, 0x00	; 0

00000cd0 <.Loc.266>:
     cd0:	2e 7f       	andi	r18, 0xFE	; 254
     cd2:	fc 01       	movw	r30, r24
     cd4:	20 83       	st	Z, r18

00000cd6 <.Loc.267>:
        PORTB |= (1<<PB1);
     cd6:	85 e2       	ldi	r24, 0x25	; 37
     cd8:	90 e0       	ldi	r25, 0x00	; 0
     cda:	dc 01       	movw	r26, r24
     cdc:	2c 91       	ld	r18, X
     cde:	85 e2       	ldi	r24, 0x25	; 37
     ce0:	90 e0       	ldi	r25, 0x00	; 0

00000ce2 <.Loc.268>:
     ce2:	22 60       	ori	r18, 0x02	; 2
     ce4:	fc 01       	movw	r30, r24
     ce6:	20 83       	st	Z, r18
     ce8:	80 e0       	ldi	r24, 0x00	; 0
     cea:	90 e0       	ldi	r25, 0x00	; 0
     cec:	aa ef       	ldi	r26, 0xFA	; 250
     cee:	b3 e4       	ldi	r27, 0x43	; 67
     cf0:	89 83       	std	Y+1, r24	; 0x01
     cf2:	9a 83       	std	Y+2, r25	; 0x02
     cf4:	ab 83       	std	Y+3, r26	; 0x03
     cf6:	bc 83       	std	Y+4, r27	; 0x04

00000cf8 <.LBB48>:
	__tmp = ((F_CPU) / 4e3) * __ms;
     cf8:	20 e0       	ldi	r18, 0x00	; 0
     cfa:	30 e0       	ldi	r19, 0x00	; 0
     cfc:	4a e7       	ldi	r20, 0x7A	; 122
     cfe:	55 e4       	ldi	r21, 0x45	; 69
     d00:	69 81       	ldd	r22, Y+1	; 0x01
     d02:	7a 81       	ldd	r23, Y+2	; 0x02
     d04:	8b 81       	ldd	r24, Y+3	; 0x03
     d06:	9c 81       	ldd	r25, Y+4	; 0x04
     d08:	0e 94 4e 09 	call	0x129c	; 0x129c <__mulsf3>
     d0c:	ed 96       	adiw	r28, 0x3d	; 61
     d0e:	6c af       	std	Y+60, r22	; 0x3c
     d10:	7d af       	std	Y+61, r23	; 0x3d
     d12:	8e af       	std	Y+62, r24	; 0x3e
     d14:	9f af       	std	Y+63, r25	; 0x3f
     d16:	ed 97       	sbiw	r28, 0x3d	; 61
     d18:	ed 96       	adiw	r28, 0x3d	; 61
     d1a:	8c ad       	ldd	r24, Y+60	; 0x3c
     d1c:	9d ad       	ldd	r25, Y+61	; 0x3d
     d1e:	ae ad       	ldd	r26, Y+62	; 0x3e
     d20:	bf ad       	ldd	r27, Y+63	; 0x3f
     d22:	ed 97       	sbiw	r28, 0x3d	; 61
     d24:	8d 83       	std	Y+5, r24	; 0x05
     d26:	9e 83       	std	Y+6, r25	; 0x06
     d28:	af 83       	std	Y+7, r26	; 0x07
     d2a:	b8 87       	std	Y+8, r27	; 0x08

00000d2c <.Loc.270>:
	if (__tmp < 1.0)
     d2c:	20 e0       	ldi	r18, 0x00	; 0
     d2e:	30 e0       	ldi	r19, 0x00	; 0
     d30:	40 e8       	ldi	r20, 0x80	; 128
     d32:	5f e3       	ldi	r21, 0x3F	; 63
     d34:	6d 81       	ldd	r22, Y+5	; 0x05
     d36:	7e 81       	ldd	r23, Y+6	; 0x06
     d38:	8f 81       	ldd	r24, Y+7	; 0x07
     d3a:	98 85       	ldd	r25, Y+8	; 0x08
     d3c:	0e 94 63 08 	call	0x10c6	; 0x10c6 <__cmpsf2>
     d40:	88 23       	and	r24, r24
     d42:	2c f4       	brge	.+10     	; 0xd4e <.L85>

00000d44 <.Loc.271>:
		__ticks = 1;
     d44:	81 e0       	ldi	r24, 0x01	; 1
     d46:	90 e0       	ldi	r25, 0x00	; 0
     d48:	9a 87       	std	Y+10, r25	; 0x0a
     d4a:	89 87       	std	Y+9, r24	; 0x09
     d4c:	6e c0       	rjmp	.+220    	; 0xe2a <.L65>

00000d4e <.L85>:
	else if (__tmp > 65535)
     d4e:	20 e0       	ldi	r18, 0x00	; 0
     d50:	3f ef       	ldi	r19, 0xFF	; 255
     d52:	4f e7       	ldi	r20, 0x7F	; 127
     d54:	57 e4       	ldi	r21, 0x47	; 71
     d56:	6d 81       	ldd	r22, Y+5	; 0x05
     d58:	7e 81       	ldd	r23, Y+6	; 0x06
     d5a:	8f 81       	ldd	r24, Y+7	; 0x07
     d5c:	98 85       	ldd	r25, Y+8	; 0x08
     d5e:	0e 94 49 09 	call	0x1292	; 0x1292 <__gesf2>
     d62:	88 23       	and	r24, r24
     d64:	09 f0       	breq	.+2      	; 0xd68 <L0^A>

00000d66 <L0^A>:
     d66:	0c f4       	brge	.+2      	; 0xd6a <.Loc.273>

00000d68 <L0^A>:
     d68:	4a c0       	rjmp	.+148    	; 0xdfe <.L86>

00000d6a <.Loc.273>:
		__ticks = (uint16_t) (__ms * 10.0);
     d6a:	20 e0       	ldi	r18, 0x00	; 0
     d6c:	30 e0       	ldi	r19, 0x00	; 0
     d6e:	40 e2       	ldi	r20, 0x20	; 32
     d70:	51 e4       	ldi	r21, 0x41	; 65
     d72:	69 81       	ldd	r22, Y+1	; 0x01
     d74:	7a 81       	ldd	r23, Y+2	; 0x02
     d76:	8b 81       	ldd	r24, Y+3	; 0x03
     d78:	9c 81       	ldd	r25, Y+4	; 0x04
     d7a:	0e 94 4e 09 	call	0x129c	; 0x129c <__mulsf3>
     d7e:	c3 58       	subi	r28, 0x83	; 131
     d80:	df 4f       	sbci	r29, 0xFF	; 255
     d82:	68 83       	st	Y, r22
     d84:	79 83       	std	Y+1, r23	; 0x01
     d86:	8a 83       	std	Y+2, r24	; 0x02
     d88:	9b 83       	std	Y+3, r25	; 0x03
     d8a:	cd 57       	subi	r28, 0x7D	; 125
     d8c:	d0 40       	sbci	r29, 0x00	; 0
     d8e:	c3 58       	subi	r28, 0x83	; 131
     d90:	df 4f       	sbci	r29, 0xFF	; 255
     d92:	88 81       	ld	r24, Y
     d94:	99 81       	ldd	r25, Y+1	; 0x01
     d96:	aa 81       	ldd	r26, Y+2	; 0x02
     d98:	bb 81       	ldd	r27, Y+3	; 0x03
     d9a:	cd 57       	subi	r28, 0x7D	; 125
     d9c:	d0 40       	sbci	r29, 0x00	; 0
     d9e:	89 af       	std	Y+57, r24	; 0x39
     da0:	9a af       	std	Y+58, r25	; 0x3a
     da2:	ab af       	std	Y+59, r26	; 0x3b
     da4:	bc af       	std	Y+60, r27	; 0x3c

00000da6 <.Loc.274>:
     da6:	69 ad       	ldd	r22, Y+57	; 0x39
     da8:	7a ad       	ldd	r23, Y+58	; 0x3a
     daa:	8b ad       	ldd	r24, Y+59	; 0x3b
     dac:	9c ad       	ldd	r25, Y+60	; 0x3c
     dae:	0e 94 68 08 	call	0x10d0	; 0x10d0 <__fixunssfsi>
     db2:	cf 57       	subi	r28, 0x7F	; 127
     db4:	df 4f       	sbci	r29, 0xFF	; 255
     db6:	68 83       	st	Y, r22
     db8:	79 83       	std	Y+1, r23	; 0x01
     dba:	8a 83       	std	Y+2, r24	; 0x02
     dbc:	9b 83       	std	Y+3, r25	; 0x03
     dbe:	c1 58       	subi	r28, 0x81	; 129
     dc0:	d0 40       	sbci	r29, 0x00	; 0
     dc2:	cf 57       	subi	r28, 0x7F	; 127
     dc4:	df 4f       	sbci	r29, 0xFF	; 255
     dc6:	a8 81       	ld	r26, Y
     dc8:	b9 81       	ldd	r27, Y+1	; 0x01
     dca:	c1 58       	subi	r28, 0x81	; 129
     dcc:	d0 40       	sbci	r29, 0x00	; 0
     dce:	ba 87       	std	Y+10, r27	; 0x0a
     dd0:	a9 87       	std	Y+9, r26	; 0x09

00000dd2 <.Loc.275>:
		while(__ticks)
     dd2:	10 c0       	rjmp	.+32     	; 0xdf4 <.L68>

00000dd4 <.L69>:
     dd4:	80 e9       	ldi	r24, 0x90	; 144
     dd6:	91 e0       	ldi	r25, 0x01	; 1
     dd8:	9c 87       	std	Y+12, r25	; 0x0c
     dda:	8b 87       	std	Y+11, r24	; 0x0b

00000ddc <.LBB50>:
     ddc:	8b 85       	ldd	r24, Y+11	; 0x0b
     dde:	9c 85       	ldd	r25, Y+12	; 0x0c

00000de0 <.L1^B7>:
     de0:	01 97       	sbiw	r24, 0x01	; 1
     de2:	f1 f7       	brne	.-4      	; 0xde0 <.L1^B7>
     de4:	9c 87       	std	Y+12, r25	; 0x0c
     de6:	8b 87       	std	Y+11, r24	; 0x0b

00000de8 <.Loc.277>:
	...

00000dea <.LBE50>:
			__ticks --;
     dea:	89 85       	ldd	r24, Y+9	; 0x09
     dec:	9a 85       	ldd	r25, Y+10	; 0x0a
     dee:	01 97       	sbiw	r24, 0x01	; 1
     df0:	9a 87       	std	Y+10, r25	; 0x0a
     df2:	89 87       	std	Y+9, r24	; 0x09

00000df4 <.L68>:
		while(__ticks)
     df4:	89 85       	ldd	r24, Y+9	; 0x09
     df6:	9a 85       	ldd	r25, Y+10	; 0x0a
     df8:	00 97       	sbiw	r24, 0x00	; 0
     dfa:	61 f7       	brne	.-40     	; 0xdd4 <.L69>

00000dfc <.Loc.280>:
		return;
     dfc:	21 c0       	rjmp	.+66     	; 0xe40 <.L70>

00000dfe <.L86>:
		__ticks = (uint16_t)__tmp;
     dfe:	6d 81       	ldd	r22, Y+5	; 0x05
     e00:	7e 81       	ldd	r23, Y+6	; 0x06
     e02:	8f 81       	ldd	r24, Y+7	; 0x07
     e04:	98 85       	ldd	r25, Y+8	; 0x08
     e06:	0e 94 68 08 	call	0x10d0	; 0x10d0 <__fixunssfsi>
     e0a:	cb 57       	subi	r28, 0x7B	; 123
     e0c:	df 4f       	sbci	r29, 0xFF	; 255
     e0e:	68 83       	st	Y, r22
     e10:	79 83       	std	Y+1, r23	; 0x01
     e12:	8a 83       	std	Y+2, r24	; 0x02
     e14:	9b 83       	std	Y+3, r25	; 0x03
     e16:	c5 58       	subi	r28, 0x85	; 133
     e18:	d0 40       	sbci	r29, 0x00	; 0
     e1a:	cb 57       	subi	r28, 0x7B	; 123
     e1c:	df 4f       	sbci	r29, 0xFF	; 255
     e1e:	e8 81       	ld	r30, Y
     e20:	f9 81       	ldd	r31, Y+1	; 0x01
     e22:	c5 58       	subi	r28, 0x85	; 133
     e24:	d0 40       	sbci	r29, 0x00	; 0
     e26:	fa 87       	std	Y+10, r31	; 0x0a
     e28:	e9 87       	std	Y+9, r30	; 0x09

00000e2a <.L65>:
     e2a:	89 85       	ldd	r24, Y+9	; 0x09
     e2c:	9a 85       	ldd	r25, Y+10	; 0x0a
     e2e:	9e 87       	std	Y+14, r25	; 0x0e
     e30:	8d 87       	std	Y+13, r24	; 0x0d

00000e32 <.LBB52>:
     e32:	8d 85       	ldd	r24, Y+13	; 0x0d
     e34:	9e 85       	ldd	r25, Y+14	; 0x0e

00000e36 <.L1^B8>:
     e36:	01 97       	sbiw	r24, 0x01	; 1
     e38:	f1 f7       	brne	.-4      	; 0xe36 <.L1^B8>
     e3a:	9e 87       	std	Y+14, r25	; 0x0e
     e3c:	8d 87       	std	Y+13, r24	; 0x0d

00000e3e <.Loc.283>:
	...

00000e40 <.L70>:
        _delay_ms(500);
        PORTB &= ~(1<<PB0);
     e40:	85 e2       	ldi	r24, 0x25	; 37
     e42:	90 e0       	ldi	r25, 0x00	; 0
     e44:	dc 01       	movw	r26, r24
     e46:	2c 91       	ld	r18, X

00000e48 <.Loc.285>:
     e48:	85 e2       	ldi	r24, 0x25	; 37
     e4a:	90 e0       	ldi	r25, 0x00	; 0

00000e4c <.Loc.286>:
     e4c:	2e 7f       	andi	r18, 0xFE	; 254
     e4e:	fc 01       	movw	r30, r24
     e50:	20 83       	st	Z, r18

00000e52 <.Loc.287>:
        PORTB &= ~(1<<PB1);
     e52:	85 e2       	ldi	r24, 0x25	; 37
     e54:	90 e0       	ldi	r25, 0x00	; 0
     e56:	dc 01       	movw	r26, r24
     e58:	2c 91       	ld	r18, X

00000e5a <.Loc.288>:
     e5a:	85 e2       	ldi	r24, 0x25	; 37
     e5c:	90 e0       	ldi	r25, 0x00	; 0

00000e5e <.Loc.289>:
     e5e:	2d 7f       	andi	r18, 0xFD	; 253
     e60:	fc 01       	movw	r30, r24
     e62:	20 83       	st	Z, r18

00000e64 <.Loc.290>:
}
     e64:	00 00       	nop
     e66:	c8 57       	subi	r28, 0x78	; 120
     e68:	df 4f       	sbci	r29, 0xFF	; 255
     e6a:	0f b6       	in	r0, 0x3f	; 63
     e6c:	f8 94       	cli
     e6e:	de bf       	out	0x3e, r29	; 62
     e70:	0f be       	out	0x3f, r0	; 63
     e72:	cd bf       	out	0x3d, r28	; 61
     e74:	df 91       	pop	r29
     e76:	cf 91       	pop	r28
     e78:	08 95       	ret

00000e7a <stuurlinks>:

void stuurlinks()
{
     e7a:	cf 93       	push	r28
     e7c:	df 93       	push	r29
     e7e:	cd b7       	in	r28, 0x3d	; 61
     e80:	de b7       	in	r29, 0x3e	; 62

00000e82 <.Loc.292>:
    servo1_set_percentage(-20);
     e82:	8c ee       	ldi	r24, 0xEC	; 236
     e84:	0e 94 74 02 	call	0x4e8	; 0x4e8 <servo1_set_percentage>

00000e88 <.Loc.293>:
}
     e88:	00 00       	nop
     e8a:	df 91       	pop	r29
     e8c:	cf 91       	pop	r28
     e8e:	08 95       	ret

00000e90 <stuurrechts>:

void stuurrechts()
{
     e90:	cf 93       	push	r28
     e92:	df 93       	push	r29
     e94:	cd b7       	in	r28, 0x3d	; 61
     e96:	de b7       	in	r29, 0x3e	; 62

00000e98 <.Loc.295>:
   servo1_set_percentage(20);
     e98:	84 e1       	ldi	r24, 0x14	; 20
     e9a:	0e 94 74 02 	call	0x4e8	; 0x4e8 <servo1_set_percentage>

00000e9e <.Loc.296>:
}
     e9e:	00 00       	nop
     ea0:	df 91       	pop	r29
     ea2:	cf 91       	pop	r28
     ea4:	08 95       	ret

00000ea6 <stuurvooruit>:

void stuurvooruit()
{
     ea6:	cf 93       	push	r28
     ea8:	df 93       	push	r29
     eaa:	cd b7       	in	r28, 0x3d	; 61
     eac:	de b7       	in	r29, 0x3e	; 62

00000eae <.Loc.298>:
    servo1_set_percentage(0);
     eae:	80 e0       	ldi	r24, 0x00	; 0
     eb0:	0e 94 74 02 	call	0x4e8	; 0x4e8 <servo1_set_percentage>

00000eb4 <.Loc.299>:
}
     eb4:	00 00       	nop
     eb6:	df 91       	pop	r29
     eb8:	cf 91       	pop	r28
     eba:	08 95       	ret

00000ebc <grotebocht>:

void grotebocht()
{
     ebc:	cf 93       	push	r28
     ebe:	df 93       	push	r29
     ec0:	cd b7       	in	r28, 0x3d	; 61
     ec2:	de b7       	in	r29, 0x3e	; 62

00000ec4 <.Loc.301>:

}
     ec4:	00 00       	nop
     ec6:	df 91       	pop	r29
     ec8:	cf 91       	pop	r28
     eca:	08 95       	ret

00000ecc <main>:

int main(void)
{
     ecc:	cf 93       	push	r28
     ece:	df 93       	push	r29
     ed0:	cd b7       	in	r28, 0x3d	; 61
     ed2:	de b7       	in	r29, 0x3e	; 62

00000ed4 <.Loc.303>:
    init_h_bridge();    //d12,13
     ed4:	0e 94 53 01 	call	0x2a6	; 0x2a6 <init_h_bridge>

00000ed8 <.Loc.304>:
    init_servo();       //d11
     ed8:	0e 94 4a 02 	call	0x494	; 0x494 <init_servo>

00000edc <.Loc.305>:
    init();
     edc:	0e 94 e8 02 	call	0x5d0	; 0x5d0 <init>

00000ee0 <.L99>:

    {
        //sensoren checken


        switch(state)
     ee0:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <state>
     ee4:	90 91 01 02 	lds	r25, 0x0201	; 0x800201 <state+0x1>
     ee8:	85 30       	cpi	r24, 0x05	; 5
     eea:	91 05       	cpc	r25, r1
     eec:	09 f4       	brne	.+2      	; 0xef0 <L0^A+0x2>

00000eee <L0^A>:
     eee:	4c c0       	rjmp	.+152    	; 0xf88 <.L92>
     ef0:	85 30       	cpi	r24, 0x05	; 5
     ef2:	91 05       	cpc	r25, r1
     ef4:	09 f0       	breq	.+2      	; 0xef8 <L0^A+0x2>

00000ef6 <L0^A>:
     ef6:	a4 f7       	brge	.-24     	; 0xee0 <.L99>
     ef8:	84 30       	cpi	r24, 0x04	; 4
     efa:	91 05       	cpc	r25, r1
     efc:	e1 f1       	breq	.+120    	; 0xf76 <.L94>
     efe:	84 30       	cpi	r24, 0x04	; 4
     f00:	91 05       	cpc	r25, r1
     f02:	09 f0       	breq	.+2      	; 0xf06 <L0^A+0x2>

00000f04 <L0^A>:
     f04:	6c f7       	brge	.-38     	; 0xee0 <.L99>
     f06:	83 30       	cpi	r24, 0x03	; 3
     f08:	91 05       	cpc	r25, r1
     f0a:	71 f1       	breq	.+92     	; 0xf68 <.L95>
     f0c:	83 30       	cpi	r24, 0x03	; 3
     f0e:	91 05       	cpc	r25, r1
     f10:	09 f0       	breq	.+2      	; 0xf14 <L0^A+0x2>

00000f12 <L0^A>:
     f12:	34 f7       	brge	.-52     	; 0xee0 <.L99>
     f14:	82 30       	cpi	r24, 0x02	; 2
     f16:	91 05       	cpc	r25, r1
     f18:	e1 f0       	breq	.+56     	; 0xf52 <.L96>
     f1a:	82 30       	cpi	r24, 0x02	; 2
     f1c:	91 05       	cpc	r25, r1
     f1e:	09 f0       	breq	.+2      	; 0xf22 <L0^A+0x2>

00000f20 <L0^A>:
     f20:	fc f6       	brge	.-66     	; 0xee0 <.L99>
     f22:	00 97       	sbiw	r24, 0x00	; 0
     f24:	21 f0       	breq	.+8      	; 0xf2e <.L97>
     f26:	81 30       	cpi	r24, 0x01	; 1
     f28:	91 05       	cpc	r25, r1
     f2a:	41 f0       	breq	.+16     	; 0xf3c <.L98>
     f2c:	d9 cf       	rjmp	.-78     	; 0xee0 <.L99>

00000f2e <.L97>:

        {
        case(0):
            rem();
     f2e:	0e 94 33 04 	call	0x866	; 0x866 <rem>

00000f32 <.Loc.308>:
            sensoren();
     f32:	0e 94 80 03 	call	0x700	; 0x700 <sensoren>

00000f36 <.Loc.309>:
            veiligheidsensor();
     f36:	0e 94 c6 03 	call	0x78c	; 0x78c <veiligheidsensor>

00000f3a <.Loc.310>:
            break;
     f3a:	2f c0       	rjmp	.+94     	; 0xf9a <.L93>

00000f3c <.L98>:

        case(1):
            stuurvooruit();
     f3c:	0e 94 53 07 	call	0xea6	; 0xea6 <stuurvooruit>

00000f40 <.Loc.312>:
            vroem();
     f40:	0e 94 d2 03 	call	0x7a4	; 0x7a4 <vroem>

00000f44 <.Loc.313>:
            sensoren();
     f44:	0e 94 80 03 	call	0x700	; 0x700 <sensoren>

00000f48 <.Loc.314>:
            plantsensoraan();
     f48:	0e 94 dd 03 	call	0x7ba	; 0x7ba <plantsensoraan>

00000f4c <.Loc.315>:
            veiligheidsensor();//zij sensoren en sturen bijhouden
     f4c:	0e 94 c6 03 	call	0x78c	; 0x78c <veiligheidsensor>

00000f50 <.Loc.316>:
            break;
     f50:	24 c0       	rjmp	.+72     	; 0xf9a <.L93>

00000f52 <.L96>:

        case(2):
            rem();
     f52:	0e 94 33 04 	call	0x866	; 0x866 <rem>

00000f56 <.Loc.318>:
            alarm();
     f56:	0e 94 3e 04 	call	0x87c	; 0x87c <alarm>

00000f5a <.Loc.319>:
            vroem();
     f5a:	0e 94 d2 03 	call	0x7a4	; 0x7a4 <vroem>

00000f5e <.Loc.320>:
            sensoren();
     f5e:	0e 94 80 03 	call	0x700	; 0x700 <sensoren>

00000f62 <.Loc.321>:
            veiligheidsensor();
     f62:	0e 94 c6 03 	call	0x78c	; 0x78c <veiligheidsensor>

00000f66 <.Loc.322>:
            break;
     f66:	19 c0       	rjmp	.+50     	; 0xf9a <.L93>

00000f68 <.L95>:

        case(3):
            grotebocht();//bocht
     f68:	0e 94 5e 07 	call	0xebc	; 0xebc <grotebocht>

00000f6c <.Loc.324>:
            sensoren();
     f6c:	0e 94 80 03 	call	0x700	; 0x700 <sensoren>

00000f70 <.Loc.325>:
            veiligheidsensor();
     f70:	0e 94 c6 03 	call	0x78c	; 0x78c <veiligheidsensor>

00000f74 <.Loc.326>:
            break;
     f74:	12 c0       	rjmp	.+36     	; 0xf9a <.L93>

00000f76 <.L94>:

        case(4):
            stuurlinks();
     f76:	0e 94 3d 07 	call	0xe7a	; 0xe7a <stuurlinks>

00000f7a <.Loc.328>:
            sensoren();
     f7a:	0e 94 80 03 	call	0x700	; 0x700 <sensoren>

00000f7e <.Loc.329>:
            plantsensoraan();
     f7e:	0e 94 dd 03 	call	0x7ba	; 0x7ba <plantsensoraan>

00000f82 <.Loc.330>:
            veiligheidsensor();
     f82:	0e 94 c6 03 	call	0x78c	; 0x78c <veiligheidsensor>

00000f86 <.Loc.331>:
            break;
     f86:	09 c0       	rjmp	.+18     	; 0xf9a <.L93>

00000f88 <.L92>:

        case(5):
            stuurrechts();
     f88:	0e 94 48 07 	call	0xe90	; 0xe90 <stuurrechts>

00000f8c <.Loc.333>:
            sensoren();
     f8c:	0e 94 80 03 	call	0x700	; 0x700 <sensoren>

00000f90 <.Loc.334>:
            plantsensoraan();
     f90:	0e 94 dd 03 	call	0x7ba	; 0x7ba <plantsensoraan>

00000f94 <.Loc.335>:
            veiligheidsensor();
     f94:	0e 94 c6 03 	call	0x78c	; 0x78c <veiligheidsensor>

00000f98 <.Loc.336>:
	...

00000f9a <.L93>:
        switch(state)
     f9a:	a2 cf       	rjmp	.-188    	; 0xee0 <.L99>

00000f9c <__divmodhi4>:
     f9c:	97 fb       	bst	r25, 7

00000f9e <.Loc.1>:
     f9e:	07 2e       	mov	r0, r23

00000fa0 <.Loc.2>:
     fa0:	16 f4       	brtc	.+4      	; 0xfa6 <.L^B1>

00000fa2 <.Loc.3>:
     fa2:	00 94       	com	r0

00000fa4 <.Loc.4>:
     fa4:	07 d0       	rcall	.+14     	; 0xfb4 <__divmodhi4_neg1>

00000fa6 <.L^B1>:
     fa6:	77 fd       	sbrc	r23, 7

00000fa8 <.Loc.6>:
     fa8:	09 d0       	rcall	.+18     	; 0xfbc <__divmodhi4_neg2>

00000faa <.Loc.7>:
     faa:	0e 94 e2 07 	call	0xfc4	; 0xfc4 <__udivmodhi4>

00000fae <.Loc.8>:
     fae:	07 fc       	sbrc	r0, 7

00000fb0 <.Loc.9>:
     fb0:	05 d0       	rcall	.+10     	; 0xfbc <__divmodhi4_neg2>

00000fb2 <.Loc.10>:
     fb2:	3e f4       	brtc	.+14     	; 0xfc2 <__divmodhi4_exit>

00000fb4 <__divmodhi4_neg1>:
     fb4:	90 95       	com	r25

00000fb6 <.Loc.12>:
     fb6:	81 95       	neg	r24

00000fb8 <.Loc.13>:
     fb8:	9f 4f       	sbci	r25, 0xFF	; 255

00000fba <.Loc.14>:
     fba:	08 95       	ret

00000fbc <__divmodhi4_neg2>:
     fbc:	70 95       	com	r23

00000fbe <.Loc.16>:
     fbe:	61 95       	neg	r22

00000fc0 <.Loc.17>:
     fc0:	7f 4f       	sbci	r23, 0xFF	; 255

00000fc2 <__divmodhi4_exit>:
     fc2:	08 95       	ret

00000fc4 <__udivmodhi4>:
     fc4:	aa 1b       	sub	r26, r26

00000fc6 <.Loc.1>:
     fc6:	bb 1b       	sub	r27, r27

00000fc8 <.Loc.2>:
     fc8:	51 e1       	ldi	r21, 0x11	; 17

00000fca <.Loc.3>:
     fca:	07 c0       	rjmp	.+14     	; 0xfda <__udivmodhi4_ep>

00000fcc <__udivmodhi4_loop>:
     fcc:	aa 1f       	adc	r26, r26

00000fce <.Loc.5>:
     fce:	bb 1f       	adc	r27, r27

00000fd0 <.Loc.6>:
     fd0:	a6 17       	cp	r26, r22

00000fd2 <.Loc.7>:
     fd2:	b7 07       	cpc	r27, r23

00000fd4 <.Loc.8>:
     fd4:	10 f0       	brcs	.+4      	; 0xfda <__udivmodhi4_ep>

00000fd6 <.Loc.9>:
     fd6:	a6 1b       	sub	r26, r22

00000fd8 <.Loc.10>:
     fd8:	b7 0b       	sbc	r27, r23

00000fda <__udivmodhi4_ep>:
     fda:	88 1f       	adc	r24, r24

00000fdc <.Loc.12>:
     fdc:	99 1f       	adc	r25, r25

00000fde <.Loc.13>:
     fde:	5a 95       	dec	r21

00000fe0 <.Loc.14>:
     fe0:	a9 f7       	brne	.-22     	; 0xfcc <__udivmodhi4_loop>

00000fe2 <.Loc.15>:
     fe2:	80 95       	com	r24

00000fe4 <.Loc.16>:
     fe4:	90 95       	com	r25

00000fe6 <.Loc.17>:
     fe6:	bc 01       	movw	r22, r24

00000fe8 <.Loc.18>:
     fe8:	cd 01       	movw	r24, r26

00000fea <.Loc.19>:
     fea:	08 95       	ret

00000fec <__subsf3>:
     fec:	50 58       	subi	r21, 0x80	; 128

00000fee <__addsf3>:
     fee:	bb 27       	eor	r27, r27
     ff0:	aa 27       	eor	r26, r26
     ff2:	0e 94 0e 08 	call	0x101c	; 0x101c <__addsf3x>
     ff6:	0c 94 0f 09 	jmp	0x121e	; 0x121e <__fp_round>

00000ffa <.L^B1>:
     ffa:	0e 94 01 09 	call	0x1202	; 0x1202 <__fp_pscA>
     ffe:	38 f0       	brcs	.+14     	; 0x100e <.L_nan>
    1000:	0e 94 08 09 	call	0x1210	; 0x1210 <__fp_pscB>
    1004:	20 f0       	brcs	.+8      	; 0x100e <.L_nan>
    1006:	39 f4       	brne	.+14     	; 0x1016 <.L_inf>
    1008:	9f 3f       	cpi	r25, 0xFF	; 255
    100a:	19 f4       	brne	.+6      	; 0x1012 <.L_infB>
    100c:	26 f4       	brtc	.+8      	; 0x1016 <.L_inf>

0000100e <.L_nan>:
    100e:	0c 94 fe 08 	jmp	0x11fc	; 0x11fc <__fp_nan>

00001012 <.L_infB>:
    1012:	0e f4       	brtc	.+2      	; 0x1016 <.L_inf>
    1014:	e0 95       	com	r30

00001016 <.L_inf>:
    1016:	e7 fb       	bst	r30, 7
    1018:	0c 94 f8 08 	jmp	0x11f0	; 0x11f0 <__fp_inf>

0000101c <__addsf3x>:
    101c:	e9 2f       	mov	r30, r25
    101e:	0e 94 20 09 	call	0x1240	; 0x1240 <__fp_split3>
    1022:	58 f3       	brcs	.-42     	; 0xffa <.L^B1>
    1024:	ba 17       	cp	r27, r26
    1026:	62 07       	cpc	r22, r18
    1028:	73 07       	cpc	r23, r19
    102a:	84 07       	cpc	r24, r20
    102c:	95 07       	cpc	r25, r21
    102e:	20 f0       	brcs	.+8      	; 0x1038 <.L2^B1>
    1030:	79 f4       	brne	.+30     	; 0x1050 <.L4^B1>
    1032:	a6 f5       	brtc	.+104    	; 0x109c <.L_add>
    1034:	0c 94 42 09 	jmp	0x1284	; 0x1284 <__fp_zero>

00001038 <.L2^B1>:
    1038:	0e f4       	brtc	.+2      	; 0x103c <.L3^B1>
    103a:	e0 95       	com	r30

0000103c <.L3^B1>:
    103c:	0b 2e       	mov	r0, r27
    103e:	ba 2f       	mov	r27, r26
    1040:	a0 2d       	mov	r26, r0
    1042:	0b 01       	movw	r0, r22
    1044:	b9 01       	movw	r22, r18
    1046:	90 01       	movw	r18, r0
    1048:	0c 01       	movw	r0, r24
    104a:	ca 01       	movw	r24, r20
    104c:	a0 01       	movw	r20, r0
    104e:	11 24       	eor	r1, r1

00001050 <.L4^B1>:
    1050:	ff 27       	eor	r31, r31
    1052:	59 1b       	sub	r21, r25

00001054 <.L5^B1>:
    1054:	99 f0       	breq	.+38     	; 0x107c <.L7^B1>
    1056:	59 3f       	cpi	r21, 0xF9	; 249
    1058:	50 f4       	brcc	.+20     	; 0x106e <.L6^B1>
    105a:	50 3e       	cpi	r21, 0xE0	; 224
    105c:	68 f1       	brcs	.+90     	; 0x10b8 <.L_ret>
    105e:	1a 16       	cp	r1, r26
    1060:	f0 40       	sbci	r31, 0x00	; 0
    1062:	a2 2f       	mov	r26, r18
    1064:	23 2f       	mov	r18, r19
    1066:	34 2f       	mov	r19, r20
    1068:	44 27       	eor	r20, r20
    106a:	58 5f       	subi	r21, 0xF8	; 248
    106c:	f3 cf       	rjmp	.-26     	; 0x1054 <.L5^B1>

0000106e <.L6^B1>:
    106e:	46 95       	lsr	r20
    1070:	37 95       	ror	r19
    1072:	27 95       	ror	r18
    1074:	a7 95       	ror	r26
    1076:	f0 40       	sbci	r31, 0x00	; 0
    1078:	53 95       	inc	r21
    107a:	c9 f7       	brne	.-14     	; 0x106e <.L6^B1>

0000107c <.L7^B1>:
    107c:	7e f4       	brtc	.+30     	; 0x109c <.L_add>
    107e:	1f 16       	cp	r1, r31
    1080:	ba 0b       	sbc	r27, r26
    1082:	62 0b       	sbc	r22, r18
    1084:	73 0b       	sbc	r23, r19
    1086:	84 0b       	sbc	r24, r20
    1088:	ba f0       	brmi	.+46     	; 0x10b8 <.L_ret>

0000108a <.L8^B1>:
    108a:	91 50       	subi	r25, 0x01	; 1
    108c:	a1 f0       	breq	.+40     	; 0x10b6 <.L9^B1>
    108e:	ff 0f       	add	r31, r31
    1090:	bb 1f       	adc	r27, r27
    1092:	66 1f       	adc	r22, r22
    1094:	77 1f       	adc	r23, r23
    1096:	88 1f       	adc	r24, r24
    1098:	c2 f7       	brpl	.-16     	; 0x108a <.L8^B1>
    109a:	0e c0       	rjmp	.+28     	; 0x10b8 <.L_ret>

0000109c <.L_add>:
    109c:	ba 0f       	add	r27, r26
    109e:	62 1f       	adc	r22, r18
    10a0:	73 1f       	adc	r23, r19
    10a2:	84 1f       	adc	r24, r20
    10a4:	48 f4       	brcc	.+18     	; 0x10b8 <.L_ret>
    10a6:	87 95       	ror	r24
    10a8:	77 95       	ror	r23
    10aa:	67 95       	ror	r22
    10ac:	b7 95       	ror	r27
    10ae:	f7 95       	ror	r31
    10b0:	9e 3f       	cpi	r25, 0xFE	; 254
    10b2:	08 f0       	brcs	.+2      	; 0x10b6 <.L9^B1>
    10b4:	b0 cf       	rjmp	.-160    	; 0x1016 <.L_inf>

000010b6 <.L9^B1>:
    10b6:	93 95       	inc	r25

000010b8 <.L_ret>:
    10b8:	88 0f       	add	r24, r24
    10ba:	08 f0       	brcs	.+2      	; 0x10be <.L1^B1>
    10bc:	99 27       	eor	r25, r25

000010be <.L1^B1>:
    10be:	ee 0f       	add	r30, r30
    10c0:	97 95       	ror	r25
    10c2:	87 95       	ror	r24
    10c4:	08 95       	ret

000010c6 <__cmpsf2>:
    10c6:	0e 94 d4 08 	call	0x11a8	; 0x11a8 <__fp_cmp>
    10ca:	08 f4       	brcc	.+2      	; 0x10ce <.L1^B1>
    10cc:	81 e0       	ldi	r24, 0x01	; 1

000010ce <.L1^B1>:
    10ce:	08 95       	ret

000010d0 <__fixunssfsi>:
    10d0:	0e 94 28 09 	call	0x1250	; 0x1250 <__fp_splitA>
    10d4:	88 f0       	brcs	.+34     	; 0x10f8 <.L_err>
    10d6:	9f 57       	subi	r25, 0x7F	; 127
    10d8:	98 f0       	brcs	.+38     	; 0x1100 <.L_zr>
    10da:	b9 2f       	mov	r27, r25
    10dc:	99 27       	eor	r25, r25
    10de:	b7 51       	subi	r27, 0x17	; 23
    10e0:	b0 f0       	brcs	.+44     	; 0x110e <.L4^B1>
    10e2:	e1 f0       	breq	.+56     	; 0x111c <.L_sign>

000010e4 <.L1^B1>:
    10e4:	66 0f       	add	r22, r22
    10e6:	77 1f       	adc	r23, r23
    10e8:	88 1f       	adc	r24, r24
    10ea:	99 1f       	adc	r25, r25
    10ec:	1a f0       	brmi	.+6      	; 0x10f4 <.L2^B1>
    10ee:	ba 95       	dec	r27
    10f0:	c9 f7       	brne	.-14     	; 0x10e4 <.L1^B1>
    10f2:	14 c0       	rjmp	.+40     	; 0x111c <.L_sign>

000010f4 <.L2^B1>:
    10f4:	b1 30       	cpi	r27, 0x01	; 1
    10f6:	91 f0       	breq	.+36     	; 0x111c <.L_sign>

000010f8 <.L_err>:
    10f8:	0e 94 42 09 	call	0x1284	; 0x1284 <__fp_zero>
    10fc:	b1 e0       	ldi	r27, 0x01	; 1
    10fe:	08 95       	ret

00001100 <.L_zr>:
    1100:	0c 94 42 09 	jmp	0x1284	; 0x1284 <__fp_zero>

00001104 <.L3^B1>:
    1104:	67 2f       	mov	r22, r23
    1106:	78 2f       	mov	r23, r24
    1108:	88 27       	eor	r24, r24
    110a:	b8 5f       	subi	r27, 0xF8	; 248
    110c:	39 f0       	breq	.+14     	; 0x111c <.L_sign>

0000110e <.L4^B1>:
    110e:	b9 3f       	cpi	r27, 0xF9	; 249
    1110:	cc f3       	brlt	.-14     	; 0x1104 <.L3^B1>

00001112 <.L5^B1>:
    1112:	86 95       	lsr	r24
    1114:	77 95       	ror	r23
    1116:	67 95       	ror	r22
    1118:	b3 95       	inc	r27
    111a:	d9 f7       	brne	.-10     	; 0x1112 <.L5^B1>

0000111c <.L_sign>:
    111c:	3e f4       	brtc	.+14     	; 0x112c <.L6^B1>
    111e:	90 95       	com	r25
    1120:	80 95       	com	r24
    1122:	70 95       	com	r23
    1124:	61 95       	neg	r22
    1126:	7f 4f       	sbci	r23, 0xFF	; 255
    1128:	8f 4f       	sbci	r24, 0xFF	; 255
    112a:	9f 4f       	sbci	r25, 0xFF	; 255

0000112c <.L6^B1>:
    112c:	08 95       	ret

0000112e <__floatunsisf>:
    112e:	e8 94       	clt
    1130:	09 c0       	rjmp	.+18     	; 0x1144 <.L1^B1>

00001132 <__floatsisf>:
    1132:	97 fb       	bst	r25, 7
    1134:	3e f4       	brtc	.+14     	; 0x1144 <.L1^B1>
    1136:	90 95       	com	r25
    1138:	80 95       	com	r24
    113a:	70 95       	com	r23
    113c:	61 95       	neg	r22
    113e:	7f 4f       	sbci	r23, 0xFF	; 255
    1140:	8f 4f       	sbci	r24, 0xFF	; 255
    1142:	9f 4f       	sbci	r25, 0xFF	; 255

00001144 <.L1^B1>:
    1144:	99 23       	and	r25, r25
    1146:	a9 f0       	breq	.+42     	; 0x1172 <.L4^B1>
    1148:	f9 2f       	mov	r31, r25
    114a:	96 e9       	ldi	r25, 0x96	; 150
    114c:	bb 27       	eor	r27, r27

0000114e <.L2^B1>:
    114e:	93 95       	inc	r25
    1150:	f6 95       	lsr	r31
    1152:	87 95       	ror	r24
    1154:	77 95       	ror	r23
    1156:	67 95       	ror	r22
    1158:	b7 95       	ror	r27
    115a:	f1 11       	cpse	r31, r1
    115c:	f8 cf       	rjmp	.-16     	; 0x114e <.L2^B1>
    115e:	fa f4       	brpl	.+62     	; 0x119e <.L_pack>
    1160:	bb 0f       	add	r27, r27
    1162:	11 f4       	brne	.+4      	; 0x1168 <.L3^B1>
    1164:	60 ff       	sbrs	r22, 0
    1166:	1b c0       	rjmp	.+54     	; 0x119e <.L_pack>

00001168 <.L3^B1>:
    1168:	6f 5f       	subi	r22, 0xFF	; 255
    116a:	7f 4f       	sbci	r23, 0xFF	; 255
    116c:	8f 4f       	sbci	r24, 0xFF	; 255
    116e:	9f 4f       	sbci	r25, 0xFF	; 255
    1170:	16 c0       	rjmp	.+44     	; 0x119e <.L_pack>

00001172 <.L4^B1>:
    1172:	88 23       	and	r24, r24
    1174:	11 f0       	breq	.+4      	; 0x117a <.L5^B1>
    1176:	96 e9       	ldi	r25, 0x96	; 150
    1178:	11 c0       	rjmp	.+34     	; 0x119c <.L8^B1>

0000117a <.L5^B1>:
    117a:	77 23       	and	r23, r23
    117c:	21 f0       	breq	.+8      	; 0x1186 <.L6^B1>
    117e:	9e e8       	ldi	r25, 0x8E	; 142
    1180:	87 2f       	mov	r24, r23
    1182:	76 2f       	mov	r23, r22
    1184:	05 c0       	rjmp	.+10     	; 0x1190 <.L7^B1>

00001186 <.L6^B1>:
    1186:	66 23       	and	r22, r22
    1188:	71 f0       	breq	.+28     	; 0x11a6 <.L9^B1>
    118a:	96 e8       	ldi	r25, 0x86	; 134
    118c:	86 2f       	mov	r24, r22
    118e:	70 e0       	ldi	r23, 0x00	; 0

00001190 <.L7^B1>:
    1190:	60 e0       	ldi	r22, 0x00	; 0
    1192:	2a f0       	brmi	.+10     	; 0x119e <.L_pack>

00001194 <.L10^B1>:
    1194:	9a 95       	dec	r25
    1196:	66 0f       	add	r22, r22
    1198:	77 1f       	adc	r23, r23
    119a:	88 1f       	adc	r24, r24

0000119c <.L8^B1>:
    119c:	da f7       	brpl	.-10     	; 0x1194 <.L10^B1>

0000119e <.L_pack>:
    119e:	88 0f       	add	r24, r24
    11a0:	96 95       	lsr	r25
    11a2:	87 95       	ror	r24
    11a4:	97 f9       	bld	r25, 7

000011a6 <.L9^B1>:
    11a6:	08 95       	ret

000011a8 <__fp_cmp>:
    11a8:	99 0f       	add	r25, r25
    11aa:	00 08       	sbc	r0, r0
    11ac:	55 0f       	add	r21, r21
    11ae:	aa 0b       	sbc	r26, r26
    11b0:	e0 e8       	ldi	r30, 0x80	; 128
    11b2:	fe ef       	ldi	r31, 0xFE	; 254
    11b4:	16 16       	cp	r1, r22
    11b6:	17 06       	cpc	r1, r23
    11b8:	e8 07       	cpc	r30, r24
    11ba:	f9 07       	cpc	r31, r25
    11bc:	c0 f0       	brcs	.+48     	; 0x11ee <.L9^B1>
    11be:	12 16       	cp	r1, r18
    11c0:	13 06       	cpc	r1, r19
    11c2:	e4 07       	cpc	r30, r20
    11c4:	f5 07       	cpc	r31, r21
    11c6:	98 f0       	brcs	.+38     	; 0x11ee <.L9^B1>
    11c8:	62 1b       	sub	r22, r18
    11ca:	73 0b       	sbc	r23, r19
    11cc:	84 0b       	sbc	r24, r20
    11ce:	95 0b       	sbc	r25, r21
    11d0:	39 f4       	brne	.+14     	; 0x11e0 <.L1^B1>
    11d2:	0a 26       	eor	r0, r26
    11d4:	61 f0       	breq	.+24     	; 0x11ee <.L9^B1>
    11d6:	23 2b       	or	r18, r19
    11d8:	24 2b       	or	r18, r20
    11da:	25 2b       	or	r18, r21
    11dc:	21 f4       	brne	.+8      	; 0x11e6 <.L2^B1>
    11de:	08 95       	ret

000011e0 <.L1^B1>:
    11e0:	0a 26       	eor	r0, r26
    11e2:	09 f4       	brne	.+2      	; 0x11e6 <.L2^B1>
    11e4:	a1 40       	sbci	r26, 0x01	; 1

000011e6 <.L2^B1>:
    11e6:	a6 95       	lsr	r26
    11e8:	8f ef       	ldi	r24, 0xFF	; 255
    11ea:	81 1d       	adc	r24, r1
    11ec:	81 1d       	adc	r24, r1

000011ee <.L9^B1>:
    11ee:	08 95       	ret

000011f0 <__fp_inf>:
    11f0:	97 f9       	bld	r25, 7
    11f2:	9f 67       	ori	r25, 0x7F	; 127
    11f4:	80 e8       	ldi	r24, 0x80	; 128
    11f6:	70 e0       	ldi	r23, 0x00	; 0
    11f8:	60 e0       	ldi	r22, 0x00	; 0
    11fa:	08 95       	ret

000011fc <__fp_nan>:
    11fc:	9f ef       	ldi	r25, 0xFF	; 255
    11fe:	80 ec       	ldi	r24, 0xC0	; 192
    1200:	08 95       	ret

00001202 <__fp_pscA>:
    1202:	00 24       	eor	r0, r0
    1204:	0a 94       	dec	r0
    1206:	16 16       	cp	r1, r22
    1208:	17 06       	cpc	r1, r23
    120a:	18 06       	cpc	r1, r24
    120c:	09 06       	cpc	r0, r25
    120e:	08 95       	ret

00001210 <__fp_pscB>:
    1210:	00 24       	eor	r0, r0
    1212:	0a 94       	dec	r0
    1214:	12 16       	cp	r1, r18
    1216:	13 06       	cpc	r1, r19
    1218:	14 06       	cpc	r1, r20
    121a:	05 06       	cpc	r0, r21
    121c:	08 95       	ret

0000121e <__fp_round>:
    121e:	09 2e       	mov	r0, r25
    1220:	03 94       	inc	r0
    1222:	00 0c       	add	r0, r0
    1224:	11 f4       	brne	.+4      	; 0x122a <.L1^B1>
    1226:	88 23       	and	r24, r24
    1228:	52 f0       	brmi	.+20     	; 0x123e <.L3^B1>

0000122a <.L1^B1>:
    122a:	bb 0f       	add	r27, r27
    122c:	40 f4       	brcc	.+16     	; 0x123e <.L3^B1>
    122e:	bf 2b       	or	r27, r31
    1230:	11 f4       	brne	.+4      	; 0x1236 <.L2^B1>
    1232:	60 ff       	sbrs	r22, 0
    1234:	04 c0       	rjmp	.+8      	; 0x123e <.L3^B1>

00001236 <.L2^B1>:
    1236:	6f 5f       	subi	r22, 0xFF	; 255
    1238:	7f 4f       	sbci	r23, 0xFF	; 255
    123a:	8f 4f       	sbci	r24, 0xFF	; 255
    123c:	9f 4f       	sbci	r25, 0xFF	; 255

0000123e <.L3^B1>:
    123e:	08 95       	ret

00001240 <__fp_split3>:
    1240:	57 fd       	sbrc	r21, 7
    1242:	90 58       	subi	r25, 0x80	; 128
    1244:	44 0f       	add	r20, r20
    1246:	55 1f       	adc	r21, r21
    1248:	59 f0       	breq	.+22     	; 0x1260 <.L4^B1>
    124a:	5f 3f       	cpi	r21, 0xFF	; 255
    124c:	71 f0       	breq	.+28     	; 0x126a <.L5^B1>

0000124e <.L1^B1>:
    124e:	47 95       	ror	r20

00001250 <__fp_splitA>:
    1250:	88 0f       	add	r24, r24
    1252:	97 fb       	bst	r25, 7
    1254:	99 1f       	adc	r25, r25
    1256:	61 f0       	breq	.+24     	; 0x1270 <.L6^B1>
    1258:	9f 3f       	cpi	r25, 0xFF	; 255
    125a:	79 f0       	breq	.+30     	; 0x127a <.L7^B1>

0000125c <.L3^B1>:
    125c:	87 95       	ror	r24
    125e:	08 95       	ret

00001260 <.L4^B1>:
    1260:	12 16       	cp	r1, r18
    1262:	13 06       	cpc	r1, r19
    1264:	14 06       	cpc	r1, r20
    1266:	55 1f       	adc	r21, r21
    1268:	f2 cf       	rjmp	.-28     	; 0x124e <.L1^B1>

0000126a <.L5^B1>:
    126a:	46 95       	lsr	r20
    126c:	f1 df       	rcall	.-30     	; 0x1250 <__fp_splitA>
    126e:	08 c0       	rjmp	.+16     	; 0x1280 <.L8^B1>

00001270 <.L6^B1>:
    1270:	16 16       	cp	r1, r22
    1272:	17 06       	cpc	r1, r23
    1274:	18 06       	cpc	r1, r24
    1276:	99 1f       	adc	r25, r25
    1278:	f1 cf       	rjmp	.-30     	; 0x125c <.L3^B1>

0000127a <.L7^B1>:
    127a:	86 95       	lsr	r24
    127c:	71 05       	cpc	r23, r1
    127e:	61 05       	cpc	r22, r1

00001280 <.L8^B1>:
    1280:	08 94       	sec
    1282:	08 95       	ret

00001284 <__fp_zero>:
    1284:	e8 94       	clt

00001286 <__fp_szero>:
    1286:	bb 27       	eor	r27, r27
    1288:	66 27       	eor	r22, r22
    128a:	77 27       	eor	r23, r23
    128c:	cb 01       	movw	r24, r22
    128e:	97 f9       	bld	r25, 7
    1290:	08 95       	ret

00001292 <__gesf2>:
    1292:	0e 94 d4 08 	call	0x11a8	; 0x11a8 <__fp_cmp>
    1296:	08 f4       	brcc	.+2      	; 0x129a <.L1^B1>
    1298:	8f ef       	ldi	r24, 0xFF	; 255

0000129a <.L1^B1>:
    129a:	08 95       	ret

0000129c <__mulsf3>:
    129c:	0e 94 61 09 	call	0x12c2	; 0x12c2 <__mulsf3x>
    12a0:	0c 94 0f 09 	jmp	0x121e	; 0x121e <__fp_round>

000012a4 <.L^B1>:
    12a4:	0e 94 01 09 	call	0x1202	; 0x1202 <__fp_pscA>
    12a8:	38 f0       	brcs	.+14     	; 0x12b8 <.L1^B1>
    12aa:	0e 94 08 09 	call	0x1210	; 0x1210 <__fp_pscB>
    12ae:	20 f0       	brcs	.+8      	; 0x12b8 <.L1^B1>
    12b0:	95 23       	and	r25, r21
    12b2:	11 f0       	breq	.+4      	; 0x12b8 <.L1^B1>
    12b4:	0c 94 f8 08 	jmp	0x11f0	; 0x11f0 <__fp_inf>

000012b8 <.L1^B1>:
    12b8:	0c 94 fe 08 	jmp	0x11fc	; 0x11fc <__fp_nan>

000012bc <.L2^B1>:
    12bc:	11 24       	eor	r1, r1
    12be:	0c 94 43 09 	jmp	0x1286	; 0x1286 <__fp_szero>

000012c2 <__mulsf3x>:
    12c2:	0e 94 20 09 	call	0x1240	; 0x1240 <__fp_split3>
    12c6:	70 f3       	brcs	.-36     	; 0x12a4 <.L^B1>

000012c8 <__mulsf3_pse>:
    12c8:	95 9f       	mul	r25, r21
    12ca:	c1 f3       	breq	.-16     	; 0x12bc <.L2^B1>
    12cc:	95 0f       	add	r25, r21
    12ce:	50 e0       	ldi	r21, 0x00	; 0
    12d0:	55 1f       	adc	r21, r21
    12d2:	62 9f       	mul	r22, r18
    12d4:	f0 01       	movw	r30, r0
    12d6:	72 9f       	mul	r23, r18
    12d8:	bb 27       	eor	r27, r27
    12da:	f0 0d       	add	r31, r0
    12dc:	b1 1d       	adc	r27, r1
    12de:	63 9f       	mul	r22, r19
    12e0:	aa 27       	eor	r26, r26
    12e2:	f0 0d       	add	r31, r0
    12e4:	b1 1d       	adc	r27, r1
    12e6:	aa 1f       	adc	r26, r26
    12e8:	64 9f       	mul	r22, r20
    12ea:	66 27       	eor	r22, r22
    12ec:	b0 0d       	add	r27, r0
    12ee:	a1 1d       	adc	r26, r1
    12f0:	66 1f       	adc	r22, r22
    12f2:	82 9f       	mul	r24, r18
    12f4:	22 27       	eor	r18, r18
    12f6:	b0 0d       	add	r27, r0
    12f8:	a1 1d       	adc	r26, r1
    12fa:	62 1f       	adc	r22, r18
    12fc:	73 9f       	mul	r23, r19
    12fe:	b0 0d       	add	r27, r0
    1300:	a1 1d       	adc	r26, r1
    1302:	62 1f       	adc	r22, r18
    1304:	83 9f       	mul	r24, r19
    1306:	a0 0d       	add	r26, r0
    1308:	61 1d       	adc	r22, r1
    130a:	22 1f       	adc	r18, r18
    130c:	74 9f       	mul	r23, r20
    130e:	33 27       	eor	r19, r19
    1310:	a0 0d       	add	r26, r0
    1312:	61 1d       	adc	r22, r1
    1314:	23 1f       	adc	r18, r19
    1316:	84 9f       	mul	r24, r20
    1318:	60 0d       	add	r22, r0
    131a:	21 1d       	adc	r18, r1
    131c:	82 2f       	mov	r24, r18
    131e:	76 2f       	mov	r23, r22
    1320:	6a 2f       	mov	r22, r26
    1322:	11 24       	eor	r1, r1
    1324:	9f 57       	subi	r25, 0x7F	; 127
    1326:	50 40       	sbci	r21, 0x00	; 0
    1328:	9a f0       	brmi	.+38     	; 0x1350 <.L13^B1>
    132a:	f1 f0       	breq	.+60     	; 0x1368 <.L15^B1>

0000132c <.L10^B1>:
    132c:	88 23       	and	r24, r24
    132e:	4a f0       	brmi	.+18     	; 0x1342 <.L11^B1>
    1330:	ee 0f       	add	r30, r30
    1332:	ff 1f       	adc	r31, r31
    1334:	bb 1f       	adc	r27, r27
    1336:	66 1f       	adc	r22, r22
    1338:	77 1f       	adc	r23, r23
    133a:	88 1f       	adc	r24, r24
    133c:	91 50       	subi	r25, 0x01	; 1
    133e:	50 40       	sbci	r21, 0x00	; 0
    1340:	a9 f7       	brne	.-22     	; 0x132c <.L10^B1>

00001342 <.L11^B1>:
    1342:	9e 3f       	cpi	r25, 0xFE	; 254
    1344:	51 05       	cpc	r21, r1
    1346:	80 f0       	brcs	.+32     	; 0x1368 <.L15^B1>
    1348:	0c 94 f8 08 	jmp	0x11f0	; 0x11f0 <__fp_inf>

0000134c <.L12^B1>:
    134c:	0c 94 43 09 	jmp	0x1286	; 0x1286 <__fp_szero>

00001350 <.L13^B1>:
    1350:	5f 3f       	cpi	r21, 0xFF	; 255
    1352:	e4 f3       	brlt	.-8      	; 0x134c <.L12^B1>
    1354:	98 3e       	cpi	r25, 0xE8	; 232
    1356:	d4 f3       	brlt	.-12     	; 0x134c <.L12^B1>

00001358 <.L14^B1>:
    1358:	86 95       	lsr	r24
    135a:	77 95       	ror	r23
    135c:	67 95       	ror	r22
    135e:	b7 95       	ror	r27
    1360:	f7 95       	ror	r31
    1362:	e7 95       	ror	r30
    1364:	9f 5f       	subi	r25, 0xFF	; 255
    1366:	c1 f7       	brne	.-16     	; 0x1358 <.L14^B1>

00001368 <.L15^B1>:
    1368:	fe 2b       	or	r31, r30
    136a:	88 0f       	add	r24, r24
    136c:	91 1d       	adc	r25, r1
    136e:	96 95       	lsr	r25
    1370:	87 95       	ror	r24
    1372:	97 f9       	bld	r25, 7
    1374:	08 95       	ret

00001376 <_exit>:
    1376:	f8 94       	cli

00001378 <__stop_program>:
    1378:	ff cf       	rjmp	.-2      	; 0x1378 <__stop_program>
