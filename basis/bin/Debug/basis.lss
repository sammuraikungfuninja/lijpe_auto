
bin\Debug\basis.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800200  00001338  000013ec  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001338  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000006  00800200  00800200  000013ec  2**0
                  ALLOC
  3 .fuse         00000003  00820000  00820000  000013ec  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  4 .comment      00000012  00000000  00000000  000013ef  2**0
                  CONTENTS, READONLY
  5 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001404  2**2
                  CONTENTS, READONLY, OCTETS
  6 .debug_aranges 000000b8  00000000  00000000  00001448  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  7 .debug_info   000010f1  00000000  00000000  00001500  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  8 .debug_abbrev 00000d95  00000000  00000000  000025f1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  9 .debug_line   00000d02  00000000  00000000  00003386  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_frame  00000354  00000000  00000000  00004088  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_str    00000631  00000000  00000000  000043dc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_line_str 000001b8  00000000  00000000  00004a0d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 72 00 	jmp	0xe4	; 0xe4 <__ctors_end>
       4:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
       8:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
       c:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      10:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      14:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      18:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      1c:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      20:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      24:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      28:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      2c:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      30:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      34:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      38:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      3c:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      40:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      44:	0c 94 11 02 	jmp	0x422	; 0x422 <__vector_17>
      48:	0c 94 39 02 	jmp	0x472	; 0x472 <__vector_18>
      4c:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      50:	0c 94 e0 01 	jmp	0x3c0	; 0x3c0 <__vector_20>
      54:	0c 94 f7 00 	jmp	0x1ee	; 0x1ee <__vector_21>
      58:	0c 94 25 01 	jmp	0x24a	; 0x24a <__vector_22>
      5c:	0c 94 88 00 	jmp	0x110	; 0x110 <__vector_23>
      60:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      64:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      68:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      6c:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      70:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      74:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      78:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      7c:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      80:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      84:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      88:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      8c:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      90:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      94:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      98:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      9c:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      a0:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      a4:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      a8:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      ac:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      b0:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      b4:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      b8:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      bc:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      c0:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      c4:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      c8:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      cc:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      d0:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      d4:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      d8:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      dc:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
      e0:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>

000000e4 <__ctors_end>:
      e4:	11 24       	eor	r1, r1
      e6:	1f be       	out	0x3f, r1	; 63
      e8:	cf ef       	ldi	r28, 0xFF	; 255
      ea:	d1 e2       	ldi	r29, 0x21	; 33
      ec:	de bf       	out	0x3e, r29	; 62
      ee:	cd bf       	out	0x3d, r28	; 61
      f0:	00 e0       	ldi	r16, 0x00	; 0
      f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_clear_bss>:
      f4:	22 e0       	ldi	r18, 0x02	; 2

000000f6 <.Loc.1>:
      f6:	a0 e0       	ldi	r26, 0x00	; 0

000000f8 <.Loc.2>:
      f8:	b2 e0       	ldi	r27, 0x02	; 2

000000fa <.Loc.3>:
      fa:	01 c0       	rjmp	.+2      	; 0xfe <.Loc.5>

000000fc <.Loc.4>:
      fc:	1d 92       	st	X+, r1

000000fe <.Loc.5>:
      fe:	a6 30       	cpi	r26, 0x06	; 6

00000100 <.Loc.6>:
     100:	b2 07       	cpc	r27, r18

00000102 <.Loc.7>:
     102:	e1 f7       	brne	.-8      	; 0xfc <.Loc.4>

00000104 <L0^A>:
     104:	0e 94 12 07 	call	0xe24	; 0xe24 <main>
     108:	0c 94 9a 09 	jmp	0x1334	; 0x1334 <_exit>

0000010c <__bad_interrupt>:
     10c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000110 <__vector_23>:
#include <avr/io.h>
#include <avr/interrupt.h>
#include "h_bridge.h"

ISR(TIMER0_OVF_vect)
{
     110:	1f 92       	push	r1
     112:	0f 92       	push	r0
     114:	0f b6       	in	r0, 0x3f	; 63
     116:	0f 92       	push	r0
     118:	11 24       	eor	r1, r1
     11a:	0b b6       	in	r0, 0x3b	; 59
     11c:	0f 92       	push	r0
     11e:	2f 93       	push	r18
     120:	8f 93       	push	r24
     122:	9f 93       	push	r25
     124:	ef 93       	push	r30
     126:	ff 93       	push	r31
     128:	cf 93       	push	r28
     12a:	df 93       	push	r29
     12c:	cd b7       	in	r28, 0x3d	; 61
     12e:	de b7       	in	r29, 0x3e	; 62

00000130 <.Loc.1>:
	if (OCR0A == 0 && OCR0B == 0)
     130:	87 e4       	ldi	r24, 0x47	; 71
     132:	90 e0       	ldi	r25, 0x00	; 0
     134:	fc 01       	movw	r30, r24
     136:	80 81       	ld	r24, Z

00000138 <.Loc.2>:
     138:	88 23       	and	r24, r24
     13a:	c9 f4       	brne	.+50     	; 0x16e <.L2>

0000013c <.Loc.3>:
     13c:	88 e4       	ldi	r24, 0x48	; 72
     13e:	90 e0       	ldi	r25, 0x00	; 0
     140:	fc 01       	movw	r30, r24
     142:	80 81       	ld	r24, Z

00000144 <.Loc.4>:
     144:	88 23       	and	r24, r24
     146:	99 f4       	brne	.+38     	; 0x16e <.L2>

00000148 <.Loc.5>:
	{
		PORT_RPWM &= ~(1<<PIN_RPWM);
     148:	85 e2       	ldi	r24, 0x25	; 37
     14a:	90 e0       	ldi	r25, 0x00	; 0
     14c:	fc 01       	movw	r30, r24
     14e:	20 81       	ld	r18, Z

00000150 <.Loc.6>:
     150:	85 e2       	ldi	r24, 0x25	; 37
     152:	90 e0       	ldi	r25, 0x00	; 0

00000154 <.Loc.7>:
     154:	2f 7b       	andi	r18, 0xBF	; 191
     156:	fc 01       	movw	r30, r24
     158:	20 83       	st	Z, r18

0000015a <.Loc.8>:
		PORT_LPWM &= ~(1<<PIN_LPWM);
     15a:	85 e2       	ldi	r24, 0x25	; 37
     15c:	90 e0       	ldi	r25, 0x00	; 0
     15e:	fc 01       	movw	r30, r24
     160:	20 81       	ld	r18, Z

00000162 <.Loc.9>:
     162:	85 e2       	ldi	r24, 0x25	; 37
     164:	90 e0       	ldi	r25, 0x00	; 0

00000166 <.Loc.10>:
     166:	2f 77       	andi	r18, 0x7F	; 127
     168:	fc 01       	movw	r30, r24
     16a:	20 83       	st	Z, r18

0000016c <.Loc.11>:
	else if (OCR0B != 0)
	{
		PORT_RPWM &= ~(1<<PIN_RPWM);
		PORT_LPWM |= (1<<PIN_LPWM);
	}
}
     16c:	31 c0       	rjmp	.+98     	; 0x1d0 <.L5>

0000016e <.L2>:
	else if (OCR0A != 0)
     16e:	87 e4       	ldi	r24, 0x47	; 71
     170:	90 e0       	ldi	r25, 0x00	; 0
     172:	fc 01       	movw	r30, r24
     174:	80 81       	ld	r24, Z

00000176 <.Loc.13>:
     176:	88 23       	and	r24, r24
     178:	99 f0       	breq	.+38     	; 0x1a0 <.L4>

0000017a <.Loc.14>:
		PORT_LPWM &= ~(1<<PIN_LPWM);
     17a:	85 e2       	ldi	r24, 0x25	; 37
     17c:	90 e0       	ldi	r25, 0x00	; 0
     17e:	fc 01       	movw	r30, r24
     180:	20 81       	ld	r18, Z

00000182 <.Loc.15>:
     182:	85 e2       	ldi	r24, 0x25	; 37
     184:	90 e0       	ldi	r25, 0x00	; 0

00000186 <.Loc.16>:
     186:	2f 77       	andi	r18, 0x7F	; 127
     188:	fc 01       	movw	r30, r24
     18a:	20 83       	st	Z, r18

0000018c <.Loc.17>:
		PORT_RPWM |= (1<<PIN_RPWM);
     18c:	85 e2       	ldi	r24, 0x25	; 37
     18e:	90 e0       	ldi	r25, 0x00	; 0
     190:	fc 01       	movw	r30, r24
     192:	20 81       	ld	r18, Z
     194:	85 e2       	ldi	r24, 0x25	; 37
     196:	90 e0       	ldi	r25, 0x00	; 0

00000198 <.Loc.18>:
     198:	20 64       	ori	r18, 0x40	; 64
     19a:	fc 01       	movw	r30, r24
     19c:	20 83       	st	Z, r18

0000019e <.Loc.19>:
}
     19e:	18 c0       	rjmp	.+48     	; 0x1d0 <.L5>

000001a0 <.L4>:
	else if (OCR0B != 0)
     1a0:	88 e4       	ldi	r24, 0x48	; 72
     1a2:	90 e0       	ldi	r25, 0x00	; 0
     1a4:	fc 01       	movw	r30, r24
     1a6:	80 81       	ld	r24, Z

000001a8 <.Loc.21>:
     1a8:	88 23       	and	r24, r24
     1aa:	91 f0       	breq	.+36     	; 0x1d0 <.L5>

000001ac <.Loc.22>:
		PORT_RPWM &= ~(1<<PIN_RPWM);
     1ac:	85 e2       	ldi	r24, 0x25	; 37
     1ae:	90 e0       	ldi	r25, 0x00	; 0
     1b0:	fc 01       	movw	r30, r24
     1b2:	20 81       	ld	r18, Z

000001b4 <.Loc.23>:
     1b4:	85 e2       	ldi	r24, 0x25	; 37
     1b6:	90 e0       	ldi	r25, 0x00	; 0

000001b8 <.Loc.24>:
     1b8:	2f 7b       	andi	r18, 0xBF	; 191
     1ba:	fc 01       	movw	r30, r24
     1bc:	20 83       	st	Z, r18

000001be <.Loc.25>:
		PORT_LPWM |= (1<<PIN_LPWM);
     1be:	85 e2       	ldi	r24, 0x25	; 37
     1c0:	90 e0       	ldi	r25, 0x00	; 0
     1c2:	fc 01       	movw	r30, r24
     1c4:	20 81       	ld	r18, Z
     1c6:	85 e2       	ldi	r24, 0x25	; 37
     1c8:	90 e0       	ldi	r25, 0x00	; 0

000001ca <.Loc.26>:
     1ca:	20 68       	ori	r18, 0x80	; 128
     1cc:	fc 01       	movw	r30, r24
     1ce:	20 83       	st	Z, r18

000001d0 <.L5>:
}
     1d0:	00 00       	nop
     1d2:	df 91       	pop	r29
     1d4:	cf 91       	pop	r28
     1d6:	ff 91       	pop	r31
     1d8:	ef 91       	pop	r30
     1da:	9f 91       	pop	r25
     1dc:	8f 91       	pop	r24
     1de:	2f 91       	pop	r18
     1e0:	0f 90       	pop	r0
     1e2:	0b be       	out	0x3b, r0	; 59
     1e4:	0f 90       	pop	r0
     1e6:	0f be       	out	0x3f, r0	; 63
     1e8:	0f 90       	pop	r0
     1ea:	1f 90       	pop	r1
     1ec:	18 95       	reti

000001ee <__vector_21>:

ISR(TIMER0_COMPA_vect)
{
     1ee:	1f 92       	push	r1
     1f0:	0f 92       	push	r0
     1f2:	0f b6       	in	r0, 0x3f	; 63
     1f4:	0f 92       	push	r0
     1f6:	11 24       	eor	r1, r1
     1f8:	0b b6       	in	r0, 0x3b	; 59
     1fa:	0f 92       	push	r0
     1fc:	2f 93       	push	r18
     1fe:	8f 93       	push	r24
     200:	9f 93       	push	r25
     202:	ef 93       	push	r30
     204:	ff 93       	push	r31
     206:	cf 93       	push	r28
     208:	df 93       	push	r29
     20a:	cd b7       	in	r28, 0x3d	; 61
     20c:	de b7       	in	r29, 0x3e	; 62

0000020e <.Loc.29>:
	if (OCR0A != 255)
     20e:	87 e4       	ldi	r24, 0x47	; 71
     210:	90 e0       	ldi	r25, 0x00	; 0
     212:	fc 01       	movw	r30, r24
     214:	80 81       	ld	r24, Z

00000216 <.Loc.30>:
     216:	8f 3f       	cpi	r24, 0xFF	; 255
     218:	49 f0       	breq	.+18     	; 0x22c <.L8>

0000021a <.Loc.31>:
	{
		PORT_RPWM &= ~(1<<PIN_RPWM);
     21a:	85 e2       	ldi	r24, 0x25	; 37
     21c:	90 e0       	ldi	r25, 0x00	; 0
     21e:	fc 01       	movw	r30, r24
     220:	20 81       	ld	r18, Z

00000222 <.Loc.32>:
     222:	85 e2       	ldi	r24, 0x25	; 37
     224:	90 e0       	ldi	r25, 0x00	; 0

00000226 <.Loc.33>:
     226:	2f 7b       	andi	r18, 0xBF	; 191
     228:	fc 01       	movw	r30, r24
     22a:	20 83       	st	Z, r18

0000022c <.L8>:
	}
}
     22c:	00 00       	nop
     22e:	df 91       	pop	r29
     230:	cf 91       	pop	r28
     232:	ff 91       	pop	r31
     234:	ef 91       	pop	r30
     236:	9f 91       	pop	r25
     238:	8f 91       	pop	r24
     23a:	2f 91       	pop	r18
     23c:	0f 90       	pop	r0
     23e:	0b be       	out	0x3b, r0	; 59
     240:	0f 90       	pop	r0
     242:	0f be       	out	0x3f, r0	; 63
     244:	0f 90       	pop	r0
     246:	1f 90       	pop	r1
     248:	18 95       	reti

0000024a <__vector_22>:

ISR(TIMER0_COMPB_vect)
{
     24a:	1f 92       	push	r1
     24c:	0f 92       	push	r0
     24e:	0f b6       	in	r0, 0x3f	; 63
     250:	0f 92       	push	r0
     252:	11 24       	eor	r1, r1
     254:	0b b6       	in	r0, 0x3b	; 59
     256:	0f 92       	push	r0
     258:	2f 93       	push	r18
     25a:	8f 93       	push	r24
     25c:	9f 93       	push	r25
     25e:	ef 93       	push	r30
     260:	ff 93       	push	r31
     262:	cf 93       	push	r28
     264:	df 93       	push	r29
     266:	cd b7       	in	r28, 0x3d	; 61
     268:	de b7       	in	r29, 0x3e	; 62

0000026a <.Loc.36>:
	if (OCR0B != 255)
     26a:	88 e4       	ldi	r24, 0x48	; 72
     26c:	90 e0       	ldi	r25, 0x00	; 0
     26e:	fc 01       	movw	r30, r24
     270:	80 81       	ld	r24, Z

00000272 <.Loc.37>:
     272:	8f 3f       	cpi	r24, 0xFF	; 255
     274:	49 f0       	breq	.+18     	; 0x288 <.L11>

00000276 <.Loc.38>:
	{
		PORT_LPWM &= ~(1<<PIN_LPWM);
     276:	85 e2       	ldi	r24, 0x25	; 37
     278:	90 e0       	ldi	r25, 0x00	; 0
     27a:	fc 01       	movw	r30, r24
     27c:	20 81       	ld	r18, Z

0000027e <.Loc.39>:
     27e:	85 e2       	ldi	r24, 0x25	; 37
     280:	90 e0       	ldi	r25, 0x00	; 0

00000282 <.Loc.40>:
     282:	2f 77       	andi	r18, 0x7F	; 127
     284:	fc 01       	movw	r30, r24
     286:	20 83       	st	Z, r18

00000288 <.L11>:
	}
}
     288:	00 00       	nop
     28a:	df 91       	pop	r29
     28c:	cf 91       	pop	r28
     28e:	ff 91       	pop	r31
     290:	ef 91       	pop	r30
     292:	9f 91       	pop	r25
     294:	8f 91       	pop	r24
     296:	2f 91       	pop	r18
     298:	0f 90       	pop	r0
     29a:	0b be       	out	0x3b, r0	; 59
     29c:	0f 90       	pop	r0
     29e:	0f be       	out	0x3f, r0	; 63
     2a0:	0f 90       	pop	r0
     2a2:	1f 90       	pop	r1
     2a4:	18 95       	reti

000002a6 <init_h_bridge>:

void init_h_bridge(void)
{
     2a6:	cf 93       	push	r28
     2a8:	df 93       	push	r29
     2aa:	cd b7       	in	r28, 0x3d	; 61
     2ac:	de b7       	in	r29, 0x3e	; 62

000002ae <.Loc.43>:
	// Config pins as output
	DDR_RPWM |= (1<<PIN_RPWM);
     2ae:	84 e2       	ldi	r24, 0x24	; 36
     2b0:	90 e0       	ldi	r25, 0x00	; 0
     2b2:	fc 01       	movw	r30, r24
     2b4:	20 81       	ld	r18, Z
     2b6:	84 e2       	ldi	r24, 0x24	; 36
     2b8:	90 e0       	ldi	r25, 0x00	; 0

000002ba <.Loc.44>:
     2ba:	20 64       	ori	r18, 0x40	; 64
     2bc:	fc 01       	movw	r30, r24
     2be:	20 83       	st	Z, r18

000002c0 <.Loc.45>:
	DDR_LPWM |= (1<<PIN_LPWM);
     2c0:	84 e2       	ldi	r24, 0x24	; 36
     2c2:	90 e0       	ldi	r25, 0x00	; 0
     2c4:	fc 01       	movw	r30, r24
     2c6:	20 81       	ld	r18, Z
     2c8:	84 e2       	ldi	r24, 0x24	; 36
     2ca:	90 e0       	ldi	r25, 0x00	; 0

000002cc <.Loc.46>:
     2cc:	20 68       	ori	r18, 0x80	; 128
     2ce:	fc 01       	movw	r30, r24
     2d0:	20 83       	st	Z, r18

000002d2 <.Loc.47>:

	// Output low
	PORT_RPWM &= ~(1<<PIN_RPWM);
     2d2:	85 e2       	ldi	r24, 0x25	; 37
     2d4:	90 e0       	ldi	r25, 0x00	; 0
     2d6:	fc 01       	movw	r30, r24
     2d8:	20 81       	ld	r18, Z

000002da <.Loc.48>:
     2da:	85 e2       	ldi	r24, 0x25	; 37
     2dc:	90 e0       	ldi	r25, 0x00	; 0

000002de <.Loc.49>:
     2de:	2f 7b       	andi	r18, 0xBF	; 191
     2e0:	fc 01       	movw	r30, r24
     2e2:	20 83       	st	Z, r18

000002e4 <.Loc.50>:
	PORT_LPWM &= ~(1<<PIN_LPWM);
     2e4:	85 e2       	ldi	r24, 0x25	; 37
     2e6:	90 e0       	ldi	r25, 0x00	; 0
     2e8:	fc 01       	movw	r30, r24
     2ea:	20 81       	ld	r18, Z

000002ec <.Loc.51>:
     2ec:	85 e2       	ldi	r24, 0x25	; 37
     2ee:	90 e0       	ldi	r25, 0x00	; 0

000002f0 <.Loc.52>:
     2f0:	2f 77       	andi	r18, 0x7F	; 127
     2f2:	fc 01       	movw	r30, r24
     2f4:	20 83       	st	Z, r18

000002f6 <.Loc.53>:

	// Use mode 0, clkdiv = 64
	TCCR0A = 0;
     2f6:	84 e4       	ldi	r24, 0x44	; 68
     2f8:	90 e0       	ldi	r25, 0x00	; 0

000002fa <.Loc.54>:
     2fa:	fc 01       	movw	r30, r24
     2fc:	10 82       	st	Z, r1

000002fe <.Loc.55>:
	TCCR0B = (0<<CS02) | (1<<CS01) | (1<<CS00);
     2fe:	85 e4       	ldi	r24, 0x45	; 69
     300:	90 e0       	ldi	r25, 0x00	; 0

00000302 <.Loc.56>:
     302:	23 e0       	ldi	r18, 0x03	; 3
     304:	fc 01       	movw	r30, r24
     306:	20 83       	st	Z, r18

00000308 <.Loc.57>:

	// Disable PWM output
	OCR0A = 0;
     308:	87 e4       	ldi	r24, 0x47	; 71
     30a:	90 e0       	ldi	r25, 0x00	; 0

0000030c <.Loc.58>:
     30c:	fc 01       	movw	r30, r24
     30e:	10 82       	st	Z, r1

00000310 <.Loc.59>:
	OCR0B = 0;
     310:	88 e4       	ldi	r24, 0x48	; 72
     312:	90 e0       	ldi	r25, 0x00	; 0

00000314 <.Loc.60>:
     314:	fc 01       	movw	r30, r24
     316:	10 82       	st	Z, r1

00000318 <.Loc.61>:

	// Interrupts on OCA, OCB and OVF
	TIMSK0 = (1<<OCIE0B) | (1<<OCIE0A) | (1<<TOIE0);
     318:	8e e6       	ldi	r24, 0x6E	; 110
     31a:	90 e0       	ldi	r25, 0x00	; 0

0000031c <.Loc.62>:
     31c:	27 e0       	ldi	r18, 0x07	; 7
     31e:	fc 01       	movw	r30, r24
     320:	20 83       	st	Z, r18

00000322 <.Loc.63>:

	sei();
     322:	78 94       	sei

00000324 <.Loc.64>:
}
     324:	00 00       	nop
     326:	df 91       	pop	r29
     328:	cf 91       	pop	r28
     32a:	08 95       	ret

0000032c <h_bridge_set_percentage>:

void h_bridge_set_percentage(signed char percentage)
{
     32c:	cf 93       	push	r28
     32e:	df 93       	push	r29
     330:	0f 92       	push	r0
     332:	cd b7       	in	r28, 0x3d	; 61
     334:	de b7       	in	r29, 0x3e	; 62
     336:	89 83       	std	Y+1, r24	; 0x01

00000338 <.Loc.66>:
	if (percentage >= -100 && percentage <= 100)
     338:	89 81       	ldd	r24, Y+1	; 0x01
     33a:	8c 39       	cpi	r24, 0x9C	; 156
     33c:	e4 f1       	brlt	.+120    	; 0x3b6 <.L16>

0000033e <.Loc.67>:
     33e:	89 81       	ldd	r24, Y+1	; 0x01
     340:	84 36       	cpi	r24, 0x64	; 100
     342:	09 f0       	breq	.+2      	; 0x346 <.Loc.68>

00000344 <L0^A>:
     344:	c4 f5       	brge	.+112    	; 0x3b6 <.L16>

00000346 <.Loc.68>:
	{
		if (percentage >= 0)
     346:	89 81       	ldd	r24, Y+1	; 0x01
     348:	88 23       	and	r24, r24
     34a:	dc f0       	brlt	.+54     	; 0x382 <.L15>

0000034c <.Loc.69>:
		{
			// Disable LPWM, calculate RPWM
			OCR0B = 0;
     34c:	88 e4       	ldi	r24, 0x48	; 72
     34e:	90 e0       	ldi	r25, 0x00	; 0

00000350 <.Loc.70>:
     350:	fc 01       	movw	r30, r24
     352:	10 82       	st	Z, r1

00000354 <.Loc.71>:
			OCR0A = (255*percentage)/100;
     354:	89 81       	ldd	r24, Y+1	; 0x01
     356:	08 2e       	mov	r0, r24
     358:	00 0c       	add	r0, r0
     35a:	99 0b       	sbc	r25, r25
     35c:	2f ef       	ldi	r18, 0xFF	; 255
     35e:	28 9f       	mul	r18, r24
     360:	a0 01       	movw	r20, r0
     362:	29 9f       	mul	r18, r25
     364:	50 0d       	add	r21, r0
     366:	11 24       	eor	r1, r1

00000368 <.Loc.72>:
     368:	24 e6       	ldi	r18, 0x64	; 100
     36a:	30 e0       	ldi	r19, 0x00	; 0
     36c:	ca 01       	movw	r24, r20
     36e:	b9 01       	movw	r22, r18
     370:	0e 94 ad 07 	call	0xf5a	; 0xf5a <__divmodhi4>
     374:	cb 01       	movw	r24, r22
     376:	9c 01       	movw	r18, r24

00000378 <.Loc.73>:
     378:	87 e4       	ldi	r24, 0x47	; 71
     37a:	90 e0       	ldi	r25, 0x00	; 0

0000037c <.Loc.74>:
     37c:	fc 01       	movw	r30, r24
     37e:	20 83       	st	Z, r18

00000380 <.Loc.75>:
			// Disable RPWM, calculate LPWM
			OCR0A = 0;
			OCR0B = (255*percentage)/-100;
		}
	}
}
     380:	1a c0       	rjmp	.+52     	; 0x3b6 <.L16>

00000382 <.L15>:
			OCR0A = 0;
     382:	87 e4       	ldi	r24, 0x47	; 71
     384:	90 e0       	ldi	r25, 0x00	; 0

00000386 <.Loc.77>:
     386:	fc 01       	movw	r30, r24
     388:	10 82       	st	Z, r1

0000038a <.Loc.78>:
			OCR0B = (255*percentage)/-100;
     38a:	89 81       	ldd	r24, Y+1	; 0x01
     38c:	08 2e       	mov	r0, r24
     38e:	00 0c       	add	r0, r0
     390:	99 0b       	sbc	r25, r25
     392:	2f ef       	ldi	r18, 0xFF	; 255
     394:	28 9f       	mul	r18, r24
     396:	a0 01       	movw	r20, r0
     398:	29 9f       	mul	r18, r25
     39a:	50 0d       	add	r21, r0
     39c:	11 24       	eor	r1, r1

0000039e <.Loc.79>:
     39e:	2c e9       	ldi	r18, 0x9C	; 156
     3a0:	3f ef       	ldi	r19, 0xFF	; 255
     3a2:	ca 01       	movw	r24, r20
     3a4:	b9 01       	movw	r22, r18
     3a6:	0e 94 ad 07 	call	0xf5a	; 0xf5a <__divmodhi4>
     3aa:	cb 01       	movw	r24, r22
     3ac:	9c 01       	movw	r18, r24

000003ae <.Loc.80>:
     3ae:	88 e4       	ldi	r24, 0x48	; 72
     3b0:	90 e0       	ldi	r25, 0x00	; 0

000003b2 <.Loc.81>:
     3b2:	fc 01       	movw	r30, r24
     3b4:	20 83       	st	Z, r18

000003b6 <.L16>:
}
     3b6:	00 00       	nop
     3b8:	0f 90       	pop	r0
     3ba:	df 91       	pop	r29
     3bc:	cf 91       	pop	r28
     3be:	08 95       	ret

000003c0 <__vector_20>:
#define RESET_VALUE	(65636ul-TIME_VALUE)
#define STOP_VALUE	(TIME_VALUE*0.075)
#define RANGE		(TIME_VALUE*0.025)

ISR(TIMER1_OVF_vect)
{
     3c0:	1f 92       	push	r1
     3c2:	0f 92       	push	r0
     3c4:	0f b6       	in	r0, 0x3f	; 63
     3c6:	0f 92       	push	r0
     3c8:	11 24       	eor	r1, r1
     3ca:	0b b6       	in	r0, 0x3b	; 59
     3cc:	0f 92       	push	r0
     3ce:	2f 93       	push	r18
     3d0:	3f 93       	push	r19
     3d2:	8f 93       	push	r24
     3d4:	9f 93       	push	r25
     3d6:	ef 93       	push	r30
     3d8:	ff 93       	push	r31
     3da:	cf 93       	push	r28
     3dc:	df 93       	push	r29
     3de:	cd b7       	in	r28, 0x3d	; 61
     3e0:	de b7       	in	r29, 0x3e	; 62

000003e2 <.Loc.84>:
	TCNT1 = RESET_VALUE;
     3e2:	84 e8       	ldi	r24, 0x84	; 132
     3e4:	90 e0       	ldi	r25, 0x00	; 0

000003e6 <.Loc.85>:
     3e6:	24 e2       	ldi	r18, 0x24	; 36
     3e8:	34 e6       	ldi	r19, 0x64	; 100
     3ea:	fc 01       	movw	r30, r24
     3ec:	31 83       	std	Z+1, r19	; 0x01
     3ee:	20 83       	st	Z, r18

000003f0 <.Loc.86>:

	PORT_1 |= (1<<PIN_1);
     3f0:	85 e2       	ldi	r24, 0x25	; 37
     3f2:	90 e0       	ldi	r25, 0x00	; 0
     3f4:	fc 01       	movw	r30, r24
     3f6:	20 81       	ld	r18, Z
     3f8:	85 e2       	ldi	r24, 0x25	; 37
     3fa:	90 e0       	ldi	r25, 0x00	; 0

000003fc <.Loc.87>:
     3fc:	20 62       	ori	r18, 0x20	; 32
     3fe:	fc 01       	movw	r30, r24
     400:	20 83       	st	Z, r18

00000402 <.Loc.88>:
}
     402:	00 00       	nop
     404:	df 91       	pop	r29
     406:	cf 91       	pop	r28
     408:	ff 91       	pop	r31
     40a:	ef 91       	pop	r30
     40c:	9f 91       	pop	r25
     40e:	8f 91       	pop	r24
     410:	3f 91       	pop	r19
     412:	2f 91       	pop	r18
     414:	0f 90       	pop	r0
     416:	0b be       	out	0x3b, r0	; 59
     418:	0f 90       	pop	r0
     41a:	0f be       	out	0x3f, r0	; 63
     41c:	0f 90       	pop	r0
     41e:	1f 90       	pop	r1
     420:	18 95       	reti

00000422 <__vector_17>:

ISR(TIMER1_COMPA_vect)
{
     422:	1f 92       	push	r1
     424:	0f 92       	push	r0
     426:	0f b6       	in	r0, 0x3f	; 63
     428:	0f 92       	push	r0
     42a:	11 24       	eor	r1, r1
     42c:	0b b6       	in	r0, 0x3b	; 59
     42e:	0f 92       	push	r0
     430:	2f 93       	push	r18
     432:	8f 93       	push	r24
     434:	9f 93       	push	r25
     436:	ef 93       	push	r30
     438:	ff 93       	push	r31
     43a:	cf 93       	push	r28
     43c:	df 93       	push	r29
     43e:	cd b7       	in	r28, 0x3d	; 61
     440:	de b7       	in	r29, 0x3e	; 62

00000442 <.Loc.90>:
	PORT_1 &= ~(1<<PIN_1);
     442:	85 e2       	ldi	r24, 0x25	; 37
     444:	90 e0       	ldi	r25, 0x00	; 0
     446:	fc 01       	movw	r30, r24
     448:	20 81       	ld	r18, Z

0000044a <.Loc.91>:
     44a:	85 e2       	ldi	r24, 0x25	; 37
     44c:	90 e0       	ldi	r25, 0x00	; 0

0000044e <.Loc.92>:
     44e:	2f 7d       	andi	r18, 0xDF	; 223
     450:	fc 01       	movw	r30, r24
     452:	20 83       	st	Z, r18

00000454 <.Loc.93>:
}
     454:	00 00       	nop
     456:	df 91       	pop	r29
     458:	cf 91       	pop	r28
     45a:	ff 91       	pop	r31
     45c:	ef 91       	pop	r30
     45e:	9f 91       	pop	r25
     460:	8f 91       	pop	r24
     462:	2f 91       	pop	r18
     464:	0f 90       	pop	r0
     466:	0b be       	out	0x3b, r0	; 59
     468:	0f 90       	pop	r0
     46a:	0f be       	out	0x3f, r0	; 63
     46c:	0f 90       	pop	r0
     46e:	1f 90       	pop	r1
     470:	18 95       	reti

00000472 <__vector_18>:

ISR(TIMER1_COMPB_vect)
{
     472:	1f 92       	push	r1
     474:	0f 92       	push	r0
     476:	0f b6       	in	r0, 0x3f	; 63
     478:	0f 92       	push	r0
     47a:	11 24       	eor	r1, r1
     47c:	cf 93       	push	r28
     47e:	df 93       	push	r29
     480:	cd b7       	in	r28, 0x3d	; 61
     482:	de b7       	in	r29, 0x3e	; 62

00000484 <.Loc.95>:

}
     484:	00 00       	nop
     486:	df 91       	pop	r29
     488:	cf 91       	pop	r28
     48a:	0f 90       	pop	r0
     48c:	0f be       	out	0x3f, r0	; 63
     48e:	0f 90       	pop	r0
     490:	1f 90       	pop	r1
     492:	18 95       	reti

00000494 <init_servo>:

void init_servo(void)
{
     494:	cf 93       	push	r28
     496:	df 93       	push	r29
     498:	cd b7       	in	r28, 0x3d	; 61
     49a:	de b7       	in	r29, 0x3e	; 62

0000049c <.Loc.97>:
	// Config pins as output
	DDR_1 |= (1<<PIN_1);
     49c:	84 e2       	ldi	r24, 0x24	; 36
     49e:	90 e0       	ldi	r25, 0x00	; 0
     4a0:	fc 01       	movw	r30, r24
     4a2:	20 81       	ld	r18, Z
     4a4:	84 e2       	ldi	r24, 0x24	; 36
     4a6:	90 e0       	ldi	r25, 0x00	; 0

000004a8 <.Loc.98>:
     4a8:	20 62       	ori	r18, 0x20	; 32
     4aa:	fc 01       	movw	r30, r24
     4ac:	20 83       	st	Z, r18

000004ae <.Loc.99>:

	// Use mode 0, clkdiv = 8
	TCCR1A = 0;
     4ae:	80 e8       	ldi	r24, 0x80	; 128
     4b0:	90 e0       	ldi	r25, 0x00	; 0

000004b2 <.Loc.100>:
     4b2:	fc 01       	movw	r30, r24
     4b4:	10 82       	st	Z, r1

000004b6 <.Loc.101>:
	TCCR1B = (0<<CS12) | (1<<CS11) | (0<<CS10);
     4b6:	81 e8       	ldi	r24, 0x81	; 129
     4b8:	90 e0       	ldi	r25, 0x00	; 0

000004ba <.Loc.102>:
     4ba:	22 e0       	ldi	r18, 0x02	; 2
     4bc:	fc 01       	movw	r30, r24
     4be:	20 83       	st	Z, r18

000004c0 <.Loc.103>:
	// Interrupts on OCA, OCB and OVF
	TIMSK1 = (1<<OCIE1B) | (1<<OCIE1A) | (1<<TOIE1);
     4c0:	8f e6       	ldi	r24, 0x6F	; 111
     4c2:	90 e0       	ldi	r25, 0x00	; 0

000004c4 <.Loc.104>:
     4c4:	27 e0       	ldi	r18, 0x07	; 7
     4c6:	fc 01       	movw	r30, r24
     4c8:	20 83       	st	Z, r18

000004ca <.Loc.105>:

	TCNT1 = RESET_VALUE;
     4ca:	84 e8       	ldi	r24, 0x84	; 132
     4cc:	90 e0       	ldi	r25, 0x00	; 0

000004ce <.Loc.106>:
     4ce:	24 e2       	ldi	r18, 0x24	; 36
     4d0:	34 e6       	ldi	r19, 0x64	; 100
     4d2:	fc 01       	movw	r30, r24
     4d4:	31 83       	std	Z+1, r19	; 0x01
     4d6:	20 83       	st	Z, r18

000004d8 <.Loc.107>:

	servo1_set_percentage(0);
     4d8:	80 e0       	ldi	r24, 0x00	; 0
     4da:	0e 94 74 02 	call	0x4e8	; 0x4e8 <servo1_set_percentage>

000004de <.Loc.108>:


	sei();
     4de:	78 94       	sei

000004e0 <.Loc.109>:
}
     4e0:	00 00       	nop
     4e2:	df 91       	pop	r29
     4e4:	cf 91       	pop	r28
     4e6:	08 95       	ret

000004e8 <servo1_set_percentage>:

void servo1_set_percentage(signed char percentage)
{
     4e8:	0f 93       	push	r16
     4ea:	1f 93       	push	r17
     4ec:	cf 93       	push	r28
     4ee:	df 93       	push	r29
     4f0:	cd b7       	in	r28, 0x3d	; 61
     4f2:	de b7       	in	r29, 0x3e	; 62
     4f4:	6d 97       	sbiw	r28, 0x1d	; 29
     4f6:	0f b6       	in	r0, 0x3f	; 63
     4f8:	f8 94       	cli
     4fa:	de bf       	out	0x3e, r29	; 62
     4fc:	0f be       	out	0x3f, r0	; 63
     4fe:	cd bf       	out	0x3d, r28	; 61
     500:	89 83       	std	Y+1, r24	; 0x01

00000502 <.Loc.111>:
	if (percentage >= -100 && percentage <= 100)
     502:	89 81       	ldd	r24, Y+1	; 0x01
     504:	8c 39       	cpi	r24, 0x9C	; 156
     506:	0c f4       	brge	.+2      	; 0x50a <.Loc.112>

00000508 <L0^A>:
     508:	57 c0       	rjmp	.+174    	; 0x5b8 <.L23>

0000050a <.Loc.112>:
     50a:	89 81       	ldd	r24, Y+1	; 0x01
     50c:	84 36       	cpi	r24, 0x64	; 100
     50e:	11 f0       	breq	.+4      	; 0x514 <.Loc.113>

00000510 <L0^A>:
     510:	0c f0       	brlt	.+2      	; 0x514 <.Loc.113>

00000512 <L0^A>:
     512:	52 c0       	rjmp	.+164    	; 0x5b8 <.L23>

00000514 <.Loc.113>:
	{
		OCR1A = RESET_VALUE+STOP_VALUE+(RANGE/100*percentage);
     514:	89 81       	ldd	r24, Y+1	; 0x01
     516:	28 2f       	mov	r18, r24
     518:	88 0f       	add	r24, r24
     51a:	33 0b       	sbc	r19, r19
     51c:	44 0b       	sbc	r20, r20
     51e:	55 0b       	sbc	r21, r21
     520:	2e 87       	std	Y+14, r18	; 0x0e
     522:	3f 87       	std	Y+15, r19	; 0x0f
     524:	48 8b       	std	Y+16, r20	; 0x10
     526:	59 8b       	std	Y+17, r21	; 0x11
     528:	6e 85       	ldd	r22, Y+14	; 0x0e
     52a:	7f 85       	ldd	r23, Y+15	; 0x0f
     52c:	88 89       	ldd	r24, Y+16	; 0x10
     52e:	99 89       	ldd	r25, Y+17	; 0x11
     530:	0e 94 78 08 	call	0x10f0	; 0x10f0 <__floatsisf>
     534:	6a 83       	std	Y+2, r22	; 0x02
     536:	7b 83       	std	Y+3, r23	; 0x03
     538:	8c 83       	std	Y+4, r24	; 0x04
     53a:	9d 83       	std	Y+5, r25	; 0x05
     53c:	20 e0       	ldi	r18, 0x00	; 0
     53e:	30 e0       	ldi	r19, 0x00	; 0
     540:	40 e2       	ldi	r20, 0x20	; 32
     542:	51 e4       	ldi	r21, 0x41	; 65
     544:	6a 81       	ldd	r22, Y+2	; 0x02
     546:	7b 81       	ldd	r23, Y+3	; 0x03
     548:	8c 81       	ldd	r24, Y+4	; 0x04
     54a:	9d 81       	ldd	r25, Y+5	; 0x05
     54c:	0e 94 2d 09 	call	0x125a	; 0x125a <__mulsf3>
     550:	6a 8b       	std	Y+18, r22	; 0x12
     552:	7b 8b       	std	Y+19, r23	; 0x13
     554:	8c 8b       	std	Y+20, r24	; 0x14
     556:	9d 8b       	std	Y+21, r25	; 0x15
     558:	8a 89       	ldd	r24, Y+18	; 0x12
     55a:	9b 89       	ldd	r25, Y+19	; 0x13
     55c:	ac 89       	ldd	r26, Y+20	; 0x14
     55e:	bd 89       	ldd	r27, Y+21	; 0x15
     560:	8e 83       	std	Y+6, r24	; 0x06
     562:	9f 83       	std	Y+7, r25	; 0x07
     564:	a8 87       	std	Y+8, r26	; 0x08
     566:	b9 87       	std	Y+9, r27	; 0x09

00000568 <.Loc.114>:
     568:	20 e0       	ldi	r18, 0x00	; 0
     56a:	38 eb       	ldi	r19, 0xB8	; 184
     56c:	4f ed       	ldi	r20, 0xDF	; 223
     56e:	56 e4       	ldi	r21, 0x46	; 70
     570:	6e 81       	ldd	r22, Y+6	; 0x06
     572:	7f 81       	ldd	r23, Y+7	; 0x07
     574:	88 85       	ldd	r24, Y+8	; 0x08
     576:	99 85       	ldd	r25, Y+9	; 0x09
     578:	0e 94 d6 07 	call	0xfac	; 0xfac <__addsf3>
     57c:	6e 8b       	std	Y+22, r22	; 0x16
     57e:	7f 8b       	std	Y+23, r23	; 0x17
     580:	88 8f       	std	Y+24, r24	; 0x18
     582:	99 8f       	std	Y+25, r25	; 0x19
     584:	2e 89       	ldd	r18, Y+22	; 0x16
     586:	3f 89       	ldd	r19, Y+23	; 0x17
     588:	48 8d       	ldd	r20, Y+24	; 0x18
     58a:	59 8d       	ldd	r21, Y+25	; 0x19
     58c:	2a 87       	std	Y+10, r18	; 0x0a
     58e:	3b 87       	std	Y+11, r19	; 0x0b
     590:	4c 87       	std	Y+12, r20	; 0x0c
     592:	5d 87       	std	Y+13, r21	; 0x0d

00000594 <.Loc.115>:
     594:	08 e8       	ldi	r16, 0x88	; 136
     596:	10 e0       	ldi	r17, 0x00	; 0

00000598 <.Loc.116>:
     598:	6a 85       	ldd	r22, Y+10	; 0x0a
     59a:	7b 85       	ldd	r23, Y+11	; 0x0b
     59c:	8c 85       	ldd	r24, Y+12	; 0x0c
     59e:	9d 85       	ldd	r25, Y+13	; 0x0d
     5a0:	0e 94 47 08 	call	0x108e	; 0x108e <__fixunssfsi>
     5a4:	6a 8f       	std	Y+26, r22	; 0x1a
     5a6:	7b 8f       	std	Y+27, r23	; 0x1b
     5a8:	8c 8f       	std	Y+28, r24	; 0x1c
     5aa:	9d 8f       	std	Y+29, r25	; 0x1d
     5ac:	8a 8d       	ldd	r24, Y+26	; 0x1a
     5ae:	9b 8d       	ldd	r25, Y+27	; 0x1b
     5b0:	d8 01       	movw	r26, r16
     5b2:	11 96       	adiw	r26, 0x01	; 1
     5b4:	9c 93       	st	X, r25
     5b6:	8e 93       	st	-X, r24

000005b8 <.L23>:
	}
}
     5b8:	00 00       	nop
     5ba:	6d 96       	adiw	r28, 0x1d	; 29
     5bc:	0f b6       	in	r0, 0x3f	; 63
     5be:	f8 94       	cli
     5c0:	de bf       	out	0x3e, r29	; 62
     5c2:	0f be       	out	0x3f, r0	; 63
     5c4:	cd bf       	out	0x3d, r28	; 61
     5c6:	df 91       	pop	r29
     5c8:	cf 91       	pop	r28
     5ca:	1f 91       	pop	r17
     5cc:	0f 91       	pop	r16
     5ce:	08 95       	ret

000005d0 <init>:
#include <util/delay.h>
int state;
int random1 = 0;        //ints bij buzzer
int random2 = 0;
void init()
{
     5d0:	cf 93       	push	r28
     5d2:	df 93       	push	r29
     5d4:	cd b7       	in	r28, 0x3d	; 61
     5d6:	de b7       	in	r29, 0x3e	; 62

000005d8 <.Loc.119>:
    DDRF &= ~(1<<PF0); //A0, ir links voor
     5d8:	80 e3       	ldi	r24, 0x30	; 48
     5da:	90 e0       	ldi	r25, 0x00	; 0
     5dc:	fc 01       	movw	r30, r24
     5de:	20 81       	ld	r18, Z

000005e0 <.Loc.120>:
     5e0:	80 e3       	ldi	r24, 0x30	; 48
     5e2:	90 e0       	ldi	r25, 0x00	; 0

000005e4 <.Loc.121>:
     5e4:	2e 7f       	andi	r18, 0xFE	; 254
     5e6:	fc 01       	movw	r30, r24
     5e8:	20 83       	st	Z, r18

000005ea <.Loc.122>:
    PORTF |= (1<<PF0);
     5ea:	81 e3       	ldi	r24, 0x31	; 49
     5ec:	90 e0       	ldi	r25, 0x00	; 0
     5ee:	fc 01       	movw	r30, r24
     5f0:	20 81       	ld	r18, Z
     5f2:	81 e3       	ldi	r24, 0x31	; 49
     5f4:	90 e0       	ldi	r25, 0x00	; 0

000005f6 <.Loc.123>:
     5f6:	21 60       	ori	r18, 0x01	; 1
     5f8:	fc 01       	movw	r30, r24
     5fa:	20 83       	st	Z, r18

000005fc <.Loc.124>:
    DDRF &= ~(1<<PF1); //A1, ir rechts voor
     5fc:	80 e3       	ldi	r24, 0x30	; 48
     5fe:	90 e0       	ldi	r25, 0x00	; 0
     600:	fc 01       	movw	r30, r24
     602:	20 81       	ld	r18, Z

00000604 <.Loc.125>:
     604:	80 e3       	ldi	r24, 0x30	; 48
     606:	90 e0       	ldi	r25, 0x00	; 0

00000608 <.Loc.126>:
     608:	2d 7f       	andi	r18, 0xFD	; 253
     60a:	fc 01       	movw	r30, r24
     60c:	20 83       	st	Z, r18

0000060e <.Loc.127>:
    PORTF |= (1<<PF1);
     60e:	81 e3       	ldi	r24, 0x31	; 49
     610:	90 e0       	ldi	r25, 0x00	; 0
     612:	fc 01       	movw	r30, r24
     614:	20 81       	ld	r18, Z
     616:	81 e3       	ldi	r24, 0x31	; 49
     618:	90 e0       	ldi	r25, 0x00	; 0

0000061a <.Loc.128>:
     61a:	22 60       	ori	r18, 0x02	; 2
     61c:	fc 01       	movw	r30, r24
     61e:	20 83       	st	Z, r18

00000620 <.Loc.129>:
    DDRF &= ~(1<<PF2); //A2, ir bomen rechts
     620:	80 e3       	ldi	r24, 0x30	; 48
     622:	90 e0       	ldi	r25, 0x00	; 0
     624:	fc 01       	movw	r30, r24
     626:	20 81       	ld	r18, Z

00000628 <.Loc.130>:
     628:	80 e3       	ldi	r24, 0x30	; 48
     62a:	90 e0       	ldi	r25, 0x00	; 0

0000062c <.Loc.131>:
     62c:	2b 7f       	andi	r18, 0xFB	; 251
     62e:	fc 01       	movw	r30, r24
     630:	20 83       	st	Z, r18

00000632 <.Loc.132>:
    PORTF |= (1<<PF2);
     632:	81 e3       	ldi	r24, 0x31	; 49
     634:	90 e0       	ldi	r25, 0x00	; 0
     636:	fc 01       	movw	r30, r24
     638:	20 81       	ld	r18, Z
     63a:	81 e3       	ldi	r24, 0x31	; 49
     63c:	90 e0       	ldi	r25, 0x00	; 0

0000063e <.Loc.133>:
     63e:	24 60       	ori	r18, 0x04	; 4
     640:	fc 01       	movw	r30, r24
     642:	20 83       	st	Z, r18

00000644 <.Loc.134>:
    DDRF &= ~(1<<PF3);//A3, ir bomen links
     644:	80 e3       	ldi	r24, 0x30	; 48
     646:	90 e0       	ldi	r25, 0x00	; 0
     648:	fc 01       	movw	r30, r24
     64a:	20 81       	ld	r18, Z

0000064c <.Loc.135>:
     64c:	80 e3       	ldi	r24, 0x30	; 48
     64e:	90 e0       	ldi	r25, 0x00	; 0

00000650 <.Loc.136>:
     650:	27 7f       	andi	r18, 0xF7	; 247
     652:	fc 01       	movw	r30, r24
     654:	20 83       	st	Z, r18

00000656 <.Loc.137>:
    PORTF |= (1<<PF3);
     656:	81 e3       	ldi	r24, 0x31	; 49
     658:	90 e0       	ldi	r25, 0x00	; 0
     65a:	fc 01       	movw	r30, r24
     65c:	20 81       	ld	r18, Z
     65e:	81 e3       	ldi	r24, 0x31	; 49
     660:	90 e0       	ldi	r25, 0x00	; 0

00000662 <.Loc.138>:
     662:	28 60       	ori	r18, 0x08	; 8
     664:	fc 01       	movw	r30, r24
     666:	20 83       	st	Z, r18

00000668 <.Loc.139>:
    DDRF &= ~(1<<PF4);//A4, voren detecteren
     668:	80 e3       	ldi	r24, 0x30	; 48
     66a:	90 e0       	ldi	r25, 0x00	; 0
     66c:	fc 01       	movw	r30, r24
     66e:	20 81       	ld	r18, Z

00000670 <.Loc.140>:
     670:	80 e3       	ldi	r24, 0x30	; 48
     672:	90 e0       	ldi	r25, 0x00	; 0

00000674 <.Loc.141>:
     674:	2f 7e       	andi	r18, 0xEF	; 239
     676:	fc 01       	movw	r30, r24
     678:	20 83       	st	Z, r18

0000067a <.Loc.142>:
    PORTF |= (1<<PF4);
     67a:	81 e3       	ldi	r24, 0x31	; 49
     67c:	90 e0       	ldi	r25, 0x00	; 0
     67e:	fc 01       	movw	r30, r24
     680:	20 81       	ld	r18, Z
     682:	81 e3       	ldi	r24, 0x31	; 49
     684:	90 e0       	ldi	r25, 0x00	; 0

00000686 <.Loc.143>:
     686:	20 61       	ori	r18, 0x10	; 16
     688:	fc 01       	movw	r30, r24
     68a:	20 83       	st	Z, r18

0000068c <.Loc.144>:
    DDRF &= ~(1<<PF5);//A5, eind van balk detectie
     68c:	80 e3       	ldi	r24, 0x30	; 48
     68e:	90 e0       	ldi	r25, 0x00	; 0
     690:	fc 01       	movw	r30, r24
     692:	20 81       	ld	r18, Z

00000694 <.Loc.145>:
     694:	80 e3       	ldi	r24, 0x30	; 48
     696:	90 e0       	ldi	r25, 0x00	; 0

00000698 <.Loc.146>:
     698:	2f 7d       	andi	r18, 0xDF	; 223
     69a:	fc 01       	movw	r30, r24
     69c:	20 83       	st	Z, r18

0000069e <.Loc.147>:
    PORTF |= (1<<PF5);
     69e:	81 e3       	ldi	r24, 0x31	; 49
     6a0:	90 e0       	ldi	r25, 0x00	; 0
     6a2:	fc 01       	movw	r30, r24
     6a4:	20 81       	ld	r18, Z
     6a6:	81 e3       	ldi	r24, 0x31	; 49
     6a8:	90 e0       	ldi	r25, 0x00	; 0

000006aa <.Loc.148>:
     6aa:	20 62       	ori	r18, 0x20	; 32
     6ac:	fc 01       	movw	r30, r24
     6ae:	20 83       	st	Z, r18

000006b0 <.Loc.149>:
    DDRB |= (1<<PB0);  //53, links leds
     6b0:	84 e2       	ldi	r24, 0x24	; 36
     6b2:	90 e0       	ldi	r25, 0x00	; 0
     6b4:	fc 01       	movw	r30, r24
     6b6:	20 81       	ld	r18, Z
     6b8:	84 e2       	ldi	r24, 0x24	; 36
     6ba:	90 e0       	ldi	r25, 0x00	; 0

000006bc <.Loc.150>:
     6bc:	21 60       	ori	r18, 0x01	; 1
     6be:	fc 01       	movw	r30, r24
     6c0:	20 83       	st	Z, r18

000006c2 <.Loc.151>:
    PORTB &= ~(1<<PB0);
     6c2:	85 e2       	ldi	r24, 0x25	; 37
     6c4:	90 e0       	ldi	r25, 0x00	; 0
     6c6:	fc 01       	movw	r30, r24
     6c8:	20 81       	ld	r18, Z

000006ca <.Loc.152>:
     6ca:	85 e2       	ldi	r24, 0x25	; 37
     6cc:	90 e0       	ldi	r25, 0x00	; 0

000006ce <.Loc.153>:
     6ce:	2e 7f       	andi	r18, 0xFE	; 254
     6d0:	fc 01       	movw	r30, r24
     6d2:	20 83       	st	Z, r18

000006d4 <.Loc.154>:
    DDRB |= (1<<PB1);   //52, leds rechts
     6d4:	84 e2       	ldi	r24, 0x24	; 36
     6d6:	90 e0       	ldi	r25, 0x00	; 0
     6d8:	fc 01       	movw	r30, r24
     6da:	20 81       	ld	r18, Z
     6dc:	84 e2       	ldi	r24, 0x24	; 36
     6de:	90 e0       	ldi	r25, 0x00	; 0

000006e0 <.Loc.155>:
     6e0:	22 60       	ori	r18, 0x02	; 2
     6e2:	fc 01       	movw	r30, r24
     6e4:	20 83       	st	Z, r18

000006e6 <.Loc.156>:
    PORTB &= ~(1<<PB1);
     6e6:	85 e2       	ldi	r24, 0x25	; 37
     6e8:	90 e0       	ldi	r25, 0x00	; 0
     6ea:	fc 01       	movw	r30, r24
     6ec:	20 81       	ld	r18, Z

000006ee <.Loc.157>:
     6ee:	85 e2       	ldi	r24, 0x25	; 37
     6f0:	90 e0       	ldi	r25, 0x00	; 0

000006f2 <.Loc.158>:
     6f2:	2d 7f       	andi	r18, 0xFD	; 253
     6f4:	fc 01       	movw	r30, r24
     6f6:	20 83       	st	Z, r18

000006f8 <.Loc.159>:
}
     6f8:	00 00       	nop
     6fa:	df 91       	pop	r29
     6fc:	cf 91       	pop	r28
     6fe:	08 95       	ret

00000700 <vroem>:

void vroem()
{
     700:	cf 93       	push	r28
     702:	df 93       	push	r29
     704:	cd b7       	in	r28, 0x3d	; 61
     706:	de b7       	in	r29, 0x3e	; 62

00000708 <.Loc.161>:
    h_bridge_set_percentage(50);
     708:	82 e3       	ldi	r24, 0x32	; 50
     70a:	0e 94 96 01 	call	0x32c	; 0x32c <h_bridge_set_percentage>

0000070e <.Loc.162>:
}
     70e:	00 00       	nop
     710:	df 91       	pop	r29
     712:	cf 91       	pop	r28
     714:	08 95       	ret

00000716 <plantsensoraan>:

void plantsensoraan()
{
     716:	cf 93       	push	r28
     718:	df 93       	push	r29
     71a:	cd b7       	in	r28, 0x3d	; 61
     71c:	de b7       	in	r29, 0x3e	; 62

0000071e <.Loc.164>:
if(random1 == 0)
     71e:	80 91 02 02 	lds	r24, 0x0202	; 0x800202 <random1>
     722:	90 91 03 02 	lds	r25, 0x0203	; 0x800203 <random1+0x1>

00000726 <.Loc.165>:
     726:	00 97       	sbiw	r24, 0x00	; 0
     728:	b9 f4       	brne	.+46     	; 0x758 <.L27>

0000072a <.Loc.166>:
{
if ((PINF & (1<<PF2))==0)                    //bomen rechts, staan stil
     72a:	8f e2       	ldi	r24, 0x2F	; 47
     72c:	90 e0       	ldi	r25, 0x00	; 0
     72e:	fc 01       	movw	r30, r24
     730:	80 81       	ld	r24, Z

00000732 <.Loc.167>:
     732:	88 2f       	mov	r24, r24
     734:	90 e0       	ldi	r25, 0x00	; 0
     736:	84 70       	andi	r24, 0x04	; 4
     738:	99 27       	eor	r25, r25

0000073a <.Loc.168>:
     73a:	00 97       	sbiw	r24, 0x00	; 0
     73c:	b1 f4       	brne	.+44     	; 0x76a <.L28>

0000073e <.Loc.169>:
{
state = 2;
     73e:	82 e0       	ldi	r24, 0x02	; 2
     740:	90 e0       	ldi	r25, 0x00	; 0
     742:	90 93 01 02 	sts	0x0201, r25	; 0x800201 <state+0x1>
     746:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <state>

0000074a <.Loc.170>:
random1 = 300; //kan wisselen
     74a:	8c e2       	ldi	r24, 0x2C	; 44
     74c:	91 e0       	ldi	r25, 0x01	; 1
     74e:	90 93 03 02 	sts	0x0203, r25	; 0x800203 <random1+0x1>
     752:	80 93 02 02 	sts	0x0202, r24	; 0x800202 <random1>
     756:	09 c0       	rjmp	.+18     	; 0x76a <.L28>

00000758 <.L27>:
}
}
else
{
    random1--;
     758:	80 91 02 02 	lds	r24, 0x0202	; 0x800202 <random1>
     75c:	90 91 03 02 	lds	r25, 0x0203	; 0x800203 <random1+0x1>
     760:	01 97       	sbiw	r24, 0x01	; 1
     762:	90 93 03 02 	sts	0x0203, r25	; 0x800203 <random1+0x1>
     766:	80 93 02 02 	sts	0x0202, r24	; 0x800202 <random1>

0000076a <.L28>:
}
if (random2 == 0)
     76a:	80 91 04 02 	lds	r24, 0x0204	; 0x800204 <random2>
     76e:	90 91 05 02 	lds	r25, 0x0205	; 0x800205 <random2+0x1>

00000772 <.Loc.173>:
     772:	00 97       	sbiw	r24, 0x00	; 0
     774:	b9 f4       	brne	.+46     	; 0x7a4 <.L29>

00000776 <.Loc.174>:
{
if ((PINF & (1<<PF3))==0)                    //bomen links, staan stil
     776:	8f e2       	ldi	r24, 0x2F	; 47
     778:	90 e0       	ldi	r25, 0x00	; 0
     77a:	fc 01       	movw	r30, r24
     77c:	80 81       	ld	r24, Z

0000077e <.Loc.175>:
     77e:	88 2f       	mov	r24, r24
     780:	90 e0       	ldi	r25, 0x00	; 0
     782:	88 70       	andi	r24, 0x08	; 8
     784:	99 27       	eor	r25, r25

00000786 <.Loc.176>:
     786:	00 97       	sbiw	r24, 0x00	; 0
     788:	b1 f4       	brne	.+44     	; 0x7b6 <.L31>

0000078a <.Loc.177>:
{
state = 2;
     78a:	82 e0       	ldi	r24, 0x02	; 2
     78c:	90 e0       	ldi	r25, 0x00	; 0
     78e:	90 93 01 02 	sts	0x0201, r25	; 0x800201 <state+0x1>
     792:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <state>

00000796 <.Loc.178>:
random2 = 300; //kan wisselen
     796:	8c e2       	ldi	r24, 0x2C	; 44
     798:	91 e0       	ldi	r25, 0x01	; 1
     79a:	90 93 05 02 	sts	0x0205, r25	; 0x800205 <random2+0x1>
     79e:	80 93 04 02 	sts	0x0204, r24	; 0x800204 <random2>

000007a2 <.Loc.179>:
}
else
{
    random2--;
}
}
     7a2:	09 c0       	rjmp	.+18     	; 0x7b6 <.L31>

000007a4 <.L29>:
    random2--;
     7a4:	80 91 04 02 	lds	r24, 0x0204	; 0x800204 <random2>
     7a8:	90 91 05 02 	lds	r25, 0x0205	; 0x800205 <random2+0x1>
     7ac:	01 97       	sbiw	r24, 0x01	; 1
     7ae:	90 93 05 02 	sts	0x0205, r25	; 0x800205 <random2+0x1>
     7b2:	80 93 04 02 	sts	0x0204, r24	; 0x800204 <random2>

000007b6 <.L31>:
}
     7b6:	00 00       	nop
     7b8:	df 91       	pop	r29
     7ba:	cf 91       	pop	r28
     7bc:	08 95       	ret

000007be <rem>:


void rem()
{
     7be:	cf 93       	push	r28
     7c0:	df 93       	push	r29
     7c2:	cd b7       	in	r28, 0x3d	; 61
     7c4:	de b7       	in	r29, 0x3e	; 62

000007c6 <.Loc.183>:
    h_bridge_set_percentage(0);
     7c6:	80 e0       	ldi	r24, 0x00	; 0
     7c8:	0e 94 96 01 	call	0x32c	; 0x32c <h_bridge_set_percentage>

000007cc <.Loc.184>:
}
     7cc:	00 00       	nop
     7ce:	df 91       	pop	r29
     7d0:	cf 91       	pop	r28
     7d2:	08 95       	ret

000007d4 <alarm>:

void alarm()
{
     7d4:	cf 93       	push	r28
     7d6:	df 93       	push	r29
     7d8:	cd b7       	in	r28, 0x3d	; 61
     7da:	de b7       	in	r29, 0x3e	; 62
     7dc:	c8 58       	subi	r28, 0x88	; 136
     7de:	d1 09       	sbc	r29, r1
     7e0:	0f b6       	in	r0, 0x3f	; 63
     7e2:	f8 94       	cli
     7e4:	de bf       	out	0x3e, r29	; 62
     7e6:	0f be       	out	0x3f, r0	; 63
     7e8:	cd bf       	out	0x3d, r28	; 61

000007ea <.Loc.186>:
        PORTB |= (1<<PB0);
     7ea:	85 e2       	ldi	r24, 0x25	; 37
     7ec:	90 e0       	ldi	r25, 0x00	; 0
     7ee:	dc 01       	movw	r26, r24
     7f0:	2c 91       	ld	r18, X
     7f2:	85 e2       	ldi	r24, 0x25	; 37
     7f4:	90 e0       	ldi	r25, 0x00	; 0

000007f6 <.Loc.187>:
     7f6:	21 60       	ori	r18, 0x01	; 1
     7f8:	fc 01       	movw	r30, r24
     7fa:	20 83       	st	Z, r18
     7fc:	80 e0       	ldi	r24, 0x00	; 0
     7fe:	90 e0       	ldi	r25, 0x00	; 0
     800:	aa ef       	ldi	r26, 0xFA	; 250
     802:	b3 e4       	ldi	r27, 0x43	; 67
     804:	8b a7       	std	Y+43, r24	; 0x2b
     806:	9c a7       	std	Y+44, r25	; 0x2c
     808:	ad a7       	std	Y+45, r26	; 0x2d
     80a:	be a7       	std	Y+46, r27	; 0x2e

0000080c <.LBB30>:

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     80c:	20 e0       	ldi	r18, 0x00	; 0
     80e:	30 e0       	ldi	r19, 0x00	; 0
     810:	4a e7       	ldi	r20, 0x7A	; 122
     812:	55 e4       	ldi	r21, 0x45	; 69
     814:	6b a5       	ldd	r22, Y+43	; 0x2b
     816:	7c a5       	ldd	r23, Y+44	; 0x2c
     818:	8d a5       	ldd	r24, Y+45	; 0x2d
     81a:	9e a5       	ldd	r25, Y+46	; 0x2e
     81c:	0e 94 2d 09 	call	0x125a	; 0x125a <__mulsf3>
     820:	2d 96       	adiw	r28, 0x0d	; 13
     822:	6c af       	std	Y+60, r22	; 0x3c
     824:	7d af       	std	Y+61, r23	; 0x3d
     826:	8e af       	std	Y+62, r24	; 0x3e
     828:	9f af       	std	Y+63, r25	; 0x3f
     82a:	2d 97       	sbiw	r28, 0x0d	; 13
     82c:	2d 96       	adiw	r28, 0x0d	; 13
     82e:	8c ad       	ldd	r24, Y+60	; 0x3c
     830:	9d ad       	ldd	r25, Y+61	; 0x3d
     832:	ae ad       	ldd	r26, Y+62	; 0x3e
     834:	bf ad       	ldd	r27, Y+63	; 0x3f
     836:	2d 97       	sbiw	r28, 0x0d	; 13
     838:	8f a7       	std	Y+47, r24	; 0x2f
     83a:	98 ab       	std	Y+48, r25	; 0x30
     83c:	a9 ab       	std	Y+49, r26	; 0x31
     83e:	ba ab       	std	Y+50, r27	; 0x32

00000840 <.Loc.189>:
	if (__tmp < 1.0)
     840:	20 e0       	ldi	r18, 0x00	; 0
     842:	30 e0       	ldi	r19, 0x00	; 0
     844:	40 e8       	ldi	r20, 0x80	; 128
     846:	5f e3       	ldi	r21, 0x3F	; 63
     848:	6f a5       	ldd	r22, Y+47	; 0x2f
     84a:	78 a9       	ldd	r23, Y+48	; 0x30
     84c:	89 a9       	ldd	r24, Y+49	; 0x31
     84e:	9a a9       	ldd	r25, Y+50	; 0x32
     850:	0e 94 42 08 	call	0x1084	; 0x1084 <__cmpsf2>
     854:	88 23       	and	r24, r24
     856:	2c f4       	brge	.+10     	; 0x862 <.L74>

00000858 <.Loc.190>:
		__ticks = 1;
     858:	81 e0       	ldi	r24, 0x01	; 1
     85a:	90 e0       	ldi	r25, 0x00	; 0
     85c:	9c ab       	std	Y+52, r25	; 0x34
     85e:	8b ab       	std	Y+51, r24	; 0x33
     860:	66 c0       	rjmp	.+204    	; 0x92e <.L36>

00000862 <.L74>:
	else if (__tmp > 65535)
     862:	20 e0       	ldi	r18, 0x00	; 0
     864:	3f ef       	ldi	r19, 0xFF	; 255
     866:	4f e7       	ldi	r20, 0x7F	; 127
     868:	57 e4       	ldi	r21, 0x47	; 71
     86a:	6f a5       	ldd	r22, Y+47	; 0x2f
     86c:	78 a9       	ldd	r23, Y+48	; 0x30
     86e:	89 a9       	ldd	r24, Y+49	; 0x31
     870:	9a a9       	ldd	r25, Y+50	; 0x32
     872:	0e 94 28 09 	call	0x1250	; 0x1250 <__gesf2>
     876:	88 23       	and	r24, r24
     878:	09 f0       	breq	.+2      	; 0x87c <L0^A>

0000087a <L0^A>:
     87a:	0c f4       	brge	.+2      	; 0x87e <.Loc.192>

0000087c <L0^A>:
     87c:	46 c0       	rjmp	.+140    	; 0x90a <.L75>

0000087e <.Loc.192>:
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     87e:	20 e0       	ldi	r18, 0x00	; 0
     880:	30 e0       	ldi	r19, 0x00	; 0
     882:	40 e2       	ldi	r20, 0x20	; 32
     884:	51 e4       	ldi	r21, 0x41	; 65
     886:	6b a5       	ldd	r22, Y+43	; 0x2b
     888:	7c a5       	ldd	r23, Y+44	; 0x2c
     88a:	8d a5       	ldd	r24, Y+45	; 0x2d
     88c:	9e a5       	ldd	r25, Y+46	; 0x2e
     88e:	0e 94 2d 09 	call	0x125a	; 0x125a <__mulsf3>
     892:	61 96       	adiw	r28, 0x11	; 17
     894:	6c af       	std	Y+60, r22	; 0x3c
     896:	7d af       	std	Y+61, r23	; 0x3d
     898:	8e af       	std	Y+62, r24	; 0x3e
     89a:	9f af       	std	Y+63, r25	; 0x3f
     89c:	61 97       	sbiw	r28, 0x11	; 17
     89e:	61 96       	adiw	r28, 0x11	; 17
     8a0:	8c ad       	ldd	r24, Y+60	; 0x3c
     8a2:	9d ad       	ldd	r25, Y+61	; 0x3d
     8a4:	ae ad       	ldd	r26, Y+62	; 0x3e
     8a6:	bf ad       	ldd	r27, Y+63	; 0x3f
     8a8:	61 97       	sbiw	r28, 0x11	; 17
     8aa:	29 96       	adiw	r28, 0x09	; 9
     8ac:	8c af       	std	Y+60, r24	; 0x3c
     8ae:	9d af       	std	Y+61, r25	; 0x3d
     8b0:	ae af       	std	Y+62, r26	; 0x3e
     8b2:	bf af       	std	Y+63, r27	; 0x3f
     8b4:	29 97       	sbiw	r28, 0x09	; 9

000008b6 <.Loc.193>:
     8b6:	29 96       	adiw	r28, 0x09	; 9
     8b8:	6c ad       	ldd	r22, Y+60	; 0x3c
     8ba:	7d ad       	ldd	r23, Y+61	; 0x3d
     8bc:	8e ad       	ldd	r24, Y+62	; 0x3e
     8be:	9f ad       	ldd	r25, Y+63	; 0x3f
     8c0:	29 97       	sbiw	r28, 0x09	; 9
     8c2:	0e 94 47 08 	call	0x108e	; 0x108e <__fixunssfsi>
     8c6:	65 96       	adiw	r28, 0x15	; 21
     8c8:	6c af       	std	Y+60, r22	; 0x3c
     8ca:	7d af       	std	Y+61, r23	; 0x3d
     8cc:	8e af       	std	Y+62, r24	; 0x3e
     8ce:	9f af       	std	Y+63, r25	; 0x3f
     8d0:	65 97       	sbiw	r28, 0x15	; 21
     8d2:	63 96       	adiw	r28, 0x13	; 19
     8d4:	ae ad       	ldd	r26, Y+62	; 0x3e
     8d6:	bf ad       	ldd	r27, Y+63	; 0x3f
     8d8:	63 97       	sbiw	r28, 0x13	; 19
     8da:	bc ab       	std	Y+52, r27	; 0x34
     8dc:	ab ab       	std	Y+51, r26	; 0x33

000008de <.Loc.194>:
		while(__ticks)
     8de:	10 c0       	rjmp	.+32     	; 0x900 <.L39>

000008e0 <.L40>:
     8e0:	80 e9       	ldi	r24, 0x90	; 144
     8e2:	91 e0       	ldi	r25, 0x01	; 1
     8e4:	9e ab       	std	Y+54, r25	; 0x36
     8e6:	8d ab       	std	Y+53, r24	; 0x35

000008e8 <.LBB32>:
		"sbc %B0,__zero_reg__"    "\n\t"
		"brne 1b"
		: "+d" (__count)
	);
#else
	__asm__ volatile (
     8e8:	8d a9       	ldd	r24, Y+53	; 0x35
     8ea:	9e a9       	ldd	r25, Y+54	; 0x36

000008ec <.L1^B1>:
     8ec:	01 97       	sbiw	r24, 0x01	; 1
     8ee:	f1 f7       	brne	.-4      	; 0x8ec <.L1^B1>
     8f0:	9e ab       	std	Y+54, r25	; 0x36
     8f2:	8d ab       	std	Y+53, r24	; 0x35

000008f4 <.Loc.196>:
	...

000008f6 <.LBE32>:
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     8f6:	8b a9       	ldd	r24, Y+51	; 0x33
     8f8:	9c a9       	ldd	r25, Y+52	; 0x34
     8fa:	01 97       	sbiw	r24, 0x01	; 1
     8fc:	9c ab       	std	Y+52, r25	; 0x34
     8fe:	8b ab       	std	Y+51, r24	; 0x33

00000900 <.L39>:
		while(__ticks)
     900:	8b a9       	ldd	r24, Y+51	; 0x33
     902:	9c a9       	ldd	r25, Y+52	; 0x34
     904:	00 97       	sbiw	r24, 0x00	; 0
     906:	61 f7       	brne	.-40     	; 0x8e0 <.L40>

00000908 <.Loc.199>:
		}
		return;
     908:	1d c0       	rjmp	.+58     	; 0x944 <.L41>

0000090a <.L75>:
	}
	else
		__ticks = (uint16_t)__tmp;
     90a:	6f a5       	ldd	r22, Y+47	; 0x2f
     90c:	78 a9       	ldd	r23, Y+48	; 0x30
     90e:	89 a9       	ldd	r24, Y+49	; 0x31
     910:	9a a9       	ldd	r25, Y+50	; 0x32
     912:	0e 94 47 08 	call	0x108e	; 0x108e <__fixunssfsi>
     916:	69 96       	adiw	r28, 0x19	; 25
     918:	6c af       	std	Y+60, r22	; 0x3c
     91a:	7d af       	std	Y+61, r23	; 0x3d
     91c:	8e af       	std	Y+62, r24	; 0x3e
     91e:	9f af       	std	Y+63, r25	; 0x3f
     920:	69 97       	sbiw	r28, 0x19	; 25
     922:	67 96       	adiw	r28, 0x17	; 23
     924:	ee ad       	ldd	r30, Y+62	; 0x3e
     926:	ff ad       	ldd	r31, Y+63	; 0x3f
     928:	67 97       	sbiw	r28, 0x17	; 23
     92a:	fc ab       	std	Y+52, r31	; 0x34
     92c:	eb ab       	std	Y+51, r30	; 0x33

0000092e <.L36>:
     92e:	8b a9       	ldd	r24, Y+51	; 0x33
     930:	9c a9       	ldd	r25, Y+52	; 0x34
     932:	98 af       	std	Y+56, r25	; 0x38
     934:	8f ab       	std	Y+55, r24	; 0x37

00000936 <.LBB34>:
     936:	8f a9       	ldd	r24, Y+55	; 0x37
     938:	98 ad       	ldd	r25, Y+56	; 0x38

0000093a <.L1^B2>:
     93a:	01 97       	sbiw	r24, 0x01	; 1
     93c:	f1 f7       	brne	.-4      	; 0x93a <.L1^B2>
     93e:	98 af       	std	Y+56, r25	; 0x38
     940:	8f ab       	std	Y+55, r24	; 0x37

00000942 <.Loc.202>:
	...

00000944 <.L41>:
        _delay_ms(500);
        PORTB &= ~(1<<PB0);
     944:	85 e2       	ldi	r24, 0x25	; 37
     946:	90 e0       	ldi	r25, 0x00	; 0
     948:	dc 01       	movw	r26, r24
     94a:	2c 91       	ld	r18, X

0000094c <.Loc.204>:
     94c:	85 e2       	ldi	r24, 0x25	; 37
     94e:	90 e0       	ldi	r25, 0x00	; 0

00000950 <.Loc.205>:
     950:	2e 7f       	andi	r18, 0xFE	; 254
     952:	fc 01       	movw	r30, r24
     954:	20 83       	st	Z, r18

00000956 <.Loc.206>:
        PORTB |= (1<<PB1);
     956:	85 e2       	ldi	r24, 0x25	; 37
     958:	90 e0       	ldi	r25, 0x00	; 0
     95a:	dc 01       	movw	r26, r24
     95c:	2c 91       	ld	r18, X
     95e:	85 e2       	ldi	r24, 0x25	; 37
     960:	90 e0       	ldi	r25, 0x00	; 0

00000962 <.Loc.207>:
     962:	22 60       	ori	r18, 0x02	; 2
     964:	fc 01       	movw	r30, r24
     966:	20 83       	st	Z, r18
     968:	80 e0       	ldi	r24, 0x00	; 0
     96a:	90 e0       	ldi	r25, 0x00	; 0
     96c:	aa ef       	ldi	r26, 0xFA	; 250
     96e:	b3 e4       	ldi	r27, 0x43	; 67
     970:	8d 8f       	std	Y+29, r24	; 0x1d
     972:	9e 8f       	std	Y+30, r25	; 0x1e
     974:	af 8f       	std	Y+31, r26	; 0x1f
     976:	b8 a3       	std	Y+32, r27	; 0x20

00000978 <.LBB36>:
	__tmp = ((F_CPU) / 4e3) * __ms;
     978:	20 e0       	ldi	r18, 0x00	; 0
     97a:	30 e0       	ldi	r19, 0x00	; 0
     97c:	4a e7       	ldi	r20, 0x7A	; 122
     97e:	55 e4       	ldi	r21, 0x45	; 69
     980:	6d 8d       	ldd	r22, Y+29	; 0x1d
     982:	7e 8d       	ldd	r23, Y+30	; 0x1e
     984:	8f 8d       	ldd	r24, Y+31	; 0x1f
     986:	98 a1       	ldd	r25, Y+32	; 0x20
     988:	0e 94 2d 09 	call	0x125a	; 0x125a <__mulsf3>
     98c:	6d 96       	adiw	r28, 0x1d	; 29
     98e:	6c af       	std	Y+60, r22	; 0x3c
     990:	7d af       	std	Y+61, r23	; 0x3d
     992:	8e af       	std	Y+62, r24	; 0x3e
     994:	9f af       	std	Y+63, r25	; 0x3f
     996:	6d 97       	sbiw	r28, 0x1d	; 29
     998:	6d 96       	adiw	r28, 0x1d	; 29
     99a:	8c ad       	ldd	r24, Y+60	; 0x3c
     99c:	9d ad       	ldd	r25, Y+61	; 0x3d
     99e:	ae ad       	ldd	r26, Y+62	; 0x3e
     9a0:	bf ad       	ldd	r27, Y+63	; 0x3f
     9a2:	6d 97       	sbiw	r28, 0x1d	; 29
     9a4:	89 a3       	std	Y+33, r24	; 0x21
     9a6:	9a a3       	std	Y+34, r25	; 0x22
     9a8:	ab a3       	std	Y+35, r26	; 0x23
     9aa:	bc a3       	std	Y+36, r27	; 0x24

000009ac <.Loc.209>:
	if (__tmp < 1.0)
     9ac:	20 e0       	ldi	r18, 0x00	; 0
     9ae:	30 e0       	ldi	r19, 0x00	; 0
     9b0:	40 e8       	ldi	r20, 0x80	; 128
     9b2:	5f e3       	ldi	r21, 0x3F	; 63
     9b4:	69 a1       	ldd	r22, Y+33	; 0x21
     9b6:	7a a1       	ldd	r23, Y+34	; 0x22
     9b8:	8b a1       	ldd	r24, Y+35	; 0x23
     9ba:	9c a1       	ldd	r25, Y+36	; 0x24
     9bc:	0e 94 42 08 	call	0x1084	; 0x1084 <__cmpsf2>
     9c0:	88 23       	and	r24, r24
     9c2:	2c f4       	brge	.+10     	; 0x9ce <.L76>

000009c4 <.Loc.210>:
		__ticks = 1;
     9c4:	81 e0       	ldi	r24, 0x01	; 1
     9c6:	90 e0       	ldi	r25, 0x00	; 0
     9c8:	9e a3       	std	Y+38, r25	; 0x26
     9ca:	8d a3       	std	Y+37, r24	; 0x25
     9cc:	66 c0       	rjmp	.+204    	; 0xa9a <.L44>

000009ce <.L76>:
	else if (__tmp > 65535)
     9ce:	20 e0       	ldi	r18, 0x00	; 0
     9d0:	3f ef       	ldi	r19, 0xFF	; 255
     9d2:	4f e7       	ldi	r20, 0x7F	; 127
     9d4:	57 e4       	ldi	r21, 0x47	; 71
     9d6:	69 a1       	ldd	r22, Y+33	; 0x21
     9d8:	7a a1       	ldd	r23, Y+34	; 0x22
     9da:	8b a1       	ldd	r24, Y+35	; 0x23
     9dc:	9c a1       	ldd	r25, Y+36	; 0x24
     9de:	0e 94 28 09 	call	0x1250	; 0x1250 <__gesf2>
     9e2:	88 23       	and	r24, r24
     9e4:	09 f0       	breq	.+2      	; 0x9e8 <L0^A>

000009e6 <L0^A>:
     9e6:	0c f4       	brge	.+2      	; 0x9ea <.Loc.212>

000009e8 <L0^A>:
     9e8:	46 c0       	rjmp	.+140    	; 0xa76 <.L77>

000009ea <.Loc.212>:
		__ticks = (uint16_t) (__ms * 10.0);
     9ea:	20 e0       	ldi	r18, 0x00	; 0
     9ec:	30 e0       	ldi	r19, 0x00	; 0
     9ee:	40 e2       	ldi	r20, 0x20	; 32
     9f0:	51 e4       	ldi	r21, 0x41	; 65
     9f2:	6d 8d       	ldd	r22, Y+29	; 0x1d
     9f4:	7e 8d       	ldd	r23, Y+30	; 0x1e
     9f6:	8f 8d       	ldd	r24, Y+31	; 0x1f
     9f8:	98 a1       	ldd	r25, Y+32	; 0x20
     9fa:	0e 94 2d 09 	call	0x125a	; 0x125a <__mulsf3>
     9fe:	a1 96       	adiw	r28, 0x21	; 33
     a00:	6c af       	std	Y+60, r22	; 0x3c
     a02:	7d af       	std	Y+61, r23	; 0x3d
     a04:	8e af       	std	Y+62, r24	; 0x3e
     a06:	9f af       	std	Y+63, r25	; 0x3f
     a08:	a1 97       	sbiw	r28, 0x21	; 33
     a0a:	a1 96       	adiw	r28, 0x21	; 33
     a0c:	8c ad       	ldd	r24, Y+60	; 0x3c
     a0e:	9d ad       	ldd	r25, Y+61	; 0x3d
     a10:	ae ad       	ldd	r26, Y+62	; 0x3e
     a12:	bf ad       	ldd	r27, Y+63	; 0x3f
     a14:	a1 97       	sbiw	r28, 0x21	; 33
     a16:	25 96       	adiw	r28, 0x05	; 5
     a18:	8c af       	std	Y+60, r24	; 0x3c
     a1a:	9d af       	std	Y+61, r25	; 0x3d
     a1c:	ae af       	std	Y+62, r26	; 0x3e
     a1e:	bf af       	std	Y+63, r27	; 0x3f
     a20:	25 97       	sbiw	r28, 0x05	; 5

00000a22 <.Loc.213>:
     a22:	25 96       	adiw	r28, 0x05	; 5
     a24:	6c ad       	ldd	r22, Y+60	; 0x3c
     a26:	7d ad       	ldd	r23, Y+61	; 0x3d
     a28:	8e ad       	ldd	r24, Y+62	; 0x3e
     a2a:	9f ad       	ldd	r25, Y+63	; 0x3f
     a2c:	25 97       	sbiw	r28, 0x05	; 5
     a2e:	0e 94 47 08 	call	0x108e	; 0x108e <__fixunssfsi>
     a32:	a5 96       	adiw	r28, 0x25	; 37
     a34:	6c af       	std	Y+60, r22	; 0x3c
     a36:	7d af       	std	Y+61, r23	; 0x3d
     a38:	8e af       	std	Y+62, r24	; 0x3e
     a3a:	9f af       	std	Y+63, r25	; 0x3f
     a3c:	a5 97       	sbiw	r28, 0x25	; 37
     a3e:	a3 96       	adiw	r28, 0x23	; 35
     a40:	ae ad       	ldd	r26, Y+62	; 0x3e
     a42:	bf ad       	ldd	r27, Y+63	; 0x3f
     a44:	a3 97       	sbiw	r28, 0x23	; 35
     a46:	be a3       	std	Y+38, r27	; 0x26
     a48:	ad a3       	std	Y+37, r26	; 0x25

00000a4a <.Loc.214>:
		while(__ticks)
     a4a:	10 c0       	rjmp	.+32     	; 0xa6c <.L47>

00000a4c <.L48>:
     a4c:	80 e9       	ldi	r24, 0x90	; 144
     a4e:	91 e0       	ldi	r25, 0x01	; 1
     a50:	98 a7       	std	Y+40, r25	; 0x28
     a52:	8f a3       	std	Y+39, r24	; 0x27

00000a54 <.LBB38>:
     a54:	8f a1       	ldd	r24, Y+39	; 0x27
     a56:	98 a5       	ldd	r25, Y+40	; 0x28

00000a58 <.L1^B3>:
     a58:	01 97       	sbiw	r24, 0x01	; 1
     a5a:	f1 f7       	brne	.-4      	; 0xa58 <.L1^B3>
     a5c:	98 a7       	std	Y+40, r25	; 0x28
     a5e:	8f a3       	std	Y+39, r24	; 0x27

00000a60 <.Loc.216>:
	...

00000a62 <.LBE38>:
			__ticks --;
     a62:	8d a1       	ldd	r24, Y+37	; 0x25
     a64:	9e a1       	ldd	r25, Y+38	; 0x26
     a66:	01 97       	sbiw	r24, 0x01	; 1
     a68:	9e a3       	std	Y+38, r25	; 0x26
     a6a:	8d a3       	std	Y+37, r24	; 0x25

00000a6c <.L47>:
		while(__ticks)
     a6c:	8d a1       	ldd	r24, Y+37	; 0x25
     a6e:	9e a1       	ldd	r25, Y+38	; 0x26
     a70:	00 97       	sbiw	r24, 0x00	; 0
     a72:	61 f7       	brne	.-40     	; 0xa4c <.L48>

00000a74 <.Loc.219>:
		return;
     a74:	1d c0       	rjmp	.+58     	; 0xab0 <.L49>

00000a76 <.L77>:
		__ticks = (uint16_t)__tmp;
     a76:	69 a1       	ldd	r22, Y+33	; 0x21
     a78:	7a a1       	ldd	r23, Y+34	; 0x22
     a7a:	8b a1       	ldd	r24, Y+35	; 0x23
     a7c:	9c a1       	ldd	r25, Y+36	; 0x24
     a7e:	0e 94 47 08 	call	0x108e	; 0x108e <__fixunssfsi>
     a82:	a9 96       	adiw	r28, 0x29	; 41
     a84:	6c af       	std	Y+60, r22	; 0x3c
     a86:	7d af       	std	Y+61, r23	; 0x3d
     a88:	8e af       	std	Y+62, r24	; 0x3e
     a8a:	9f af       	std	Y+63, r25	; 0x3f
     a8c:	a9 97       	sbiw	r28, 0x29	; 41
     a8e:	a7 96       	adiw	r28, 0x27	; 39
     a90:	ee ad       	ldd	r30, Y+62	; 0x3e
     a92:	ff ad       	ldd	r31, Y+63	; 0x3f
     a94:	a7 97       	sbiw	r28, 0x27	; 39
     a96:	fe a3       	std	Y+38, r31	; 0x26
     a98:	ed a3       	std	Y+37, r30	; 0x25

00000a9a <.L44>:
     a9a:	8d a1       	ldd	r24, Y+37	; 0x25
     a9c:	9e a1       	ldd	r25, Y+38	; 0x26
     a9e:	9a a7       	std	Y+42, r25	; 0x2a
     aa0:	89 a7       	std	Y+41, r24	; 0x29

00000aa2 <.LBB40>:
     aa2:	89 a5       	ldd	r24, Y+41	; 0x29
     aa4:	9a a5       	ldd	r25, Y+42	; 0x2a

00000aa6 <.L1^B4>:
     aa6:	01 97       	sbiw	r24, 0x01	; 1
     aa8:	f1 f7       	brne	.-4      	; 0xaa6 <.L1^B4>
     aaa:	9a a7       	std	Y+42, r25	; 0x2a
     aac:	89 a7       	std	Y+41, r24	; 0x29

00000aae <.Loc.222>:
	...

00000ab0 <.L49>:
        _delay_ms(500);
        PORTB |= (1<<PB0);
     ab0:	85 e2       	ldi	r24, 0x25	; 37
     ab2:	90 e0       	ldi	r25, 0x00	; 0
     ab4:	dc 01       	movw	r26, r24
     ab6:	2c 91       	ld	r18, X
     ab8:	85 e2       	ldi	r24, 0x25	; 37
     aba:	90 e0       	ldi	r25, 0x00	; 0

00000abc <.Loc.224>:
     abc:	21 60       	ori	r18, 0x01	; 1
     abe:	fc 01       	movw	r30, r24
     ac0:	20 83       	st	Z, r18

00000ac2 <.Loc.225>:
        PORTB &= ~(1<<PB1);
     ac2:	85 e2       	ldi	r24, 0x25	; 37
     ac4:	90 e0       	ldi	r25, 0x00	; 0
     ac6:	dc 01       	movw	r26, r24
     ac8:	2c 91       	ld	r18, X

00000aca <.Loc.226>:
     aca:	85 e2       	ldi	r24, 0x25	; 37
     acc:	90 e0       	ldi	r25, 0x00	; 0

00000ace <.Loc.227>:
     ace:	2d 7f       	andi	r18, 0xFD	; 253
     ad0:	fc 01       	movw	r30, r24
     ad2:	20 83       	st	Z, r18
     ad4:	80 e0       	ldi	r24, 0x00	; 0
     ad6:	90 e0       	ldi	r25, 0x00	; 0
     ad8:	aa ef       	ldi	r26, 0xFA	; 250
     ada:	b3 e4       	ldi	r27, 0x43	; 67
     adc:	8f 87       	std	Y+15, r24	; 0x0f
     ade:	98 8b       	std	Y+16, r25	; 0x10
     ae0:	a9 8b       	std	Y+17, r26	; 0x11
     ae2:	ba 8b       	std	Y+18, r27	; 0x12

00000ae4 <.LBB42>:
	__tmp = ((F_CPU) / 4e3) * __ms;
     ae4:	20 e0       	ldi	r18, 0x00	; 0
     ae6:	30 e0       	ldi	r19, 0x00	; 0
     ae8:	4a e7       	ldi	r20, 0x7A	; 122
     aea:	55 e4       	ldi	r21, 0x45	; 69
     aec:	6f 85       	ldd	r22, Y+15	; 0x0f
     aee:	78 89       	ldd	r23, Y+16	; 0x10
     af0:	89 89       	ldd	r24, Y+17	; 0x11
     af2:	9a 89       	ldd	r25, Y+18	; 0x12
     af4:	0e 94 2d 09 	call	0x125a	; 0x125a <__mulsf3>
     af8:	ad 96       	adiw	r28, 0x2d	; 45
     afa:	6c af       	std	Y+60, r22	; 0x3c
     afc:	7d af       	std	Y+61, r23	; 0x3d
     afe:	8e af       	std	Y+62, r24	; 0x3e
     b00:	9f af       	std	Y+63, r25	; 0x3f
     b02:	ad 97       	sbiw	r28, 0x2d	; 45
     b04:	ad 96       	adiw	r28, 0x2d	; 45
     b06:	8c ad       	ldd	r24, Y+60	; 0x3c
     b08:	9d ad       	ldd	r25, Y+61	; 0x3d
     b0a:	ae ad       	ldd	r26, Y+62	; 0x3e
     b0c:	bf ad       	ldd	r27, Y+63	; 0x3f
     b0e:	ad 97       	sbiw	r28, 0x2d	; 45
     b10:	8b 8b       	std	Y+19, r24	; 0x13
     b12:	9c 8b       	std	Y+20, r25	; 0x14
     b14:	ad 8b       	std	Y+21, r26	; 0x15
     b16:	be 8b       	std	Y+22, r27	; 0x16

00000b18 <.Loc.229>:
	if (__tmp < 1.0)
     b18:	20 e0       	ldi	r18, 0x00	; 0
     b1a:	30 e0       	ldi	r19, 0x00	; 0
     b1c:	40 e8       	ldi	r20, 0x80	; 128
     b1e:	5f e3       	ldi	r21, 0x3F	; 63
     b20:	6b 89       	ldd	r22, Y+19	; 0x13
     b22:	7c 89       	ldd	r23, Y+20	; 0x14
     b24:	8d 89       	ldd	r24, Y+21	; 0x15
     b26:	9e 89       	ldd	r25, Y+22	; 0x16
     b28:	0e 94 42 08 	call	0x1084	; 0x1084 <__cmpsf2>
     b2c:	88 23       	and	r24, r24
     b2e:	2c f4       	brge	.+10     	; 0xb3a <.L78>

00000b30 <.Loc.230>:
		__ticks = 1;
     b30:	81 e0       	ldi	r24, 0x01	; 1
     b32:	90 e0       	ldi	r25, 0x00	; 0
     b34:	98 8f       	std	Y+24, r25	; 0x18
     b36:	8f 8b       	std	Y+23, r24	; 0x17
     b38:	66 c0       	rjmp	.+204    	; 0xc06 <.L52>

00000b3a <.L78>:
	else if (__tmp > 65535)
     b3a:	20 e0       	ldi	r18, 0x00	; 0
     b3c:	3f ef       	ldi	r19, 0xFF	; 255
     b3e:	4f e7       	ldi	r20, 0x7F	; 127
     b40:	57 e4       	ldi	r21, 0x47	; 71
     b42:	6b 89       	ldd	r22, Y+19	; 0x13
     b44:	7c 89       	ldd	r23, Y+20	; 0x14
     b46:	8d 89       	ldd	r24, Y+21	; 0x15
     b48:	9e 89       	ldd	r25, Y+22	; 0x16
     b4a:	0e 94 28 09 	call	0x1250	; 0x1250 <__gesf2>
     b4e:	88 23       	and	r24, r24
     b50:	09 f0       	breq	.+2      	; 0xb54 <L0^A>

00000b52 <L0^A>:
     b52:	0c f4       	brge	.+2      	; 0xb56 <.Loc.232>

00000b54 <L0^A>:
     b54:	46 c0       	rjmp	.+140    	; 0xbe2 <.L79>

00000b56 <.Loc.232>:
		__ticks = (uint16_t) (__ms * 10.0);
     b56:	20 e0       	ldi	r18, 0x00	; 0
     b58:	30 e0       	ldi	r19, 0x00	; 0
     b5a:	40 e2       	ldi	r20, 0x20	; 32
     b5c:	51 e4       	ldi	r21, 0x41	; 65
     b5e:	6f 85       	ldd	r22, Y+15	; 0x0f
     b60:	78 89       	ldd	r23, Y+16	; 0x10
     b62:	89 89       	ldd	r24, Y+17	; 0x11
     b64:	9a 89       	ldd	r25, Y+18	; 0x12
     b66:	0e 94 2d 09 	call	0x125a	; 0x125a <__mulsf3>
     b6a:	e1 96       	adiw	r28, 0x31	; 49
     b6c:	6c af       	std	Y+60, r22	; 0x3c
     b6e:	7d af       	std	Y+61, r23	; 0x3d
     b70:	8e af       	std	Y+62, r24	; 0x3e
     b72:	9f af       	std	Y+63, r25	; 0x3f
     b74:	e1 97       	sbiw	r28, 0x31	; 49
     b76:	e1 96       	adiw	r28, 0x31	; 49
     b78:	8c ad       	ldd	r24, Y+60	; 0x3c
     b7a:	9d ad       	ldd	r25, Y+61	; 0x3d
     b7c:	ae ad       	ldd	r26, Y+62	; 0x3e
     b7e:	bf ad       	ldd	r27, Y+63	; 0x3f
     b80:	e1 97       	sbiw	r28, 0x31	; 49
     b82:	21 96       	adiw	r28, 0x01	; 1
     b84:	8c af       	std	Y+60, r24	; 0x3c
     b86:	9d af       	std	Y+61, r25	; 0x3d
     b88:	ae af       	std	Y+62, r26	; 0x3e
     b8a:	bf af       	std	Y+63, r27	; 0x3f
     b8c:	21 97       	sbiw	r28, 0x01	; 1

00000b8e <.Loc.233>:
     b8e:	21 96       	adiw	r28, 0x01	; 1
     b90:	6c ad       	ldd	r22, Y+60	; 0x3c
     b92:	7d ad       	ldd	r23, Y+61	; 0x3d
     b94:	8e ad       	ldd	r24, Y+62	; 0x3e
     b96:	9f ad       	ldd	r25, Y+63	; 0x3f
     b98:	21 97       	sbiw	r28, 0x01	; 1
     b9a:	0e 94 47 08 	call	0x108e	; 0x108e <__fixunssfsi>
     b9e:	e5 96       	adiw	r28, 0x35	; 53
     ba0:	6c af       	std	Y+60, r22	; 0x3c
     ba2:	7d af       	std	Y+61, r23	; 0x3d
     ba4:	8e af       	std	Y+62, r24	; 0x3e
     ba6:	9f af       	std	Y+63, r25	; 0x3f
     ba8:	e5 97       	sbiw	r28, 0x35	; 53
     baa:	e3 96       	adiw	r28, 0x33	; 51
     bac:	ae ad       	ldd	r26, Y+62	; 0x3e
     bae:	bf ad       	ldd	r27, Y+63	; 0x3f
     bb0:	e3 97       	sbiw	r28, 0x33	; 51
     bb2:	b8 8f       	std	Y+24, r27	; 0x18
     bb4:	af 8b       	std	Y+23, r26	; 0x17

00000bb6 <.Loc.234>:
		while(__ticks)
     bb6:	10 c0       	rjmp	.+32     	; 0xbd8 <.L55>

00000bb8 <.L56>:
     bb8:	80 e9       	ldi	r24, 0x90	; 144
     bba:	91 e0       	ldi	r25, 0x01	; 1
     bbc:	9a 8f       	std	Y+26, r25	; 0x1a
     bbe:	89 8f       	std	Y+25, r24	; 0x19

00000bc0 <.LBB44>:
     bc0:	89 8d       	ldd	r24, Y+25	; 0x19
     bc2:	9a 8d       	ldd	r25, Y+26	; 0x1a

00000bc4 <.L1^B5>:
     bc4:	01 97       	sbiw	r24, 0x01	; 1
     bc6:	f1 f7       	brne	.-4      	; 0xbc4 <.L1^B5>
     bc8:	9a 8f       	std	Y+26, r25	; 0x1a
     bca:	89 8f       	std	Y+25, r24	; 0x19

00000bcc <.Loc.236>:
	...

00000bce <.LBE44>:
			__ticks --;
     bce:	8f 89       	ldd	r24, Y+23	; 0x17
     bd0:	98 8d       	ldd	r25, Y+24	; 0x18
     bd2:	01 97       	sbiw	r24, 0x01	; 1
     bd4:	98 8f       	std	Y+24, r25	; 0x18
     bd6:	8f 8b       	std	Y+23, r24	; 0x17

00000bd8 <.L55>:
		while(__ticks)
     bd8:	8f 89       	ldd	r24, Y+23	; 0x17
     bda:	98 8d       	ldd	r25, Y+24	; 0x18
     bdc:	00 97       	sbiw	r24, 0x00	; 0
     bde:	61 f7       	brne	.-40     	; 0xbb8 <.L56>

00000be0 <.Loc.239>:
		return;
     be0:	1d c0       	rjmp	.+58     	; 0xc1c <.L57>

00000be2 <.L79>:
		__ticks = (uint16_t)__tmp;
     be2:	6b 89       	ldd	r22, Y+19	; 0x13
     be4:	7c 89       	ldd	r23, Y+20	; 0x14
     be6:	8d 89       	ldd	r24, Y+21	; 0x15
     be8:	9e 89       	ldd	r25, Y+22	; 0x16
     bea:	0e 94 47 08 	call	0x108e	; 0x108e <__fixunssfsi>
     bee:	e9 96       	adiw	r28, 0x39	; 57
     bf0:	6c af       	std	Y+60, r22	; 0x3c
     bf2:	7d af       	std	Y+61, r23	; 0x3d
     bf4:	8e af       	std	Y+62, r24	; 0x3e
     bf6:	9f af       	std	Y+63, r25	; 0x3f
     bf8:	e9 97       	sbiw	r28, 0x39	; 57
     bfa:	e7 96       	adiw	r28, 0x37	; 55
     bfc:	ee ad       	ldd	r30, Y+62	; 0x3e
     bfe:	ff ad       	ldd	r31, Y+63	; 0x3f
     c00:	e7 97       	sbiw	r28, 0x37	; 55
     c02:	f8 8f       	std	Y+24, r31	; 0x18
     c04:	ef 8b       	std	Y+23, r30	; 0x17

00000c06 <.L52>:
     c06:	8f 89       	ldd	r24, Y+23	; 0x17
     c08:	98 8d       	ldd	r25, Y+24	; 0x18
     c0a:	9c 8f       	std	Y+28, r25	; 0x1c
     c0c:	8b 8f       	std	Y+27, r24	; 0x1b

00000c0e <.LBB46>:
     c0e:	8b 8d       	ldd	r24, Y+27	; 0x1b
     c10:	9c 8d       	ldd	r25, Y+28	; 0x1c

00000c12 <.L1^B6>:
     c12:	01 97       	sbiw	r24, 0x01	; 1
     c14:	f1 f7       	brne	.-4      	; 0xc12 <.L1^B6>
     c16:	9c 8f       	std	Y+28, r25	; 0x1c
     c18:	8b 8f       	std	Y+27, r24	; 0x1b

00000c1a <.Loc.242>:
	...

00000c1c <.L57>:
        _delay_ms(500);
        PORTB &= ~(1<<PB0);
     c1c:	85 e2       	ldi	r24, 0x25	; 37
     c1e:	90 e0       	ldi	r25, 0x00	; 0
     c20:	dc 01       	movw	r26, r24
     c22:	2c 91       	ld	r18, X

00000c24 <.Loc.244>:
     c24:	85 e2       	ldi	r24, 0x25	; 37
     c26:	90 e0       	ldi	r25, 0x00	; 0

00000c28 <.Loc.245>:
     c28:	2e 7f       	andi	r18, 0xFE	; 254
     c2a:	fc 01       	movw	r30, r24
     c2c:	20 83       	st	Z, r18

00000c2e <.Loc.246>:
        PORTB |= (1<<PB1);
     c2e:	85 e2       	ldi	r24, 0x25	; 37
     c30:	90 e0       	ldi	r25, 0x00	; 0
     c32:	dc 01       	movw	r26, r24
     c34:	2c 91       	ld	r18, X
     c36:	85 e2       	ldi	r24, 0x25	; 37
     c38:	90 e0       	ldi	r25, 0x00	; 0

00000c3a <.Loc.247>:
     c3a:	22 60       	ori	r18, 0x02	; 2
     c3c:	fc 01       	movw	r30, r24
     c3e:	20 83       	st	Z, r18
     c40:	80 e0       	ldi	r24, 0x00	; 0
     c42:	90 e0       	ldi	r25, 0x00	; 0
     c44:	aa ef       	ldi	r26, 0xFA	; 250
     c46:	b3 e4       	ldi	r27, 0x43	; 67
     c48:	89 83       	std	Y+1, r24	; 0x01
     c4a:	9a 83       	std	Y+2, r25	; 0x02
     c4c:	ab 83       	std	Y+3, r26	; 0x03
     c4e:	bc 83       	std	Y+4, r27	; 0x04

00000c50 <.LBB48>:
	__tmp = ((F_CPU) / 4e3) * __ms;
     c50:	20 e0       	ldi	r18, 0x00	; 0
     c52:	30 e0       	ldi	r19, 0x00	; 0
     c54:	4a e7       	ldi	r20, 0x7A	; 122
     c56:	55 e4       	ldi	r21, 0x45	; 69
     c58:	69 81       	ldd	r22, Y+1	; 0x01
     c5a:	7a 81       	ldd	r23, Y+2	; 0x02
     c5c:	8b 81       	ldd	r24, Y+3	; 0x03
     c5e:	9c 81       	ldd	r25, Y+4	; 0x04
     c60:	0e 94 2d 09 	call	0x125a	; 0x125a <__mulsf3>
     c64:	ed 96       	adiw	r28, 0x3d	; 61
     c66:	6c af       	std	Y+60, r22	; 0x3c
     c68:	7d af       	std	Y+61, r23	; 0x3d
     c6a:	8e af       	std	Y+62, r24	; 0x3e
     c6c:	9f af       	std	Y+63, r25	; 0x3f
     c6e:	ed 97       	sbiw	r28, 0x3d	; 61
     c70:	ed 96       	adiw	r28, 0x3d	; 61
     c72:	8c ad       	ldd	r24, Y+60	; 0x3c
     c74:	9d ad       	ldd	r25, Y+61	; 0x3d
     c76:	ae ad       	ldd	r26, Y+62	; 0x3e
     c78:	bf ad       	ldd	r27, Y+63	; 0x3f
     c7a:	ed 97       	sbiw	r28, 0x3d	; 61
     c7c:	8d 83       	std	Y+5, r24	; 0x05
     c7e:	9e 83       	std	Y+6, r25	; 0x06
     c80:	af 83       	std	Y+7, r26	; 0x07
     c82:	b8 87       	std	Y+8, r27	; 0x08

00000c84 <.Loc.249>:
	if (__tmp < 1.0)
     c84:	20 e0       	ldi	r18, 0x00	; 0
     c86:	30 e0       	ldi	r19, 0x00	; 0
     c88:	40 e8       	ldi	r20, 0x80	; 128
     c8a:	5f e3       	ldi	r21, 0x3F	; 63
     c8c:	6d 81       	ldd	r22, Y+5	; 0x05
     c8e:	7e 81       	ldd	r23, Y+6	; 0x06
     c90:	8f 81       	ldd	r24, Y+7	; 0x07
     c92:	98 85       	ldd	r25, Y+8	; 0x08
     c94:	0e 94 42 08 	call	0x1084	; 0x1084 <__cmpsf2>
     c98:	88 23       	and	r24, r24
     c9a:	2c f4       	brge	.+10     	; 0xca6 <.L80>

00000c9c <.Loc.250>:
		__ticks = 1;
     c9c:	81 e0       	ldi	r24, 0x01	; 1
     c9e:	90 e0       	ldi	r25, 0x00	; 0
     ca0:	9a 87       	std	Y+10, r25	; 0x0a
     ca2:	89 87       	std	Y+9, r24	; 0x09
     ca4:	6e c0       	rjmp	.+220    	; 0xd82 <.L60>

00000ca6 <.L80>:
	else if (__tmp > 65535)
     ca6:	20 e0       	ldi	r18, 0x00	; 0
     ca8:	3f ef       	ldi	r19, 0xFF	; 255
     caa:	4f e7       	ldi	r20, 0x7F	; 127
     cac:	57 e4       	ldi	r21, 0x47	; 71
     cae:	6d 81       	ldd	r22, Y+5	; 0x05
     cb0:	7e 81       	ldd	r23, Y+6	; 0x06
     cb2:	8f 81       	ldd	r24, Y+7	; 0x07
     cb4:	98 85       	ldd	r25, Y+8	; 0x08
     cb6:	0e 94 28 09 	call	0x1250	; 0x1250 <__gesf2>
     cba:	88 23       	and	r24, r24
     cbc:	09 f0       	breq	.+2      	; 0xcc0 <L0^A>

00000cbe <L0^A>:
     cbe:	0c f4       	brge	.+2      	; 0xcc2 <.Loc.252>

00000cc0 <L0^A>:
     cc0:	4a c0       	rjmp	.+148    	; 0xd56 <.L81>

00000cc2 <.Loc.252>:
		__ticks = (uint16_t) (__ms * 10.0);
     cc2:	20 e0       	ldi	r18, 0x00	; 0
     cc4:	30 e0       	ldi	r19, 0x00	; 0
     cc6:	40 e2       	ldi	r20, 0x20	; 32
     cc8:	51 e4       	ldi	r21, 0x41	; 65
     cca:	69 81       	ldd	r22, Y+1	; 0x01
     ccc:	7a 81       	ldd	r23, Y+2	; 0x02
     cce:	8b 81       	ldd	r24, Y+3	; 0x03
     cd0:	9c 81       	ldd	r25, Y+4	; 0x04
     cd2:	0e 94 2d 09 	call	0x125a	; 0x125a <__mulsf3>
     cd6:	c3 58       	subi	r28, 0x83	; 131
     cd8:	df 4f       	sbci	r29, 0xFF	; 255
     cda:	68 83       	st	Y, r22
     cdc:	79 83       	std	Y+1, r23	; 0x01
     cde:	8a 83       	std	Y+2, r24	; 0x02
     ce0:	9b 83       	std	Y+3, r25	; 0x03
     ce2:	cd 57       	subi	r28, 0x7D	; 125
     ce4:	d0 40       	sbci	r29, 0x00	; 0
     ce6:	c3 58       	subi	r28, 0x83	; 131
     ce8:	df 4f       	sbci	r29, 0xFF	; 255
     cea:	88 81       	ld	r24, Y
     cec:	99 81       	ldd	r25, Y+1	; 0x01
     cee:	aa 81       	ldd	r26, Y+2	; 0x02
     cf0:	bb 81       	ldd	r27, Y+3	; 0x03
     cf2:	cd 57       	subi	r28, 0x7D	; 125
     cf4:	d0 40       	sbci	r29, 0x00	; 0
     cf6:	89 af       	std	Y+57, r24	; 0x39
     cf8:	9a af       	std	Y+58, r25	; 0x3a
     cfa:	ab af       	std	Y+59, r26	; 0x3b
     cfc:	bc af       	std	Y+60, r27	; 0x3c

00000cfe <.Loc.253>:
     cfe:	69 ad       	ldd	r22, Y+57	; 0x39
     d00:	7a ad       	ldd	r23, Y+58	; 0x3a
     d02:	8b ad       	ldd	r24, Y+59	; 0x3b
     d04:	9c ad       	ldd	r25, Y+60	; 0x3c
     d06:	0e 94 47 08 	call	0x108e	; 0x108e <__fixunssfsi>
     d0a:	cf 57       	subi	r28, 0x7F	; 127
     d0c:	df 4f       	sbci	r29, 0xFF	; 255
     d0e:	68 83       	st	Y, r22
     d10:	79 83       	std	Y+1, r23	; 0x01
     d12:	8a 83       	std	Y+2, r24	; 0x02
     d14:	9b 83       	std	Y+3, r25	; 0x03
     d16:	c1 58       	subi	r28, 0x81	; 129
     d18:	d0 40       	sbci	r29, 0x00	; 0
     d1a:	cf 57       	subi	r28, 0x7F	; 127
     d1c:	df 4f       	sbci	r29, 0xFF	; 255
     d1e:	a8 81       	ld	r26, Y
     d20:	b9 81       	ldd	r27, Y+1	; 0x01
     d22:	c1 58       	subi	r28, 0x81	; 129
     d24:	d0 40       	sbci	r29, 0x00	; 0
     d26:	ba 87       	std	Y+10, r27	; 0x0a
     d28:	a9 87       	std	Y+9, r26	; 0x09

00000d2a <.Loc.254>:
		while(__ticks)
     d2a:	10 c0       	rjmp	.+32     	; 0xd4c <.L63>

00000d2c <.L64>:
     d2c:	80 e9       	ldi	r24, 0x90	; 144
     d2e:	91 e0       	ldi	r25, 0x01	; 1
     d30:	9c 87       	std	Y+12, r25	; 0x0c
     d32:	8b 87       	std	Y+11, r24	; 0x0b

00000d34 <.LBB50>:
     d34:	8b 85       	ldd	r24, Y+11	; 0x0b
     d36:	9c 85       	ldd	r25, Y+12	; 0x0c

00000d38 <.L1^B7>:
     d38:	01 97       	sbiw	r24, 0x01	; 1
     d3a:	f1 f7       	brne	.-4      	; 0xd38 <.L1^B7>
     d3c:	9c 87       	std	Y+12, r25	; 0x0c
     d3e:	8b 87       	std	Y+11, r24	; 0x0b

00000d40 <.Loc.256>:
	...

00000d42 <.LBE50>:
			__ticks --;
     d42:	89 85       	ldd	r24, Y+9	; 0x09
     d44:	9a 85       	ldd	r25, Y+10	; 0x0a
     d46:	01 97       	sbiw	r24, 0x01	; 1
     d48:	9a 87       	std	Y+10, r25	; 0x0a
     d4a:	89 87       	std	Y+9, r24	; 0x09

00000d4c <.L63>:
		while(__ticks)
     d4c:	89 85       	ldd	r24, Y+9	; 0x09
     d4e:	9a 85       	ldd	r25, Y+10	; 0x0a
     d50:	00 97       	sbiw	r24, 0x00	; 0
     d52:	61 f7       	brne	.-40     	; 0xd2c <.L64>

00000d54 <.Loc.259>:
		return;
     d54:	21 c0       	rjmp	.+66     	; 0xd98 <.L65>

00000d56 <.L81>:
		__ticks = (uint16_t)__tmp;
     d56:	6d 81       	ldd	r22, Y+5	; 0x05
     d58:	7e 81       	ldd	r23, Y+6	; 0x06
     d5a:	8f 81       	ldd	r24, Y+7	; 0x07
     d5c:	98 85       	ldd	r25, Y+8	; 0x08
     d5e:	0e 94 47 08 	call	0x108e	; 0x108e <__fixunssfsi>
     d62:	cb 57       	subi	r28, 0x7B	; 123
     d64:	df 4f       	sbci	r29, 0xFF	; 255
     d66:	68 83       	st	Y, r22
     d68:	79 83       	std	Y+1, r23	; 0x01
     d6a:	8a 83       	std	Y+2, r24	; 0x02
     d6c:	9b 83       	std	Y+3, r25	; 0x03
     d6e:	c5 58       	subi	r28, 0x85	; 133
     d70:	d0 40       	sbci	r29, 0x00	; 0
     d72:	cb 57       	subi	r28, 0x7B	; 123
     d74:	df 4f       	sbci	r29, 0xFF	; 255
     d76:	e8 81       	ld	r30, Y
     d78:	f9 81       	ldd	r31, Y+1	; 0x01
     d7a:	c5 58       	subi	r28, 0x85	; 133
     d7c:	d0 40       	sbci	r29, 0x00	; 0
     d7e:	fa 87       	std	Y+10, r31	; 0x0a
     d80:	e9 87       	std	Y+9, r30	; 0x09

00000d82 <.L60>:
     d82:	89 85       	ldd	r24, Y+9	; 0x09
     d84:	9a 85       	ldd	r25, Y+10	; 0x0a
     d86:	9e 87       	std	Y+14, r25	; 0x0e
     d88:	8d 87       	std	Y+13, r24	; 0x0d

00000d8a <.LBB52>:
     d8a:	8d 85       	ldd	r24, Y+13	; 0x0d
     d8c:	9e 85       	ldd	r25, Y+14	; 0x0e

00000d8e <.L1^B8>:
     d8e:	01 97       	sbiw	r24, 0x01	; 1
     d90:	f1 f7       	brne	.-4      	; 0xd8e <.L1^B8>
     d92:	9e 87       	std	Y+14, r25	; 0x0e
     d94:	8d 87       	std	Y+13, r24	; 0x0d

00000d96 <.Loc.262>:
	...

00000d98 <.L65>:
        _delay_ms(500);
        PORTB &= ~(1<<PB0);
     d98:	85 e2       	ldi	r24, 0x25	; 37
     d9a:	90 e0       	ldi	r25, 0x00	; 0
     d9c:	dc 01       	movw	r26, r24
     d9e:	2c 91       	ld	r18, X

00000da0 <.Loc.264>:
     da0:	85 e2       	ldi	r24, 0x25	; 37
     da2:	90 e0       	ldi	r25, 0x00	; 0

00000da4 <.Loc.265>:
     da4:	2e 7f       	andi	r18, 0xFE	; 254
     da6:	fc 01       	movw	r30, r24
     da8:	20 83       	st	Z, r18

00000daa <.Loc.266>:
        PORTB &= ~(1<<PB1);
     daa:	85 e2       	ldi	r24, 0x25	; 37
     dac:	90 e0       	ldi	r25, 0x00	; 0
     dae:	dc 01       	movw	r26, r24
     db0:	2c 91       	ld	r18, X

00000db2 <.Loc.267>:
     db2:	85 e2       	ldi	r24, 0x25	; 37
     db4:	90 e0       	ldi	r25, 0x00	; 0

00000db6 <.Loc.268>:
     db6:	2d 7f       	andi	r18, 0xFD	; 253
     db8:	fc 01       	movw	r30, r24
     dba:	20 83       	st	Z, r18

00000dbc <.Loc.269>:
}
     dbc:	00 00       	nop
     dbe:	c8 57       	subi	r28, 0x78	; 120
     dc0:	df 4f       	sbci	r29, 0xFF	; 255
     dc2:	0f b6       	in	r0, 0x3f	; 63
     dc4:	f8 94       	cli
     dc6:	de bf       	out	0x3e, r29	; 62
     dc8:	0f be       	out	0x3f, r0	; 63
     dca:	cd bf       	out	0x3d, r28	; 61
     dcc:	df 91       	pop	r29
     dce:	cf 91       	pop	r28
     dd0:	08 95       	ret

00000dd2 <stuurlinks>:

void stuurlinks()
{
     dd2:	cf 93       	push	r28
     dd4:	df 93       	push	r29
     dd6:	cd b7       	in	r28, 0x3d	; 61
     dd8:	de b7       	in	r29, 0x3e	; 62

00000dda <.Loc.271>:
    servo1_set_percentage(-20);
     dda:	8c ee       	ldi	r24, 0xEC	; 236
     ddc:	0e 94 74 02 	call	0x4e8	; 0x4e8 <servo1_set_percentage>

00000de0 <.Loc.272>:
}
     de0:	00 00       	nop
     de2:	df 91       	pop	r29
     de4:	cf 91       	pop	r28
     de6:	08 95       	ret

00000de8 <stuurrechts>:

void stuurrechts()
{
     de8:	cf 93       	push	r28
     dea:	df 93       	push	r29
     dec:	cd b7       	in	r28, 0x3d	; 61
     dee:	de b7       	in	r29, 0x3e	; 62

00000df0 <.Loc.274>:
   servo1_set_percentage(20);
     df0:	84 e1       	ldi	r24, 0x14	; 20
     df2:	0e 94 74 02 	call	0x4e8	; 0x4e8 <servo1_set_percentage>

00000df6 <.Loc.275>:
}
     df6:	00 00       	nop
     df8:	df 91       	pop	r29
     dfa:	cf 91       	pop	r28
     dfc:	08 95       	ret

00000dfe <stuurvooruit>:

void stuurvooruit()
{
     dfe:	cf 93       	push	r28
     e00:	df 93       	push	r29
     e02:	cd b7       	in	r28, 0x3d	; 61
     e04:	de b7       	in	r29, 0x3e	; 62

00000e06 <.Loc.277>:
    servo1_set_percentage(0);
     e06:	80 e0       	ldi	r24, 0x00	; 0
     e08:	0e 94 74 02 	call	0x4e8	; 0x4e8 <servo1_set_percentage>

00000e0c <.Loc.278>:
}
     e0c:	00 00       	nop
     e0e:	df 91       	pop	r29
     e10:	cf 91       	pop	r28
     e12:	08 95       	ret

00000e14 <grotebocht>:

void grotebocht()
{
     e14:	cf 93       	push	r28
     e16:	df 93       	push	r29
     e18:	cd b7       	in	r28, 0x3d	; 61
     e1a:	de b7       	in	r29, 0x3e	; 62

00000e1c <.Loc.280>:

}
     e1c:	00 00       	nop
     e1e:	df 91       	pop	r29
     e20:	cf 91       	pop	r28
     e22:	08 95       	ret

00000e24 <main>:

int main(void)
{
     e24:	cf 93       	push	r28
     e26:	df 93       	push	r29
     e28:	cd b7       	in	r28, 0x3d	; 61
     e2a:	de b7       	in	r29, 0x3e	; 62

00000e2c <.Loc.282>:
    init_h_bridge();    //d12,13
     e2c:	0e 94 53 01 	call	0x2a6	; 0x2a6 <init_h_bridge>

00000e30 <.Loc.283>:
    init_servo();       //d11
     e30:	0e 94 4a 02 	call	0x494	; 0x494 <init_servo>

00000e34 <.Loc.284>:
    init();
     e34:	0e 94 e8 02 	call	0x5d0	; 0x5d0 <init>

00000e38 <.L97>:
    while(1)

    {
        //sensoren checken
        if ((PINF & (1<<PF0))==0)       //beide zijkanten checken, rechtdoor
     e38:	8f e2       	ldi	r24, 0x2F	; 47
     e3a:	90 e0       	ldi	r25, 0x00	; 0
     e3c:	fc 01       	movw	r30, r24
     e3e:	80 81       	ld	r24, Z

00000e40 <.Loc.286>:
     e40:	88 2f       	mov	r24, r24
     e42:	90 e0       	ldi	r25, 0x00	; 0
     e44:	81 70       	andi	r24, 0x01	; 1
     e46:	99 27       	eor	r25, r25

00000e48 <.Loc.287>:
     e48:	00 97       	sbiw	r24, 0x00	; 0
     e4a:	81 f4       	brne	.+32     	; 0xe6c <.L87>

00000e4c <.Loc.288>:
        {
        if ((PINF & (1<<PF1))==0)
     e4c:	8f e2       	ldi	r24, 0x2F	; 47
     e4e:	90 e0       	ldi	r25, 0x00	; 0
     e50:	fc 01       	movw	r30, r24
     e52:	80 81       	ld	r24, Z

00000e54 <.Loc.289>:
     e54:	88 2f       	mov	r24, r24
     e56:	90 e0       	ldi	r25, 0x00	; 0
     e58:	82 70       	andi	r24, 0x02	; 2
     e5a:	99 27       	eor	r25, r25

00000e5c <.Loc.290>:
     e5c:	00 97       	sbiw	r24, 0x00	; 0
     e5e:	31 f4       	brne	.+12     	; 0xe6c <.L87>

00000e60 <.Loc.291>:
        {
            state = 1;
     e60:	81 e0       	ldi	r24, 0x01	; 1
     e62:	90 e0       	ldi	r25, 0x00	; 0
     e64:	90 93 01 02 	sts	0x0201, r25	; 0x800201 <state+0x1>
     e68:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <state>

00000e6c <.L87>:
        }
        }
        if (PINF & (1<<PF0))                   //links checken, rechts corigeren
     e6c:	8f e2       	ldi	r24, 0x2F	; 47
     e6e:	90 e0       	ldi	r25, 0x00	; 0
     e70:	fc 01       	movw	r30, r24
     e72:	80 81       	ld	r24, Z

00000e74 <.Loc.293>:
     e74:	88 2f       	mov	r24, r24
     e76:	90 e0       	ldi	r25, 0x00	; 0
     e78:	81 70       	andi	r24, 0x01	; 1
     e7a:	99 27       	eor	r25, r25

00000e7c <.Loc.294>:
     e7c:	00 97       	sbiw	r24, 0x00	; 0
     e7e:	31 f0       	breq	.+12     	; 0xe8c <.L88>

00000e80 <.Loc.295>:
        {
            state = 5;
     e80:	85 e0       	ldi	r24, 0x05	; 5
     e82:	90 e0       	ldi	r25, 0x00	; 0
     e84:	90 93 01 02 	sts	0x0201, r25	; 0x800201 <state+0x1>
     e88:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <state>

00000e8c <.L88>:
        }
        if (PINF & (1<<PF1))                    //rechts checken, links corigeren
     e8c:	8f e2       	ldi	r24, 0x2F	; 47
     e8e:	90 e0       	ldi	r25, 0x00	; 0
     e90:	fc 01       	movw	r30, r24
     e92:	80 81       	ld	r24, Z

00000e94 <.Loc.297>:
     e94:	88 2f       	mov	r24, r24
     e96:	90 e0       	ldi	r25, 0x00	; 0
     e98:	82 70       	andi	r24, 0x02	; 2
     e9a:	99 27       	eor	r25, r25

00000e9c <.Loc.298>:
     e9c:	00 97       	sbiw	r24, 0x00	; 0
     e9e:	31 f0       	breq	.+12     	; 0xeac <.L89>

00000ea0 <.Loc.299>:
        {
            state = 4;
     ea0:	84 e0       	ldi	r24, 0x04	; 4
     ea2:	90 e0       	ldi	r25, 0x00	; 0
     ea4:	90 93 01 02 	sts	0x0201, r25	; 0x800201 <state+0x1>
     ea8:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <state>

00000eac <.L89>:
        }
            if (PINF & (1<<PF5)==0)                 //balk checken, grote bocht
     eac:	8f e2       	ldi	r24, 0x2F	; 47
     eae:	90 e0       	ldi	r25, 0x00	; 0
     eb0:	fc 01       	movw	r30, r24
     eb2:	80 81       	ld	r24, Z

00000eb4 <.Loc.301>:
        {
        state = 3;
        }

        if (PINF & (1<<PF4)==0)                        //voren iets, staan stil
     eb4:	8f e2       	ldi	r24, 0x2F	; 47
     eb6:	90 e0       	ldi	r25, 0x00	; 0
     eb8:	fc 01       	movw	r30, r24
     eba:	80 81       	ld	r24, Z

00000ebc <.Loc.302>:
        {
            state = 0;
        }
        state = 1;
     ebc:	81 e0       	ldi	r24, 0x01	; 1
     ebe:	90 e0       	ldi	r25, 0x00	; 0
     ec0:	90 93 01 02 	sts	0x0201, r25	; 0x800201 <state+0x1>
     ec4:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <state>

00000ec8 <.Loc.303>:
        switch(state)
     ec8:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <state>
     ecc:	90 91 01 02 	lds	r25, 0x0201	; 0x800201 <state+0x1>
     ed0:	85 30       	cpi	r24, 0x05	; 5
     ed2:	91 05       	cpc	r25, r1
     ed4:	e1 f1       	breq	.+120    	; 0xf4e <.L90>
     ed6:	85 30       	cpi	r24, 0x05	; 5
     ed8:	91 05       	cpc	r25, r1
     eda:	11 f0       	breq	.+4      	; 0xee0 <L0^A+0x2>

00000edc <L0^A>:
     edc:	0c f0       	brlt	.+2      	; 0xee0 <L0^A+0x2>

00000ede <L0^A>:
     ede:	ac cf       	rjmp	.-168    	; 0xe38 <.L97>
     ee0:	84 30       	cpi	r24, 0x04	; 4
     ee2:	91 05       	cpc	r25, r1
     ee4:	79 f1       	breq	.+94     	; 0xf44 <.L92>
     ee6:	84 30       	cpi	r24, 0x04	; 4
     ee8:	91 05       	cpc	r25, r1
     eea:	11 f0       	breq	.+4      	; 0xef0 <L0^A+0x2>

00000eec <L0^A>:
     eec:	0c f0       	brlt	.+2      	; 0xef0 <L0^A+0x2>

00000eee <L0^A>:
     eee:	a4 cf       	rjmp	.-184    	; 0xe38 <.L97>
     ef0:	83 30       	cpi	r24, 0x03	; 3
     ef2:	91 05       	cpc	r25, r1
     ef4:	21 f1       	breq	.+72     	; 0xf3e <.L93>
     ef6:	83 30       	cpi	r24, 0x03	; 3
     ef8:	91 05       	cpc	r25, r1
     efa:	11 f0       	breq	.+4      	; 0xf00 <L0^A+0x2>

00000efc <L0^A>:
     efc:	0c f0       	brlt	.+2      	; 0xf00 <L0^A+0x2>

00000efe <L0^A>:
     efe:	9c cf       	rjmp	.-200    	; 0xe38 <.L97>
     f00:	82 30       	cpi	r24, 0x02	; 2
     f02:	91 05       	cpc	r25, r1
     f04:	a9 f0       	breq	.+42     	; 0xf30 <.L94>
     f06:	82 30       	cpi	r24, 0x02	; 2
     f08:	91 05       	cpc	r25, r1
     f0a:	11 f0       	breq	.+4      	; 0xf10 <L0^A+0x2>

00000f0c <L0^A>:
     f0c:	0c f0       	brlt	.+2      	; 0xf10 <L0^A+0x2>

00000f0e <L0^A>:
     f0e:	94 cf       	rjmp	.-216    	; 0xe38 <.L97>
     f10:	00 97       	sbiw	r24, 0x00	; 0
     f12:	21 f0       	breq	.+8      	; 0xf1c <.L95>
     f14:	81 30       	cpi	r24, 0x01	; 1
     f16:	91 05       	cpc	r25, r1
     f18:	21 f0       	breq	.+8      	; 0xf22 <.L96>
     f1a:	1e c0       	rjmp	.+60     	; 0xf58 <.L91>

00000f1c <.L95>:

        {
        case(0):
            rem();
     f1c:	0e 94 df 03 	call	0x7be	; 0x7be <rem>

00000f20 <.Loc.305>:
            break;
     f20:	1b c0       	rjmp	.+54     	; 0xf58 <.L91>

00000f22 <.L96>:

        case(1):
            stuurvooruit();
     f22:	0e 94 ff 06 	call	0xdfe	; 0xdfe <stuurvooruit>

00000f26 <.Loc.307>:
            vroem();
     f26:	0e 94 80 03 	call	0x700	; 0x700 <vroem>

00000f2a <.Loc.308>:
            plantsensoraan();
     f2a:	0e 94 8b 03 	call	0x716	; 0x716 <plantsensoraan>

00000f2e <.Loc.309>:
            //zij sensoren en sturen bijhouden
            break;
     f2e:	14 c0       	rjmp	.+40     	; 0xf58 <.L91>

00000f30 <.L94>:

        case(2):
            rem();
     f30:	0e 94 df 03 	call	0x7be	; 0x7be <rem>

00000f34 <.Loc.311>:
            alarm();
     f34:	0e 94 ea 03 	call	0x7d4	; 0x7d4 <alarm>

00000f38 <.Loc.312>:
            vroem();
     f38:	0e 94 80 03 	call	0x700	; 0x700 <vroem>

00000f3c <.Loc.313>:
            break;
     f3c:	0d c0       	rjmp	.+26     	; 0xf58 <.L91>

00000f3e <.L93>:

        case(3):
            grotebocht();//bocht
     f3e:	0e 94 0a 07 	call	0xe14	; 0xe14 <grotebocht>

00000f42 <.Loc.315>:
            break;
     f42:	0a c0       	rjmp	.+20     	; 0xf58 <.L91>

00000f44 <.L92>:

        case(4):
            stuurlinks();
     f44:	0e 94 e9 06 	call	0xdd2	; 0xdd2 <stuurlinks>

00000f48 <.Loc.317>:
            plantsensoraan();
     f48:	0e 94 8b 03 	call	0x716	; 0x716 <plantsensoraan>

00000f4c <.Loc.318>:
            break;
     f4c:	05 c0       	rjmp	.+10     	; 0xf58 <.L91>

00000f4e <.L90>:

        case(5):
            stuurrechts();
     f4e:	0e 94 f4 06 	call	0xde8	; 0xde8 <stuurrechts>

00000f52 <.Loc.320>:
            plantsensoraan();
     f52:	0e 94 8b 03 	call	0x716	; 0x716 <plantsensoraan>

00000f56 <.Loc.321>:
	...

00000f58 <.L91>:
        if ((PINF & (1<<PF0))==0)       //beide zijkanten checken, rechtdoor
     f58:	6f cf       	rjmp	.-290    	; 0xe38 <.L97>

00000f5a <__divmodhi4>:
     f5a:	97 fb       	bst	r25, 7

00000f5c <.Loc.1>:
     f5c:	07 2e       	mov	r0, r23

00000f5e <.Loc.2>:
     f5e:	16 f4       	brtc	.+4      	; 0xf64 <.L^B1>

00000f60 <.Loc.3>:
     f60:	00 94       	com	r0

00000f62 <.Loc.4>:
     f62:	07 d0       	rcall	.+14     	; 0xf72 <__divmodhi4_neg1>

00000f64 <.L^B1>:
     f64:	77 fd       	sbrc	r23, 7

00000f66 <.Loc.6>:
     f66:	09 d0       	rcall	.+18     	; 0xf7a <__divmodhi4_neg2>

00000f68 <.Loc.7>:
     f68:	0e 94 c1 07 	call	0xf82	; 0xf82 <__udivmodhi4>

00000f6c <.Loc.8>:
     f6c:	07 fc       	sbrc	r0, 7

00000f6e <.Loc.9>:
     f6e:	05 d0       	rcall	.+10     	; 0xf7a <__divmodhi4_neg2>

00000f70 <.Loc.10>:
     f70:	3e f4       	brtc	.+14     	; 0xf80 <__divmodhi4_exit>

00000f72 <__divmodhi4_neg1>:
     f72:	90 95       	com	r25

00000f74 <.Loc.12>:
     f74:	81 95       	neg	r24

00000f76 <.Loc.13>:
     f76:	9f 4f       	sbci	r25, 0xFF	; 255

00000f78 <.Loc.14>:
     f78:	08 95       	ret

00000f7a <__divmodhi4_neg2>:
     f7a:	70 95       	com	r23

00000f7c <.Loc.16>:
     f7c:	61 95       	neg	r22

00000f7e <.Loc.17>:
     f7e:	7f 4f       	sbci	r23, 0xFF	; 255

00000f80 <__divmodhi4_exit>:
     f80:	08 95       	ret

00000f82 <__udivmodhi4>:
     f82:	aa 1b       	sub	r26, r26

00000f84 <.Loc.1>:
     f84:	bb 1b       	sub	r27, r27

00000f86 <.Loc.2>:
     f86:	51 e1       	ldi	r21, 0x11	; 17

00000f88 <.Loc.3>:
     f88:	07 c0       	rjmp	.+14     	; 0xf98 <__udivmodhi4_ep>

00000f8a <__udivmodhi4_loop>:
     f8a:	aa 1f       	adc	r26, r26

00000f8c <.Loc.5>:
     f8c:	bb 1f       	adc	r27, r27

00000f8e <.Loc.6>:
     f8e:	a6 17       	cp	r26, r22

00000f90 <.Loc.7>:
     f90:	b7 07       	cpc	r27, r23

00000f92 <.Loc.8>:
     f92:	10 f0       	brcs	.+4      	; 0xf98 <__udivmodhi4_ep>

00000f94 <.Loc.9>:
     f94:	a6 1b       	sub	r26, r22

00000f96 <.Loc.10>:
     f96:	b7 0b       	sbc	r27, r23

00000f98 <__udivmodhi4_ep>:
     f98:	88 1f       	adc	r24, r24

00000f9a <.Loc.12>:
     f9a:	99 1f       	adc	r25, r25

00000f9c <.Loc.13>:
     f9c:	5a 95       	dec	r21

00000f9e <.Loc.14>:
     f9e:	a9 f7       	brne	.-22     	; 0xf8a <__udivmodhi4_loop>

00000fa0 <.Loc.15>:
     fa0:	80 95       	com	r24

00000fa2 <.Loc.16>:
     fa2:	90 95       	com	r25

00000fa4 <.Loc.17>:
     fa4:	bc 01       	movw	r22, r24

00000fa6 <.Loc.18>:
     fa6:	cd 01       	movw	r24, r26

00000fa8 <.Loc.19>:
     fa8:	08 95       	ret

00000faa <__subsf3>:
     faa:	50 58       	subi	r21, 0x80	; 128

00000fac <__addsf3>:
     fac:	bb 27       	eor	r27, r27
     fae:	aa 27       	eor	r26, r26
     fb0:	0e 94 ed 07 	call	0xfda	; 0xfda <__addsf3x>
     fb4:	0c 94 ee 08 	jmp	0x11dc	; 0x11dc <__fp_round>

00000fb8 <.L^B1>:
     fb8:	0e 94 e0 08 	call	0x11c0	; 0x11c0 <__fp_pscA>
     fbc:	38 f0       	brcs	.+14     	; 0xfcc <.L_nan>
     fbe:	0e 94 e7 08 	call	0x11ce	; 0x11ce <__fp_pscB>
     fc2:	20 f0       	brcs	.+8      	; 0xfcc <.L_nan>
     fc4:	39 f4       	brne	.+14     	; 0xfd4 <.L_inf>
     fc6:	9f 3f       	cpi	r25, 0xFF	; 255
     fc8:	19 f4       	brne	.+6      	; 0xfd0 <.L_infB>
     fca:	26 f4       	brtc	.+8      	; 0xfd4 <.L_inf>

00000fcc <.L_nan>:
     fcc:	0c 94 dd 08 	jmp	0x11ba	; 0x11ba <__fp_nan>

00000fd0 <.L_infB>:
     fd0:	0e f4       	brtc	.+2      	; 0xfd4 <.L_inf>
     fd2:	e0 95       	com	r30

00000fd4 <.L_inf>:
     fd4:	e7 fb       	bst	r30, 7
     fd6:	0c 94 d7 08 	jmp	0x11ae	; 0x11ae <__fp_inf>

00000fda <__addsf3x>:
     fda:	e9 2f       	mov	r30, r25
     fdc:	0e 94 ff 08 	call	0x11fe	; 0x11fe <__fp_split3>
     fe0:	58 f3       	brcs	.-42     	; 0xfb8 <.L^B1>
     fe2:	ba 17       	cp	r27, r26
     fe4:	62 07       	cpc	r22, r18
     fe6:	73 07       	cpc	r23, r19
     fe8:	84 07       	cpc	r24, r20
     fea:	95 07       	cpc	r25, r21
     fec:	20 f0       	brcs	.+8      	; 0xff6 <.L2^B1>
     fee:	79 f4       	brne	.+30     	; 0x100e <.L4^B1>
     ff0:	a6 f5       	brtc	.+104    	; 0x105a <.L_add>
     ff2:	0c 94 21 09 	jmp	0x1242	; 0x1242 <__fp_zero>

00000ff6 <.L2^B1>:
     ff6:	0e f4       	brtc	.+2      	; 0xffa <.L3^B1>
     ff8:	e0 95       	com	r30

00000ffa <.L3^B1>:
     ffa:	0b 2e       	mov	r0, r27
     ffc:	ba 2f       	mov	r27, r26
     ffe:	a0 2d       	mov	r26, r0
    1000:	0b 01       	movw	r0, r22
    1002:	b9 01       	movw	r22, r18
    1004:	90 01       	movw	r18, r0
    1006:	0c 01       	movw	r0, r24
    1008:	ca 01       	movw	r24, r20
    100a:	a0 01       	movw	r20, r0
    100c:	11 24       	eor	r1, r1

0000100e <.L4^B1>:
    100e:	ff 27       	eor	r31, r31
    1010:	59 1b       	sub	r21, r25

00001012 <.L5^B1>:
    1012:	99 f0       	breq	.+38     	; 0x103a <.L7^B1>
    1014:	59 3f       	cpi	r21, 0xF9	; 249
    1016:	50 f4       	brcc	.+20     	; 0x102c <.L6^B1>
    1018:	50 3e       	cpi	r21, 0xE0	; 224
    101a:	68 f1       	brcs	.+90     	; 0x1076 <.L_ret>
    101c:	1a 16       	cp	r1, r26
    101e:	f0 40       	sbci	r31, 0x00	; 0
    1020:	a2 2f       	mov	r26, r18
    1022:	23 2f       	mov	r18, r19
    1024:	34 2f       	mov	r19, r20
    1026:	44 27       	eor	r20, r20
    1028:	58 5f       	subi	r21, 0xF8	; 248
    102a:	f3 cf       	rjmp	.-26     	; 0x1012 <.L5^B1>

0000102c <.L6^B1>:
    102c:	46 95       	lsr	r20
    102e:	37 95       	ror	r19
    1030:	27 95       	ror	r18
    1032:	a7 95       	ror	r26
    1034:	f0 40       	sbci	r31, 0x00	; 0
    1036:	53 95       	inc	r21
    1038:	c9 f7       	brne	.-14     	; 0x102c <.L6^B1>

0000103a <.L7^B1>:
    103a:	7e f4       	brtc	.+30     	; 0x105a <.L_add>
    103c:	1f 16       	cp	r1, r31
    103e:	ba 0b       	sbc	r27, r26
    1040:	62 0b       	sbc	r22, r18
    1042:	73 0b       	sbc	r23, r19
    1044:	84 0b       	sbc	r24, r20
    1046:	ba f0       	brmi	.+46     	; 0x1076 <.L_ret>

00001048 <.L8^B1>:
    1048:	91 50       	subi	r25, 0x01	; 1
    104a:	a1 f0       	breq	.+40     	; 0x1074 <.L9^B1>
    104c:	ff 0f       	add	r31, r31
    104e:	bb 1f       	adc	r27, r27
    1050:	66 1f       	adc	r22, r22
    1052:	77 1f       	adc	r23, r23
    1054:	88 1f       	adc	r24, r24
    1056:	c2 f7       	brpl	.-16     	; 0x1048 <.L8^B1>
    1058:	0e c0       	rjmp	.+28     	; 0x1076 <.L_ret>

0000105a <.L_add>:
    105a:	ba 0f       	add	r27, r26
    105c:	62 1f       	adc	r22, r18
    105e:	73 1f       	adc	r23, r19
    1060:	84 1f       	adc	r24, r20
    1062:	48 f4       	brcc	.+18     	; 0x1076 <.L_ret>
    1064:	87 95       	ror	r24
    1066:	77 95       	ror	r23
    1068:	67 95       	ror	r22
    106a:	b7 95       	ror	r27
    106c:	f7 95       	ror	r31
    106e:	9e 3f       	cpi	r25, 0xFE	; 254
    1070:	08 f0       	brcs	.+2      	; 0x1074 <.L9^B1>
    1072:	b0 cf       	rjmp	.-160    	; 0xfd4 <.L_inf>

00001074 <.L9^B1>:
    1074:	93 95       	inc	r25

00001076 <.L_ret>:
    1076:	88 0f       	add	r24, r24
    1078:	08 f0       	brcs	.+2      	; 0x107c <.L1^B1>
    107a:	99 27       	eor	r25, r25

0000107c <.L1^B1>:
    107c:	ee 0f       	add	r30, r30
    107e:	97 95       	ror	r25
    1080:	87 95       	ror	r24
    1082:	08 95       	ret

00001084 <__cmpsf2>:
    1084:	0e 94 b3 08 	call	0x1166	; 0x1166 <__fp_cmp>
    1088:	08 f4       	brcc	.+2      	; 0x108c <.L1^B1>
    108a:	81 e0       	ldi	r24, 0x01	; 1

0000108c <.L1^B1>:
    108c:	08 95       	ret

0000108e <__fixunssfsi>:
    108e:	0e 94 07 09 	call	0x120e	; 0x120e <__fp_splitA>
    1092:	88 f0       	brcs	.+34     	; 0x10b6 <.L_err>
    1094:	9f 57       	subi	r25, 0x7F	; 127
    1096:	98 f0       	brcs	.+38     	; 0x10be <.L_zr>
    1098:	b9 2f       	mov	r27, r25
    109a:	99 27       	eor	r25, r25
    109c:	b7 51       	subi	r27, 0x17	; 23
    109e:	b0 f0       	brcs	.+44     	; 0x10cc <.L4^B1>
    10a0:	e1 f0       	breq	.+56     	; 0x10da <.L_sign>

000010a2 <.L1^B1>:
    10a2:	66 0f       	add	r22, r22
    10a4:	77 1f       	adc	r23, r23
    10a6:	88 1f       	adc	r24, r24
    10a8:	99 1f       	adc	r25, r25
    10aa:	1a f0       	brmi	.+6      	; 0x10b2 <.L2^B1>
    10ac:	ba 95       	dec	r27
    10ae:	c9 f7       	brne	.-14     	; 0x10a2 <.L1^B1>
    10b0:	14 c0       	rjmp	.+40     	; 0x10da <.L_sign>

000010b2 <.L2^B1>:
    10b2:	b1 30       	cpi	r27, 0x01	; 1
    10b4:	91 f0       	breq	.+36     	; 0x10da <.L_sign>

000010b6 <.L_err>:
    10b6:	0e 94 21 09 	call	0x1242	; 0x1242 <__fp_zero>
    10ba:	b1 e0       	ldi	r27, 0x01	; 1
    10bc:	08 95       	ret

000010be <.L_zr>:
    10be:	0c 94 21 09 	jmp	0x1242	; 0x1242 <__fp_zero>

000010c2 <.L3^B1>:
    10c2:	67 2f       	mov	r22, r23
    10c4:	78 2f       	mov	r23, r24
    10c6:	88 27       	eor	r24, r24
    10c8:	b8 5f       	subi	r27, 0xF8	; 248
    10ca:	39 f0       	breq	.+14     	; 0x10da <.L_sign>

000010cc <.L4^B1>:
    10cc:	b9 3f       	cpi	r27, 0xF9	; 249
    10ce:	cc f3       	brlt	.-14     	; 0x10c2 <.L3^B1>

000010d0 <.L5^B1>:
    10d0:	86 95       	lsr	r24
    10d2:	77 95       	ror	r23
    10d4:	67 95       	ror	r22
    10d6:	b3 95       	inc	r27
    10d8:	d9 f7       	brne	.-10     	; 0x10d0 <.L5^B1>

000010da <.L_sign>:
    10da:	3e f4       	brtc	.+14     	; 0x10ea <.L6^B1>
    10dc:	90 95       	com	r25
    10de:	80 95       	com	r24
    10e0:	70 95       	com	r23
    10e2:	61 95       	neg	r22
    10e4:	7f 4f       	sbci	r23, 0xFF	; 255
    10e6:	8f 4f       	sbci	r24, 0xFF	; 255
    10e8:	9f 4f       	sbci	r25, 0xFF	; 255

000010ea <.L6^B1>:
    10ea:	08 95       	ret

000010ec <__floatunsisf>:
    10ec:	e8 94       	clt
    10ee:	09 c0       	rjmp	.+18     	; 0x1102 <.L1^B1>

000010f0 <__floatsisf>:
    10f0:	97 fb       	bst	r25, 7
    10f2:	3e f4       	brtc	.+14     	; 0x1102 <.L1^B1>
    10f4:	90 95       	com	r25
    10f6:	80 95       	com	r24
    10f8:	70 95       	com	r23
    10fa:	61 95       	neg	r22
    10fc:	7f 4f       	sbci	r23, 0xFF	; 255
    10fe:	8f 4f       	sbci	r24, 0xFF	; 255
    1100:	9f 4f       	sbci	r25, 0xFF	; 255

00001102 <.L1^B1>:
    1102:	99 23       	and	r25, r25
    1104:	a9 f0       	breq	.+42     	; 0x1130 <.L4^B1>
    1106:	f9 2f       	mov	r31, r25
    1108:	96 e9       	ldi	r25, 0x96	; 150
    110a:	bb 27       	eor	r27, r27

0000110c <.L2^B1>:
    110c:	93 95       	inc	r25
    110e:	f6 95       	lsr	r31
    1110:	87 95       	ror	r24
    1112:	77 95       	ror	r23
    1114:	67 95       	ror	r22
    1116:	b7 95       	ror	r27
    1118:	f1 11       	cpse	r31, r1
    111a:	f8 cf       	rjmp	.-16     	; 0x110c <.L2^B1>
    111c:	fa f4       	brpl	.+62     	; 0x115c <.L_pack>
    111e:	bb 0f       	add	r27, r27
    1120:	11 f4       	brne	.+4      	; 0x1126 <.L3^B1>
    1122:	60 ff       	sbrs	r22, 0
    1124:	1b c0       	rjmp	.+54     	; 0x115c <.L_pack>

00001126 <.L3^B1>:
    1126:	6f 5f       	subi	r22, 0xFF	; 255
    1128:	7f 4f       	sbci	r23, 0xFF	; 255
    112a:	8f 4f       	sbci	r24, 0xFF	; 255
    112c:	9f 4f       	sbci	r25, 0xFF	; 255
    112e:	16 c0       	rjmp	.+44     	; 0x115c <.L_pack>

00001130 <.L4^B1>:
    1130:	88 23       	and	r24, r24
    1132:	11 f0       	breq	.+4      	; 0x1138 <.L5^B1>
    1134:	96 e9       	ldi	r25, 0x96	; 150
    1136:	11 c0       	rjmp	.+34     	; 0x115a <.L8^B1>

00001138 <.L5^B1>:
    1138:	77 23       	and	r23, r23
    113a:	21 f0       	breq	.+8      	; 0x1144 <.L6^B1>
    113c:	9e e8       	ldi	r25, 0x8E	; 142
    113e:	87 2f       	mov	r24, r23
    1140:	76 2f       	mov	r23, r22
    1142:	05 c0       	rjmp	.+10     	; 0x114e <.L7^B1>

00001144 <.L6^B1>:
    1144:	66 23       	and	r22, r22
    1146:	71 f0       	breq	.+28     	; 0x1164 <.L9^B1>
    1148:	96 e8       	ldi	r25, 0x86	; 134
    114a:	86 2f       	mov	r24, r22
    114c:	70 e0       	ldi	r23, 0x00	; 0

0000114e <.L7^B1>:
    114e:	60 e0       	ldi	r22, 0x00	; 0
    1150:	2a f0       	brmi	.+10     	; 0x115c <.L_pack>

00001152 <.L10^B1>:
    1152:	9a 95       	dec	r25
    1154:	66 0f       	add	r22, r22
    1156:	77 1f       	adc	r23, r23
    1158:	88 1f       	adc	r24, r24

0000115a <.L8^B1>:
    115a:	da f7       	brpl	.-10     	; 0x1152 <.L10^B1>

0000115c <.L_pack>:
    115c:	88 0f       	add	r24, r24
    115e:	96 95       	lsr	r25
    1160:	87 95       	ror	r24
    1162:	97 f9       	bld	r25, 7

00001164 <.L9^B1>:
    1164:	08 95       	ret

00001166 <__fp_cmp>:
    1166:	99 0f       	add	r25, r25
    1168:	00 08       	sbc	r0, r0
    116a:	55 0f       	add	r21, r21
    116c:	aa 0b       	sbc	r26, r26
    116e:	e0 e8       	ldi	r30, 0x80	; 128
    1170:	fe ef       	ldi	r31, 0xFE	; 254
    1172:	16 16       	cp	r1, r22
    1174:	17 06       	cpc	r1, r23
    1176:	e8 07       	cpc	r30, r24
    1178:	f9 07       	cpc	r31, r25
    117a:	c0 f0       	brcs	.+48     	; 0x11ac <.L9^B1>
    117c:	12 16       	cp	r1, r18
    117e:	13 06       	cpc	r1, r19
    1180:	e4 07       	cpc	r30, r20
    1182:	f5 07       	cpc	r31, r21
    1184:	98 f0       	brcs	.+38     	; 0x11ac <.L9^B1>
    1186:	62 1b       	sub	r22, r18
    1188:	73 0b       	sbc	r23, r19
    118a:	84 0b       	sbc	r24, r20
    118c:	95 0b       	sbc	r25, r21
    118e:	39 f4       	brne	.+14     	; 0x119e <.L1^B1>
    1190:	0a 26       	eor	r0, r26
    1192:	61 f0       	breq	.+24     	; 0x11ac <.L9^B1>
    1194:	23 2b       	or	r18, r19
    1196:	24 2b       	or	r18, r20
    1198:	25 2b       	or	r18, r21
    119a:	21 f4       	brne	.+8      	; 0x11a4 <.L2^B1>
    119c:	08 95       	ret

0000119e <.L1^B1>:
    119e:	0a 26       	eor	r0, r26
    11a0:	09 f4       	brne	.+2      	; 0x11a4 <.L2^B1>
    11a2:	a1 40       	sbci	r26, 0x01	; 1

000011a4 <.L2^B1>:
    11a4:	a6 95       	lsr	r26
    11a6:	8f ef       	ldi	r24, 0xFF	; 255
    11a8:	81 1d       	adc	r24, r1
    11aa:	81 1d       	adc	r24, r1

000011ac <.L9^B1>:
    11ac:	08 95       	ret

000011ae <__fp_inf>:
    11ae:	97 f9       	bld	r25, 7
    11b0:	9f 67       	ori	r25, 0x7F	; 127
    11b2:	80 e8       	ldi	r24, 0x80	; 128
    11b4:	70 e0       	ldi	r23, 0x00	; 0
    11b6:	60 e0       	ldi	r22, 0x00	; 0
    11b8:	08 95       	ret

000011ba <__fp_nan>:
    11ba:	9f ef       	ldi	r25, 0xFF	; 255
    11bc:	80 ec       	ldi	r24, 0xC0	; 192
    11be:	08 95       	ret

000011c0 <__fp_pscA>:
    11c0:	00 24       	eor	r0, r0
    11c2:	0a 94       	dec	r0
    11c4:	16 16       	cp	r1, r22
    11c6:	17 06       	cpc	r1, r23
    11c8:	18 06       	cpc	r1, r24
    11ca:	09 06       	cpc	r0, r25
    11cc:	08 95       	ret

000011ce <__fp_pscB>:
    11ce:	00 24       	eor	r0, r0
    11d0:	0a 94       	dec	r0
    11d2:	12 16       	cp	r1, r18
    11d4:	13 06       	cpc	r1, r19
    11d6:	14 06       	cpc	r1, r20
    11d8:	05 06       	cpc	r0, r21
    11da:	08 95       	ret

000011dc <__fp_round>:
    11dc:	09 2e       	mov	r0, r25
    11de:	03 94       	inc	r0
    11e0:	00 0c       	add	r0, r0
    11e2:	11 f4       	brne	.+4      	; 0x11e8 <.L1^B1>
    11e4:	88 23       	and	r24, r24
    11e6:	52 f0       	brmi	.+20     	; 0x11fc <.L3^B1>

000011e8 <.L1^B1>:
    11e8:	bb 0f       	add	r27, r27
    11ea:	40 f4       	brcc	.+16     	; 0x11fc <.L3^B1>
    11ec:	bf 2b       	or	r27, r31
    11ee:	11 f4       	brne	.+4      	; 0x11f4 <.L2^B1>
    11f0:	60 ff       	sbrs	r22, 0
    11f2:	04 c0       	rjmp	.+8      	; 0x11fc <.L3^B1>

000011f4 <.L2^B1>:
    11f4:	6f 5f       	subi	r22, 0xFF	; 255
    11f6:	7f 4f       	sbci	r23, 0xFF	; 255
    11f8:	8f 4f       	sbci	r24, 0xFF	; 255
    11fa:	9f 4f       	sbci	r25, 0xFF	; 255

000011fc <.L3^B1>:
    11fc:	08 95       	ret

000011fe <__fp_split3>:
    11fe:	57 fd       	sbrc	r21, 7
    1200:	90 58       	subi	r25, 0x80	; 128
    1202:	44 0f       	add	r20, r20
    1204:	55 1f       	adc	r21, r21
    1206:	59 f0       	breq	.+22     	; 0x121e <.L4^B1>
    1208:	5f 3f       	cpi	r21, 0xFF	; 255
    120a:	71 f0       	breq	.+28     	; 0x1228 <.L5^B1>

0000120c <.L1^B1>:
    120c:	47 95       	ror	r20

0000120e <__fp_splitA>:
    120e:	88 0f       	add	r24, r24
    1210:	97 fb       	bst	r25, 7
    1212:	99 1f       	adc	r25, r25
    1214:	61 f0       	breq	.+24     	; 0x122e <.L6^B1>
    1216:	9f 3f       	cpi	r25, 0xFF	; 255
    1218:	79 f0       	breq	.+30     	; 0x1238 <.L7^B1>

0000121a <.L3^B1>:
    121a:	87 95       	ror	r24
    121c:	08 95       	ret

0000121e <.L4^B1>:
    121e:	12 16       	cp	r1, r18
    1220:	13 06       	cpc	r1, r19
    1222:	14 06       	cpc	r1, r20
    1224:	55 1f       	adc	r21, r21
    1226:	f2 cf       	rjmp	.-28     	; 0x120c <.L1^B1>

00001228 <.L5^B1>:
    1228:	46 95       	lsr	r20
    122a:	f1 df       	rcall	.-30     	; 0x120e <__fp_splitA>
    122c:	08 c0       	rjmp	.+16     	; 0x123e <.L8^B1>

0000122e <.L6^B1>:
    122e:	16 16       	cp	r1, r22
    1230:	17 06       	cpc	r1, r23
    1232:	18 06       	cpc	r1, r24
    1234:	99 1f       	adc	r25, r25
    1236:	f1 cf       	rjmp	.-30     	; 0x121a <.L3^B1>

00001238 <.L7^B1>:
    1238:	86 95       	lsr	r24
    123a:	71 05       	cpc	r23, r1
    123c:	61 05       	cpc	r22, r1

0000123e <.L8^B1>:
    123e:	08 94       	sec
    1240:	08 95       	ret

00001242 <__fp_zero>:
    1242:	e8 94       	clt

00001244 <__fp_szero>:
    1244:	bb 27       	eor	r27, r27
    1246:	66 27       	eor	r22, r22
    1248:	77 27       	eor	r23, r23
    124a:	cb 01       	movw	r24, r22
    124c:	97 f9       	bld	r25, 7
    124e:	08 95       	ret

00001250 <__gesf2>:
    1250:	0e 94 b3 08 	call	0x1166	; 0x1166 <__fp_cmp>
    1254:	08 f4       	brcc	.+2      	; 0x1258 <.L1^B1>
    1256:	8f ef       	ldi	r24, 0xFF	; 255

00001258 <.L1^B1>:
    1258:	08 95       	ret

0000125a <__mulsf3>:
    125a:	0e 94 40 09 	call	0x1280	; 0x1280 <__mulsf3x>
    125e:	0c 94 ee 08 	jmp	0x11dc	; 0x11dc <__fp_round>

00001262 <.L^B1>:
    1262:	0e 94 e0 08 	call	0x11c0	; 0x11c0 <__fp_pscA>
    1266:	38 f0       	brcs	.+14     	; 0x1276 <.L1^B1>
    1268:	0e 94 e7 08 	call	0x11ce	; 0x11ce <__fp_pscB>
    126c:	20 f0       	brcs	.+8      	; 0x1276 <.L1^B1>
    126e:	95 23       	and	r25, r21
    1270:	11 f0       	breq	.+4      	; 0x1276 <.L1^B1>
    1272:	0c 94 d7 08 	jmp	0x11ae	; 0x11ae <__fp_inf>

00001276 <.L1^B1>:
    1276:	0c 94 dd 08 	jmp	0x11ba	; 0x11ba <__fp_nan>

0000127a <.L2^B1>:
    127a:	11 24       	eor	r1, r1
    127c:	0c 94 22 09 	jmp	0x1244	; 0x1244 <__fp_szero>

00001280 <__mulsf3x>:
    1280:	0e 94 ff 08 	call	0x11fe	; 0x11fe <__fp_split3>
    1284:	70 f3       	brcs	.-36     	; 0x1262 <.L^B1>

00001286 <__mulsf3_pse>:
    1286:	95 9f       	mul	r25, r21
    1288:	c1 f3       	breq	.-16     	; 0x127a <.L2^B1>
    128a:	95 0f       	add	r25, r21
    128c:	50 e0       	ldi	r21, 0x00	; 0
    128e:	55 1f       	adc	r21, r21
    1290:	62 9f       	mul	r22, r18
    1292:	f0 01       	movw	r30, r0
    1294:	72 9f       	mul	r23, r18
    1296:	bb 27       	eor	r27, r27
    1298:	f0 0d       	add	r31, r0
    129a:	b1 1d       	adc	r27, r1
    129c:	63 9f       	mul	r22, r19
    129e:	aa 27       	eor	r26, r26
    12a0:	f0 0d       	add	r31, r0
    12a2:	b1 1d       	adc	r27, r1
    12a4:	aa 1f       	adc	r26, r26
    12a6:	64 9f       	mul	r22, r20
    12a8:	66 27       	eor	r22, r22
    12aa:	b0 0d       	add	r27, r0
    12ac:	a1 1d       	adc	r26, r1
    12ae:	66 1f       	adc	r22, r22
    12b0:	82 9f       	mul	r24, r18
    12b2:	22 27       	eor	r18, r18
    12b4:	b0 0d       	add	r27, r0
    12b6:	a1 1d       	adc	r26, r1
    12b8:	62 1f       	adc	r22, r18
    12ba:	73 9f       	mul	r23, r19
    12bc:	b0 0d       	add	r27, r0
    12be:	a1 1d       	adc	r26, r1
    12c0:	62 1f       	adc	r22, r18
    12c2:	83 9f       	mul	r24, r19
    12c4:	a0 0d       	add	r26, r0
    12c6:	61 1d       	adc	r22, r1
    12c8:	22 1f       	adc	r18, r18
    12ca:	74 9f       	mul	r23, r20
    12cc:	33 27       	eor	r19, r19
    12ce:	a0 0d       	add	r26, r0
    12d0:	61 1d       	adc	r22, r1
    12d2:	23 1f       	adc	r18, r19
    12d4:	84 9f       	mul	r24, r20
    12d6:	60 0d       	add	r22, r0
    12d8:	21 1d       	adc	r18, r1
    12da:	82 2f       	mov	r24, r18
    12dc:	76 2f       	mov	r23, r22
    12de:	6a 2f       	mov	r22, r26
    12e0:	11 24       	eor	r1, r1
    12e2:	9f 57       	subi	r25, 0x7F	; 127
    12e4:	50 40       	sbci	r21, 0x00	; 0
    12e6:	9a f0       	brmi	.+38     	; 0x130e <.L13^B1>
    12e8:	f1 f0       	breq	.+60     	; 0x1326 <.L15^B1>

000012ea <.L10^B1>:
    12ea:	88 23       	and	r24, r24
    12ec:	4a f0       	brmi	.+18     	; 0x1300 <.L11^B1>
    12ee:	ee 0f       	add	r30, r30
    12f0:	ff 1f       	adc	r31, r31
    12f2:	bb 1f       	adc	r27, r27
    12f4:	66 1f       	adc	r22, r22
    12f6:	77 1f       	adc	r23, r23
    12f8:	88 1f       	adc	r24, r24
    12fa:	91 50       	subi	r25, 0x01	; 1
    12fc:	50 40       	sbci	r21, 0x00	; 0
    12fe:	a9 f7       	brne	.-22     	; 0x12ea <.L10^B1>

00001300 <.L11^B1>:
    1300:	9e 3f       	cpi	r25, 0xFE	; 254
    1302:	51 05       	cpc	r21, r1
    1304:	80 f0       	brcs	.+32     	; 0x1326 <.L15^B1>
    1306:	0c 94 d7 08 	jmp	0x11ae	; 0x11ae <__fp_inf>

0000130a <.L12^B1>:
    130a:	0c 94 22 09 	jmp	0x1244	; 0x1244 <__fp_szero>

0000130e <.L13^B1>:
    130e:	5f 3f       	cpi	r21, 0xFF	; 255
    1310:	e4 f3       	brlt	.-8      	; 0x130a <.L12^B1>
    1312:	98 3e       	cpi	r25, 0xE8	; 232
    1314:	d4 f3       	brlt	.-12     	; 0x130a <.L12^B1>

00001316 <.L14^B1>:
    1316:	86 95       	lsr	r24
    1318:	77 95       	ror	r23
    131a:	67 95       	ror	r22
    131c:	b7 95       	ror	r27
    131e:	f7 95       	ror	r31
    1320:	e7 95       	ror	r30
    1322:	9f 5f       	subi	r25, 0xFF	; 255
    1324:	c1 f7       	brne	.-16     	; 0x1316 <.L14^B1>

00001326 <.L15^B1>:
    1326:	fe 2b       	or	r31, r30
    1328:	88 0f       	add	r24, r24
    132a:	91 1d       	adc	r25, r1
    132c:	96 95       	lsr	r25
    132e:	87 95       	ror	r24
    1330:	97 f9       	bld	r25, 7
    1332:	08 95       	ret

00001334 <_exit>:
    1334:	f8 94       	cli

00001336 <__stop_program>:
    1336:	ff cf       	rjmp	.-2      	; 0x1336 <__stop_program>
