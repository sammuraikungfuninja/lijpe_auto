
bin\Debug\basis.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800200  00000b10  00000bc4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000b10  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000002  00800200  00800200  00000bc4  2**0
                  ALLOC
  3 .fuse         00000003  00820000  00820000  00000bc4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  4 .comment      00000012  00000000  00000000  00000bc7  2**0
                  CONTENTS, READONLY
  5 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000bdc  2**2
                  CONTENTS, READONLY, OCTETS
  6 .debug_aranges 000000b8  00000000  00000000  00000c20  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  7 .debug_info   00000ee7  00000000  00000000  00000cd8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  8 .debug_abbrev 00000d10  00000000  00000000  00001bbf  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  9 .debug_line   00000840  00000000  00000000  000028cf  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_frame  00000330  00000000  00000000  00003110  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_str    000005dc  00000000  00000000  00003440  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_line_str 00000153  00000000  00000000  00003a1c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 72 00 	jmp	0xe4	; 0xe4 <__ctors_end>
   4:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
   8:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
   c:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  10:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  14:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  18:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  1c:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  20:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  24:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  28:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  2c:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  30:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  34:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  38:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  3c:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  40:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  44:	0c 94 11 02 	jmp	0x422	; 0x422 <__vector_17>
  48:	0c 94 39 02 	jmp	0x472	; 0x472 <__vector_18>
  4c:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  50:	0c 94 e0 01 	jmp	0x3c0	; 0x3c0 <__vector_20>
  54:	0c 94 f7 00 	jmp	0x1ee	; 0x1ee <__vector_21>
  58:	0c 94 25 01 	jmp	0x24a	; 0x24a <__vector_22>
  5c:	0c 94 88 00 	jmp	0x110	; 0x110 <__vector_23>
  60:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  64:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  68:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  6c:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  70:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  74:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  78:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  7c:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  80:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  84:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  88:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  8c:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  90:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  94:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  98:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  9c:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  a0:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  a4:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  a8:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  ac:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  b0:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  b4:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  b8:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  bc:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  c0:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  c4:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  c8:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  cc:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  d0:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  d4:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  d8:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  dc:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>
  e0:	0c 94 86 00 	jmp	0x10c	; 0x10c <__bad_interrupt>

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_clear_bss>:
  f4:	22 e0       	ldi	r18, 0x02	; 2

000000f6 <.Loc.1>:
  f6:	a0 e0       	ldi	r26, 0x00	; 0

000000f8 <.Loc.2>:
  f8:	b2 e0       	ldi	r27, 0x02	; 2

000000fa <.Loc.3>:
  fa:	01 c0       	rjmp	.+2      	; 0xfe <.Loc.5>

000000fc <.Loc.4>:
  fc:	1d 92       	st	X+, r1

000000fe <.Loc.5>:
  fe:	a2 30       	cpi	r26, 0x02	; 2

00000100 <.Loc.6>:
 100:	b2 07       	cpc	r27, r18

00000102 <.Loc.7>:
 102:	e1 f7       	brne	.-8      	; 0xfc <.Loc.4>

00000104 <L0^A>:
 104:	0e 94 5b 03 	call	0x6b6	; 0x6b6 <main>
 108:	0c 94 86 05 	jmp	0xb0c	; 0xb0c <_exit>

0000010c <__bad_interrupt>:
 10c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000110 <__vector_23>:
#include <avr/io.h>
#include <avr/interrupt.h>
#include "h_bridge.h"

ISR(TIMER0_OVF_vect)
{
 110:	1f 92       	push	r1
 112:	0f 92       	push	r0
 114:	0f b6       	in	r0, 0x3f	; 63
 116:	0f 92       	push	r0
 118:	11 24       	eor	r1, r1
 11a:	0b b6       	in	r0, 0x3b	; 59
 11c:	0f 92       	push	r0
 11e:	2f 93       	push	r18
 120:	8f 93       	push	r24
 122:	9f 93       	push	r25
 124:	ef 93       	push	r30
 126:	ff 93       	push	r31
 128:	cf 93       	push	r28
 12a:	df 93       	push	r29
 12c:	cd b7       	in	r28, 0x3d	; 61
 12e:	de b7       	in	r29, 0x3e	; 62

00000130 <.Loc.1>:
	if (OCR0A == 0 && OCR0B == 0)
 130:	87 e4       	ldi	r24, 0x47	; 71
 132:	90 e0       	ldi	r25, 0x00	; 0
 134:	fc 01       	movw	r30, r24
 136:	80 81       	ld	r24, Z

00000138 <.Loc.2>:
 138:	88 23       	and	r24, r24
 13a:	c9 f4       	brne	.+50     	; 0x16e <.L2>

0000013c <.Loc.3>:
 13c:	88 e4       	ldi	r24, 0x48	; 72
 13e:	90 e0       	ldi	r25, 0x00	; 0
 140:	fc 01       	movw	r30, r24
 142:	80 81       	ld	r24, Z

00000144 <.Loc.4>:
 144:	88 23       	and	r24, r24
 146:	99 f4       	brne	.+38     	; 0x16e <.L2>

00000148 <.Loc.5>:
	{
		PORT_RPWM &= ~(1<<PIN_RPWM);
 148:	82 e0       	ldi	r24, 0x02	; 2
 14a:	91 e0       	ldi	r25, 0x01	; 1
 14c:	fc 01       	movw	r30, r24
 14e:	20 81       	ld	r18, Z

00000150 <.Loc.6>:
 150:	82 e0       	ldi	r24, 0x02	; 2
 152:	91 e0       	ldi	r25, 0x01	; 1

00000154 <.Loc.7>:
 154:	2f 7b       	andi	r18, 0xBF	; 191
 156:	fc 01       	movw	r30, r24
 158:	20 83       	st	Z, r18

0000015a <.Loc.8>:
		PORT_LPWM &= ~(1<<PIN_LPWM);
 15a:	81 e3       	ldi	r24, 0x31	; 49
 15c:	90 e0       	ldi	r25, 0x00	; 0
 15e:	fc 01       	movw	r30, r24
 160:	20 81       	ld	r18, Z

00000162 <.Loc.9>:
 162:	81 e3       	ldi	r24, 0x31	; 49
 164:	90 e0       	ldi	r25, 0x00	; 0

00000166 <.Loc.10>:
 166:	2f 7d       	andi	r18, 0xDF	; 223
 168:	fc 01       	movw	r30, r24
 16a:	20 83       	st	Z, r18

0000016c <.Loc.11>:
	else if (OCR0B != 0)
	{
		PORT_RPWM &= ~(1<<PIN_RPWM);
		PORT_LPWM |= (1<<PIN_LPWM);
	}
}
 16c:	31 c0       	rjmp	.+98     	; 0x1d0 <.L5>

0000016e <.L2>:
	else if (OCR0A != 0)
 16e:	87 e4       	ldi	r24, 0x47	; 71
 170:	90 e0       	ldi	r25, 0x00	; 0
 172:	fc 01       	movw	r30, r24
 174:	80 81       	ld	r24, Z

00000176 <.Loc.13>:
 176:	88 23       	and	r24, r24
 178:	99 f0       	breq	.+38     	; 0x1a0 <.L4>

0000017a <.Loc.14>:
		PORT_LPWM &= ~(1<<PIN_LPWM);
 17a:	81 e3       	ldi	r24, 0x31	; 49
 17c:	90 e0       	ldi	r25, 0x00	; 0
 17e:	fc 01       	movw	r30, r24
 180:	20 81       	ld	r18, Z

00000182 <.Loc.15>:
 182:	81 e3       	ldi	r24, 0x31	; 49
 184:	90 e0       	ldi	r25, 0x00	; 0

00000186 <.Loc.16>:
 186:	2f 7d       	andi	r18, 0xDF	; 223
 188:	fc 01       	movw	r30, r24
 18a:	20 83       	st	Z, r18

0000018c <.Loc.17>:
		PORT_RPWM |= (1<<PIN_RPWM);
 18c:	82 e0       	ldi	r24, 0x02	; 2
 18e:	91 e0       	ldi	r25, 0x01	; 1
 190:	fc 01       	movw	r30, r24
 192:	20 81       	ld	r18, Z
 194:	82 e0       	ldi	r24, 0x02	; 2
 196:	91 e0       	ldi	r25, 0x01	; 1

00000198 <.Loc.18>:
 198:	20 64       	ori	r18, 0x40	; 64
 19a:	fc 01       	movw	r30, r24
 19c:	20 83       	st	Z, r18

0000019e <.Loc.19>:
}
 19e:	18 c0       	rjmp	.+48     	; 0x1d0 <.L5>

000001a0 <.L4>:
	else if (OCR0B != 0)
 1a0:	88 e4       	ldi	r24, 0x48	; 72
 1a2:	90 e0       	ldi	r25, 0x00	; 0
 1a4:	fc 01       	movw	r30, r24
 1a6:	80 81       	ld	r24, Z

000001a8 <.Loc.21>:
 1a8:	88 23       	and	r24, r24
 1aa:	91 f0       	breq	.+36     	; 0x1d0 <.L5>

000001ac <.Loc.22>:
		PORT_RPWM &= ~(1<<PIN_RPWM);
 1ac:	82 e0       	ldi	r24, 0x02	; 2
 1ae:	91 e0       	ldi	r25, 0x01	; 1
 1b0:	fc 01       	movw	r30, r24
 1b2:	20 81       	ld	r18, Z

000001b4 <.Loc.23>:
 1b4:	82 e0       	ldi	r24, 0x02	; 2
 1b6:	91 e0       	ldi	r25, 0x01	; 1

000001b8 <.Loc.24>:
 1b8:	2f 7b       	andi	r18, 0xBF	; 191
 1ba:	fc 01       	movw	r30, r24
 1bc:	20 83       	st	Z, r18

000001be <.Loc.25>:
		PORT_LPWM |= (1<<PIN_LPWM);
 1be:	81 e3       	ldi	r24, 0x31	; 49
 1c0:	90 e0       	ldi	r25, 0x00	; 0
 1c2:	fc 01       	movw	r30, r24
 1c4:	20 81       	ld	r18, Z
 1c6:	81 e3       	ldi	r24, 0x31	; 49
 1c8:	90 e0       	ldi	r25, 0x00	; 0

000001ca <.Loc.26>:
 1ca:	20 62       	ori	r18, 0x20	; 32
 1cc:	fc 01       	movw	r30, r24
 1ce:	20 83       	st	Z, r18

000001d0 <.L5>:
}
 1d0:	00 00       	nop
 1d2:	df 91       	pop	r29
 1d4:	cf 91       	pop	r28
 1d6:	ff 91       	pop	r31
 1d8:	ef 91       	pop	r30
 1da:	9f 91       	pop	r25
 1dc:	8f 91       	pop	r24
 1de:	2f 91       	pop	r18
 1e0:	0f 90       	pop	r0
 1e2:	0b be       	out	0x3b, r0	; 59
 1e4:	0f 90       	pop	r0
 1e6:	0f be       	out	0x3f, r0	; 63
 1e8:	0f 90       	pop	r0
 1ea:	1f 90       	pop	r1
 1ec:	18 95       	reti

000001ee <__vector_21>:

ISR(TIMER0_COMPA_vect)
{
 1ee:	1f 92       	push	r1
 1f0:	0f 92       	push	r0
 1f2:	0f b6       	in	r0, 0x3f	; 63
 1f4:	0f 92       	push	r0
 1f6:	11 24       	eor	r1, r1
 1f8:	0b b6       	in	r0, 0x3b	; 59
 1fa:	0f 92       	push	r0
 1fc:	2f 93       	push	r18
 1fe:	8f 93       	push	r24
 200:	9f 93       	push	r25
 202:	ef 93       	push	r30
 204:	ff 93       	push	r31
 206:	cf 93       	push	r28
 208:	df 93       	push	r29
 20a:	cd b7       	in	r28, 0x3d	; 61
 20c:	de b7       	in	r29, 0x3e	; 62

0000020e <.Loc.29>:
	if (OCR0A != 255)
 20e:	87 e4       	ldi	r24, 0x47	; 71
 210:	90 e0       	ldi	r25, 0x00	; 0
 212:	fc 01       	movw	r30, r24
 214:	80 81       	ld	r24, Z

00000216 <.Loc.30>:
 216:	8f 3f       	cpi	r24, 0xFF	; 255
 218:	49 f0       	breq	.+18     	; 0x22c <.L8>

0000021a <.Loc.31>:
	{
		PORT_RPWM &= ~(1<<PIN_RPWM);
 21a:	82 e0       	ldi	r24, 0x02	; 2
 21c:	91 e0       	ldi	r25, 0x01	; 1
 21e:	fc 01       	movw	r30, r24
 220:	20 81       	ld	r18, Z

00000222 <.Loc.32>:
 222:	82 e0       	ldi	r24, 0x02	; 2
 224:	91 e0       	ldi	r25, 0x01	; 1

00000226 <.Loc.33>:
 226:	2f 7b       	andi	r18, 0xBF	; 191
 228:	fc 01       	movw	r30, r24
 22a:	20 83       	st	Z, r18

0000022c <.L8>:
	}
}
 22c:	00 00       	nop
 22e:	df 91       	pop	r29
 230:	cf 91       	pop	r28
 232:	ff 91       	pop	r31
 234:	ef 91       	pop	r30
 236:	9f 91       	pop	r25
 238:	8f 91       	pop	r24
 23a:	2f 91       	pop	r18
 23c:	0f 90       	pop	r0
 23e:	0b be       	out	0x3b, r0	; 59
 240:	0f 90       	pop	r0
 242:	0f be       	out	0x3f, r0	; 63
 244:	0f 90       	pop	r0
 246:	1f 90       	pop	r1
 248:	18 95       	reti

0000024a <__vector_22>:

ISR(TIMER0_COMPB_vect)
{
 24a:	1f 92       	push	r1
 24c:	0f 92       	push	r0
 24e:	0f b6       	in	r0, 0x3f	; 63
 250:	0f 92       	push	r0
 252:	11 24       	eor	r1, r1
 254:	0b b6       	in	r0, 0x3b	; 59
 256:	0f 92       	push	r0
 258:	2f 93       	push	r18
 25a:	8f 93       	push	r24
 25c:	9f 93       	push	r25
 25e:	ef 93       	push	r30
 260:	ff 93       	push	r31
 262:	cf 93       	push	r28
 264:	df 93       	push	r29
 266:	cd b7       	in	r28, 0x3d	; 61
 268:	de b7       	in	r29, 0x3e	; 62

0000026a <.Loc.36>:
	if (OCR0B != 255)
 26a:	88 e4       	ldi	r24, 0x48	; 72
 26c:	90 e0       	ldi	r25, 0x00	; 0
 26e:	fc 01       	movw	r30, r24
 270:	80 81       	ld	r24, Z

00000272 <.Loc.37>:
 272:	8f 3f       	cpi	r24, 0xFF	; 255
 274:	49 f0       	breq	.+18     	; 0x288 <.L11>

00000276 <.Loc.38>:
	{
		PORT_LPWM &= ~(1<<PIN_LPWM);
 276:	81 e3       	ldi	r24, 0x31	; 49
 278:	90 e0       	ldi	r25, 0x00	; 0
 27a:	fc 01       	movw	r30, r24
 27c:	20 81       	ld	r18, Z

0000027e <.Loc.39>:
 27e:	81 e3       	ldi	r24, 0x31	; 49
 280:	90 e0       	ldi	r25, 0x00	; 0

00000282 <.Loc.40>:
 282:	2f 7d       	andi	r18, 0xDF	; 223
 284:	fc 01       	movw	r30, r24
 286:	20 83       	st	Z, r18

00000288 <.L11>:
	}
}
 288:	00 00       	nop
 28a:	df 91       	pop	r29
 28c:	cf 91       	pop	r28
 28e:	ff 91       	pop	r31
 290:	ef 91       	pop	r30
 292:	9f 91       	pop	r25
 294:	8f 91       	pop	r24
 296:	2f 91       	pop	r18
 298:	0f 90       	pop	r0
 29a:	0b be       	out	0x3b, r0	; 59
 29c:	0f 90       	pop	r0
 29e:	0f be       	out	0x3f, r0	; 63
 2a0:	0f 90       	pop	r0
 2a2:	1f 90       	pop	r1
 2a4:	18 95       	reti

000002a6 <init_h_bridge>:

void init_h_bridge(void)
{
 2a6:	cf 93       	push	r28
 2a8:	df 93       	push	r29
 2aa:	cd b7       	in	r28, 0x3d	; 61
 2ac:	de b7       	in	r29, 0x3e	; 62

000002ae <.Loc.43>:
	// Config pins as output
	DDR_RPWM |= (1<<PIN_RPWM);
 2ae:	81 e0       	ldi	r24, 0x01	; 1
 2b0:	91 e0       	ldi	r25, 0x01	; 1
 2b2:	fc 01       	movw	r30, r24
 2b4:	20 81       	ld	r18, Z
 2b6:	81 e0       	ldi	r24, 0x01	; 1
 2b8:	91 e0       	ldi	r25, 0x01	; 1

000002ba <.Loc.44>:
 2ba:	20 64       	ori	r18, 0x40	; 64
 2bc:	fc 01       	movw	r30, r24
 2be:	20 83       	st	Z, r18

000002c0 <.Loc.45>:
	DDR_LPWM |= (1<<PIN_LPWM);
 2c0:	80 e3       	ldi	r24, 0x30	; 48
 2c2:	90 e0       	ldi	r25, 0x00	; 0
 2c4:	fc 01       	movw	r30, r24
 2c6:	20 81       	ld	r18, Z
 2c8:	80 e3       	ldi	r24, 0x30	; 48
 2ca:	90 e0       	ldi	r25, 0x00	; 0

000002cc <.Loc.46>:
 2cc:	20 62       	ori	r18, 0x20	; 32
 2ce:	fc 01       	movw	r30, r24
 2d0:	20 83       	st	Z, r18

000002d2 <.Loc.47>:

	// Output low
	PORT_RPWM &= ~(1<<PIN_RPWM);
 2d2:	82 e0       	ldi	r24, 0x02	; 2
 2d4:	91 e0       	ldi	r25, 0x01	; 1
 2d6:	fc 01       	movw	r30, r24
 2d8:	20 81       	ld	r18, Z

000002da <.Loc.48>:
 2da:	82 e0       	ldi	r24, 0x02	; 2
 2dc:	91 e0       	ldi	r25, 0x01	; 1

000002de <.Loc.49>:
 2de:	2f 7b       	andi	r18, 0xBF	; 191
 2e0:	fc 01       	movw	r30, r24
 2e2:	20 83       	st	Z, r18

000002e4 <.Loc.50>:
	PORT_LPWM &= ~(1<<PIN_LPWM);
 2e4:	81 e3       	ldi	r24, 0x31	; 49
 2e6:	90 e0       	ldi	r25, 0x00	; 0
 2e8:	fc 01       	movw	r30, r24
 2ea:	20 81       	ld	r18, Z

000002ec <.Loc.51>:
 2ec:	81 e3       	ldi	r24, 0x31	; 49
 2ee:	90 e0       	ldi	r25, 0x00	; 0

000002f0 <.Loc.52>:
 2f0:	2f 7d       	andi	r18, 0xDF	; 223
 2f2:	fc 01       	movw	r30, r24
 2f4:	20 83       	st	Z, r18

000002f6 <.Loc.53>:

	// Use mode 0, clkdiv = 64
	TCCR0A = 0;
 2f6:	84 e4       	ldi	r24, 0x44	; 68
 2f8:	90 e0       	ldi	r25, 0x00	; 0

000002fa <.Loc.54>:
 2fa:	fc 01       	movw	r30, r24
 2fc:	10 82       	st	Z, r1

000002fe <.Loc.55>:
	TCCR0B = (0<<CS02) | (1<<CS01) | (1<<CS00);
 2fe:	85 e4       	ldi	r24, 0x45	; 69
 300:	90 e0       	ldi	r25, 0x00	; 0

00000302 <.Loc.56>:
 302:	23 e0       	ldi	r18, 0x03	; 3
 304:	fc 01       	movw	r30, r24
 306:	20 83       	st	Z, r18

00000308 <.Loc.57>:

	// Disable PWM output
	OCR0A = 0;
 308:	87 e4       	ldi	r24, 0x47	; 71
 30a:	90 e0       	ldi	r25, 0x00	; 0

0000030c <.Loc.58>:
 30c:	fc 01       	movw	r30, r24
 30e:	10 82       	st	Z, r1

00000310 <.Loc.59>:
	OCR0B = 0;
 310:	88 e4       	ldi	r24, 0x48	; 72
 312:	90 e0       	ldi	r25, 0x00	; 0

00000314 <.Loc.60>:
 314:	fc 01       	movw	r30, r24
 316:	10 82       	st	Z, r1

00000318 <.Loc.61>:

	// Interrupts on OCA, OCB and OVF
	TIMSK0 = (1<<OCIE0B) | (1<<OCIE0A) | (1<<TOIE0);
 318:	8e e6       	ldi	r24, 0x6E	; 110
 31a:	90 e0       	ldi	r25, 0x00	; 0

0000031c <.Loc.62>:
 31c:	27 e0       	ldi	r18, 0x07	; 7
 31e:	fc 01       	movw	r30, r24
 320:	20 83       	st	Z, r18

00000322 <.Loc.63>:

	sei();
 322:	78 94       	sei

00000324 <.Loc.64>:
}
 324:	00 00       	nop
 326:	df 91       	pop	r29
 328:	cf 91       	pop	r28
 32a:	08 95       	ret

0000032c <h_bridge_set_percentage>:

void h_bridge_set_percentage(signed char percentage)
{
 32c:	cf 93       	push	r28
 32e:	df 93       	push	r29
 330:	0f 92       	push	r0
 332:	cd b7       	in	r28, 0x3d	; 61
 334:	de b7       	in	r29, 0x3e	; 62
 336:	89 83       	std	Y+1, r24	; 0x01

00000338 <.Loc.66>:
	if (percentage >= -100 && percentage <= 100)
 338:	89 81       	ldd	r24, Y+1	; 0x01
 33a:	8c 39       	cpi	r24, 0x9C	; 156
 33c:	e4 f1       	brlt	.+120    	; 0x3b6 <.L16>

0000033e <.Loc.67>:
 33e:	89 81       	ldd	r24, Y+1	; 0x01
 340:	84 36       	cpi	r24, 0x64	; 100
 342:	09 f0       	breq	.+2      	; 0x346 <.Loc.68>

00000344 <L0^A>:
 344:	c4 f5       	brge	.+112    	; 0x3b6 <.L16>

00000346 <.Loc.68>:
	{
		if (percentage >= 0)
 346:	89 81       	ldd	r24, Y+1	; 0x01
 348:	88 23       	and	r24, r24
 34a:	dc f0       	brlt	.+54     	; 0x382 <.L15>

0000034c <.Loc.69>:
		{
			// Disable LPWM, calculate RPWM
			OCR0B = 0;
 34c:	88 e4       	ldi	r24, 0x48	; 72
 34e:	90 e0       	ldi	r25, 0x00	; 0

00000350 <.Loc.70>:
 350:	fc 01       	movw	r30, r24
 352:	10 82       	st	Z, r1

00000354 <.Loc.71>:
			OCR0A = (255*percentage)/100;
 354:	89 81       	ldd	r24, Y+1	; 0x01
 356:	08 2e       	mov	r0, r24
 358:	00 0c       	add	r0, r0
 35a:	99 0b       	sbc	r25, r25
 35c:	2f ef       	ldi	r18, 0xFF	; 255
 35e:	28 9f       	mul	r18, r24
 360:	a0 01       	movw	r20, r0
 362:	29 9f       	mul	r18, r25
 364:	50 0d       	add	r21, r0
 366:	11 24       	eor	r1, r1

00000368 <.Loc.72>:
 368:	24 e6       	ldi	r18, 0x64	; 100
 36a:	30 e0       	ldi	r19, 0x00	; 0
 36c:	ca 01       	movw	r24, r20
 36e:	b9 01       	movw	r22, r18
 370:	0e 94 c7 03 	call	0x78e	; 0x78e <__divmodhi4>
 374:	cb 01       	movw	r24, r22
 376:	9c 01       	movw	r18, r24

00000378 <.Loc.73>:
 378:	87 e4       	ldi	r24, 0x47	; 71
 37a:	90 e0       	ldi	r25, 0x00	; 0

0000037c <.Loc.74>:
 37c:	fc 01       	movw	r30, r24
 37e:	20 83       	st	Z, r18

00000380 <.Loc.75>:
			// Disable RPWM, calculate LPWM
			OCR0A = 0;
			OCR0B = (255*percentage)/-100;
		}
	}
}
 380:	1a c0       	rjmp	.+52     	; 0x3b6 <.L16>

00000382 <.L15>:
			OCR0A = 0;
 382:	87 e4       	ldi	r24, 0x47	; 71
 384:	90 e0       	ldi	r25, 0x00	; 0

00000386 <.Loc.77>:
 386:	fc 01       	movw	r30, r24
 388:	10 82       	st	Z, r1

0000038a <.Loc.78>:
			OCR0B = (255*percentage)/-100;
 38a:	89 81       	ldd	r24, Y+1	; 0x01
 38c:	08 2e       	mov	r0, r24
 38e:	00 0c       	add	r0, r0
 390:	99 0b       	sbc	r25, r25
 392:	2f ef       	ldi	r18, 0xFF	; 255
 394:	28 9f       	mul	r18, r24
 396:	a0 01       	movw	r20, r0
 398:	29 9f       	mul	r18, r25
 39a:	50 0d       	add	r21, r0
 39c:	11 24       	eor	r1, r1

0000039e <.Loc.79>:
 39e:	2c e9       	ldi	r18, 0x9C	; 156
 3a0:	3f ef       	ldi	r19, 0xFF	; 255
 3a2:	ca 01       	movw	r24, r20
 3a4:	b9 01       	movw	r22, r18
 3a6:	0e 94 c7 03 	call	0x78e	; 0x78e <__divmodhi4>
 3aa:	cb 01       	movw	r24, r22
 3ac:	9c 01       	movw	r18, r24

000003ae <.Loc.80>:
 3ae:	88 e4       	ldi	r24, 0x48	; 72
 3b0:	90 e0       	ldi	r25, 0x00	; 0

000003b2 <.Loc.81>:
 3b2:	fc 01       	movw	r30, r24
 3b4:	20 83       	st	Z, r18

000003b6 <.L16>:
}
 3b6:	00 00       	nop
 3b8:	0f 90       	pop	r0
 3ba:	df 91       	pop	r29
 3bc:	cf 91       	pop	r28
 3be:	08 95       	ret

000003c0 <__vector_20>:
#define RESET_VALUE	(65636ul-TIME_VALUE)
#define STOP_VALUE	(TIME_VALUE*0.075)
#define RANGE		(TIME_VALUE*0.025)

ISR(TIMER1_OVF_vect)
{
 3c0:	1f 92       	push	r1
 3c2:	0f 92       	push	r0
 3c4:	0f b6       	in	r0, 0x3f	; 63
 3c6:	0f 92       	push	r0
 3c8:	11 24       	eor	r1, r1
 3ca:	0b b6       	in	r0, 0x3b	; 59
 3cc:	0f 92       	push	r0
 3ce:	2f 93       	push	r18
 3d0:	3f 93       	push	r19
 3d2:	8f 93       	push	r24
 3d4:	9f 93       	push	r25
 3d6:	ef 93       	push	r30
 3d8:	ff 93       	push	r31
 3da:	cf 93       	push	r28
 3dc:	df 93       	push	r29
 3de:	cd b7       	in	r28, 0x3d	; 61
 3e0:	de b7       	in	r29, 0x3e	; 62

000003e2 <.Loc.84>:
	TCNT1 = RESET_VALUE;
 3e2:	84 e8       	ldi	r24, 0x84	; 132
 3e4:	90 e0       	ldi	r25, 0x00	; 0

000003e6 <.Loc.85>:
 3e6:	24 e2       	ldi	r18, 0x24	; 36
 3e8:	34 e6       	ldi	r19, 0x64	; 100
 3ea:	fc 01       	movw	r30, r24
 3ec:	31 83       	std	Z+1, r19	; 0x01
 3ee:	20 83       	st	Z, r18

000003f0 <.Loc.86>:

	PORT_1 |= (1<<PIN_1);
 3f0:	82 e0       	ldi	r24, 0x02	; 2
 3f2:	91 e0       	ldi	r25, 0x01	; 1
 3f4:	fc 01       	movw	r30, r24
 3f6:	20 81       	ld	r18, Z
 3f8:	82 e0       	ldi	r24, 0x02	; 2
 3fa:	91 e0       	ldi	r25, 0x01	; 1

000003fc <.Loc.87>:
 3fc:	20 62       	ori	r18, 0x20	; 32
 3fe:	fc 01       	movw	r30, r24
 400:	20 83       	st	Z, r18

00000402 <.Loc.88>:
}
 402:	00 00       	nop
 404:	df 91       	pop	r29
 406:	cf 91       	pop	r28
 408:	ff 91       	pop	r31
 40a:	ef 91       	pop	r30
 40c:	9f 91       	pop	r25
 40e:	8f 91       	pop	r24
 410:	3f 91       	pop	r19
 412:	2f 91       	pop	r18
 414:	0f 90       	pop	r0
 416:	0b be       	out	0x3b, r0	; 59
 418:	0f 90       	pop	r0
 41a:	0f be       	out	0x3f, r0	; 63
 41c:	0f 90       	pop	r0
 41e:	1f 90       	pop	r1
 420:	18 95       	reti

00000422 <__vector_17>:

ISR(TIMER1_COMPA_vect)
{
 422:	1f 92       	push	r1
 424:	0f 92       	push	r0
 426:	0f b6       	in	r0, 0x3f	; 63
 428:	0f 92       	push	r0
 42a:	11 24       	eor	r1, r1
 42c:	0b b6       	in	r0, 0x3b	; 59
 42e:	0f 92       	push	r0
 430:	2f 93       	push	r18
 432:	8f 93       	push	r24
 434:	9f 93       	push	r25
 436:	ef 93       	push	r30
 438:	ff 93       	push	r31
 43a:	cf 93       	push	r28
 43c:	df 93       	push	r29
 43e:	cd b7       	in	r28, 0x3d	; 61
 440:	de b7       	in	r29, 0x3e	; 62

00000442 <.Loc.90>:
	PORT_1 &= ~(1<<PIN_1);
 442:	82 e0       	ldi	r24, 0x02	; 2
 444:	91 e0       	ldi	r25, 0x01	; 1
 446:	fc 01       	movw	r30, r24
 448:	20 81       	ld	r18, Z

0000044a <.Loc.91>:
 44a:	82 e0       	ldi	r24, 0x02	; 2
 44c:	91 e0       	ldi	r25, 0x01	; 1

0000044e <.Loc.92>:
 44e:	2f 7d       	andi	r18, 0xDF	; 223
 450:	fc 01       	movw	r30, r24
 452:	20 83       	st	Z, r18

00000454 <.Loc.93>:
}
 454:	00 00       	nop
 456:	df 91       	pop	r29
 458:	cf 91       	pop	r28
 45a:	ff 91       	pop	r31
 45c:	ef 91       	pop	r30
 45e:	9f 91       	pop	r25
 460:	8f 91       	pop	r24
 462:	2f 91       	pop	r18
 464:	0f 90       	pop	r0
 466:	0b be       	out	0x3b, r0	; 59
 468:	0f 90       	pop	r0
 46a:	0f be       	out	0x3f, r0	; 63
 46c:	0f 90       	pop	r0
 46e:	1f 90       	pop	r1
 470:	18 95       	reti

00000472 <__vector_18>:

ISR(TIMER1_COMPB_vect)
{
 472:	1f 92       	push	r1
 474:	0f 92       	push	r0
 476:	0f b6       	in	r0, 0x3f	; 63
 478:	0f 92       	push	r0
 47a:	11 24       	eor	r1, r1
 47c:	cf 93       	push	r28
 47e:	df 93       	push	r29
 480:	cd b7       	in	r28, 0x3d	; 61
 482:	de b7       	in	r29, 0x3e	; 62

00000484 <.Loc.95>:

}
 484:	00 00       	nop
 486:	df 91       	pop	r29
 488:	cf 91       	pop	r28
 48a:	0f 90       	pop	r0
 48c:	0f be       	out	0x3f, r0	; 63
 48e:	0f 90       	pop	r0
 490:	1f 90       	pop	r1
 492:	18 95       	reti

00000494 <init_servo>:

void init_servo(void)
{
 494:	cf 93       	push	r28
 496:	df 93       	push	r29
 498:	cd b7       	in	r28, 0x3d	; 61
 49a:	de b7       	in	r29, 0x3e	; 62

0000049c <.Loc.97>:
	// Config pins as output
	DDR_1 |= (1<<PIN_1);
 49c:	81 e0       	ldi	r24, 0x01	; 1
 49e:	91 e0       	ldi	r25, 0x01	; 1
 4a0:	fc 01       	movw	r30, r24
 4a2:	20 81       	ld	r18, Z
 4a4:	81 e0       	ldi	r24, 0x01	; 1
 4a6:	91 e0       	ldi	r25, 0x01	; 1

000004a8 <.Loc.98>:
 4a8:	20 62       	ori	r18, 0x20	; 32
 4aa:	fc 01       	movw	r30, r24
 4ac:	20 83       	st	Z, r18

000004ae <.Loc.99>:

	// Use mode 0, clkdiv = 8
	TCCR1A = 0;
 4ae:	80 e8       	ldi	r24, 0x80	; 128
 4b0:	90 e0       	ldi	r25, 0x00	; 0

000004b2 <.Loc.100>:
 4b2:	fc 01       	movw	r30, r24
 4b4:	10 82       	st	Z, r1

000004b6 <.Loc.101>:
	TCCR1B = (0<<CS12) | (1<<CS11) | (0<<CS10);
 4b6:	81 e8       	ldi	r24, 0x81	; 129
 4b8:	90 e0       	ldi	r25, 0x00	; 0

000004ba <.Loc.102>:
 4ba:	22 e0       	ldi	r18, 0x02	; 2
 4bc:	fc 01       	movw	r30, r24
 4be:	20 83       	st	Z, r18

000004c0 <.Loc.103>:
	// Interrupts on OCA, OCB and OVF
	TIMSK1 = (1<<OCIE1B) | (1<<OCIE1A) | (1<<TOIE1);
 4c0:	8f e6       	ldi	r24, 0x6F	; 111
 4c2:	90 e0       	ldi	r25, 0x00	; 0

000004c4 <.Loc.104>:
 4c4:	27 e0       	ldi	r18, 0x07	; 7
 4c6:	fc 01       	movw	r30, r24
 4c8:	20 83       	st	Z, r18

000004ca <.Loc.105>:

	TCNT1 = RESET_VALUE;
 4ca:	84 e8       	ldi	r24, 0x84	; 132
 4cc:	90 e0       	ldi	r25, 0x00	; 0

000004ce <.Loc.106>:
 4ce:	24 e2       	ldi	r18, 0x24	; 36
 4d0:	34 e6       	ldi	r19, 0x64	; 100
 4d2:	fc 01       	movw	r30, r24
 4d4:	31 83       	std	Z+1, r19	; 0x01
 4d6:	20 83       	st	Z, r18

000004d8 <.Loc.107>:

	servo1_set_percentage(0);
 4d8:	80 e0       	ldi	r24, 0x00	; 0
 4da:	0e 94 74 02 	call	0x4e8	; 0x4e8 <servo1_set_percentage>

000004de <.Loc.108>:


	sei();
 4de:	78 94       	sei

000004e0 <.Loc.109>:
}
 4e0:	00 00       	nop
 4e2:	df 91       	pop	r29
 4e4:	cf 91       	pop	r28
 4e6:	08 95       	ret

000004e8 <servo1_set_percentage>:

void servo1_set_percentage(signed char percentage)
{
 4e8:	0f 93       	push	r16
 4ea:	1f 93       	push	r17
 4ec:	cf 93       	push	r28
 4ee:	df 93       	push	r29
 4f0:	cd b7       	in	r28, 0x3d	; 61
 4f2:	de b7       	in	r29, 0x3e	; 62
 4f4:	6d 97       	sbiw	r28, 0x1d	; 29
 4f6:	0f b6       	in	r0, 0x3f	; 63
 4f8:	f8 94       	cli
 4fa:	de bf       	out	0x3e, r29	; 62
 4fc:	0f be       	out	0x3f, r0	; 63
 4fe:	cd bf       	out	0x3d, r28	; 61
 500:	89 83       	std	Y+1, r24	; 0x01

00000502 <.Loc.111>:
	if (percentage >= -100 && percentage <= 100)
 502:	89 81       	ldd	r24, Y+1	; 0x01
 504:	8c 39       	cpi	r24, 0x9C	; 156
 506:	0c f4       	brge	.+2      	; 0x50a <.Loc.112>

00000508 <L0^A>:
 508:	57 c0       	rjmp	.+174    	; 0x5b8 <.L23>

0000050a <.Loc.112>:
 50a:	89 81       	ldd	r24, Y+1	; 0x01
 50c:	84 36       	cpi	r24, 0x64	; 100
 50e:	11 f0       	breq	.+4      	; 0x514 <.Loc.113>

00000510 <L0^A>:
 510:	0c f0       	brlt	.+2      	; 0x514 <.Loc.113>

00000512 <L0^A>:
 512:	52 c0       	rjmp	.+164    	; 0x5b8 <.L23>

00000514 <.Loc.113>:
	{
		OCR1A = RESET_VALUE+STOP_VALUE+(RANGE/100*percentage);
 514:	89 81       	ldd	r24, Y+1	; 0x01
 516:	28 2f       	mov	r18, r24
 518:	88 0f       	add	r24, r24
 51a:	33 0b       	sbc	r19, r19
 51c:	44 0b       	sbc	r20, r20
 51e:	55 0b       	sbc	r21, r21
 520:	2e 87       	std	Y+14, r18	; 0x0e
 522:	3f 87       	std	Y+15, r19	; 0x0f
 524:	48 8b       	std	Y+16, r20	; 0x10
 526:	59 8b       	std	Y+17, r21	; 0x11
 528:	6e 85       	ldd	r22, Y+14	; 0x0e
 52a:	7f 85       	ldd	r23, Y+15	; 0x0f
 52c:	88 89       	ldd	r24, Y+16	; 0x10
 52e:	99 89       	ldd	r25, Y+17	; 0x11
 530:	0e 94 8d 04 	call	0x91a	; 0x91a <__floatsisf>
 534:	6a 83       	std	Y+2, r22	; 0x02
 536:	7b 83       	std	Y+3, r23	; 0x03
 538:	8c 83       	std	Y+4, r24	; 0x04
 53a:	9d 83       	std	Y+5, r25	; 0x05
 53c:	20 e0       	ldi	r18, 0x00	; 0
 53e:	30 e0       	ldi	r19, 0x00	; 0
 540:	40 e2       	ldi	r20, 0x20	; 32
 542:	51 e4       	ldi	r21, 0x41	; 65
 544:	6a 81       	ldd	r22, Y+2	; 0x02
 546:	7b 81       	ldd	r23, Y+3	; 0x03
 548:	8c 81       	ldd	r24, Y+4	; 0x04
 54a:	9d 81       	ldd	r25, Y+5	; 0x05
 54c:	0e 94 19 05 	call	0xa32	; 0xa32 <__mulsf3>
 550:	6a 8b       	std	Y+18, r22	; 0x12
 552:	7b 8b       	std	Y+19, r23	; 0x13
 554:	8c 8b       	std	Y+20, r24	; 0x14
 556:	9d 8b       	std	Y+21, r25	; 0x15
 558:	8a 89       	ldd	r24, Y+18	; 0x12
 55a:	9b 89       	ldd	r25, Y+19	; 0x13
 55c:	ac 89       	ldd	r26, Y+20	; 0x14
 55e:	bd 89       	ldd	r27, Y+21	; 0x15
 560:	8e 83       	std	Y+6, r24	; 0x06
 562:	9f 83       	std	Y+7, r25	; 0x07
 564:	a8 87       	std	Y+8, r26	; 0x08
 566:	b9 87       	std	Y+9, r27	; 0x09

00000568 <.Loc.114>:
 568:	20 e0       	ldi	r18, 0x00	; 0
 56a:	38 eb       	ldi	r19, 0xB8	; 184
 56c:	4f ed       	ldi	r20, 0xDF	; 223
 56e:	56 e4       	ldi	r21, 0x46	; 70
 570:	6e 81       	ldd	r22, Y+6	; 0x06
 572:	7f 81       	ldd	r23, Y+7	; 0x07
 574:	88 85       	ldd	r24, Y+8	; 0x08
 576:	99 85       	ldd	r25, Y+9	; 0x09
 578:	0e 94 f0 03 	call	0x7e0	; 0x7e0 <__addsf3>
 57c:	6e 8b       	std	Y+22, r22	; 0x16
 57e:	7f 8b       	std	Y+23, r23	; 0x17
 580:	88 8f       	std	Y+24, r24	; 0x18
 582:	99 8f       	std	Y+25, r25	; 0x19
 584:	2e 89       	ldd	r18, Y+22	; 0x16
 586:	3f 89       	ldd	r19, Y+23	; 0x17
 588:	48 8d       	ldd	r20, Y+24	; 0x18
 58a:	59 8d       	ldd	r21, Y+25	; 0x19
 58c:	2a 87       	std	Y+10, r18	; 0x0a
 58e:	3b 87       	std	Y+11, r19	; 0x0b
 590:	4c 87       	std	Y+12, r20	; 0x0c
 592:	5d 87       	std	Y+13, r21	; 0x0d

00000594 <.Loc.115>:
 594:	08 e8       	ldi	r16, 0x88	; 136
 596:	10 e0       	ldi	r17, 0x00	; 0

00000598 <.Loc.116>:
 598:	6a 85       	ldd	r22, Y+10	; 0x0a
 59a:	7b 85       	ldd	r23, Y+11	; 0x0b
 59c:	8c 85       	ldd	r24, Y+12	; 0x0c
 59e:	9d 85       	ldd	r25, Y+13	; 0x0d
 5a0:	0e 94 5c 04 	call	0x8b8	; 0x8b8 <__fixunssfsi>
 5a4:	6a 8f       	std	Y+26, r22	; 0x1a
 5a6:	7b 8f       	std	Y+27, r23	; 0x1b
 5a8:	8c 8f       	std	Y+28, r24	; 0x1c
 5aa:	9d 8f       	std	Y+29, r25	; 0x1d
 5ac:	8a 8d       	ldd	r24, Y+26	; 0x1a
 5ae:	9b 8d       	ldd	r25, Y+27	; 0x1b
 5b0:	d8 01       	movw	r26, r16
 5b2:	11 96       	adiw	r26, 0x01	; 1
 5b4:	9c 93       	st	X, r25
 5b6:	8e 93       	st	-X, r24

000005b8 <.L23>:
	}
}
 5b8:	00 00       	nop
 5ba:	6d 96       	adiw	r28, 0x1d	; 29
 5bc:	0f b6       	in	r0, 0x3f	; 63
 5be:	f8 94       	cli
 5c0:	de bf       	out	0x3e, r29	; 62
 5c2:	0f be       	out	0x3f, r0	; 63
 5c4:	cd bf       	out	0x3d, r28	; 61
 5c6:	df 91       	pop	r29
 5c8:	cf 91       	pop	r28
 5ca:	1f 91       	pop	r17
 5cc:	0f 91       	pop	r16
 5ce:	08 95       	ret

000005d0 <init>:
#include "servo.c"
#include <avr/interrupt.h>
#include <util/delay.h>
int state;
void init()
{
 5d0:	cf 93       	push	r28
 5d2:	df 93       	push	r29
 5d4:	cd b7       	in	r28, 0x3d	; 61
 5d6:	de b7       	in	r29, 0x3e	; 62

000005d8 <.Loc.119>:
    DDRB &= ~(1<<PB0); //irsensor1
 5d8:	84 e2       	ldi	r24, 0x24	; 36
 5da:	90 e0       	ldi	r25, 0x00	; 0
 5dc:	fc 01       	movw	r30, r24
 5de:	20 81       	ld	r18, Z

000005e0 <.Loc.120>:
 5e0:	84 e2       	ldi	r24, 0x24	; 36
 5e2:	90 e0       	ldi	r25, 0x00	; 0

000005e4 <.Loc.121>:
 5e4:	2e 7f       	andi	r18, 0xFE	; 254
 5e6:	fc 01       	movw	r30, r24
 5e8:	20 83       	st	Z, r18

000005ea <.Loc.122>:
    PORTB |= (1<<PB0);
 5ea:	85 e2       	ldi	r24, 0x25	; 37
 5ec:	90 e0       	ldi	r25, 0x00	; 0
 5ee:	fc 01       	movw	r30, r24
 5f0:	20 81       	ld	r18, Z
 5f2:	85 e2       	ldi	r24, 0x25	; 37
 5f4:	90 e0       	ldi	r25, 0x00	; 0

000005f6 <.Loc.123>:
 5f6:	21 60       	ori	r18, 0x01	; 1
 5f8:	fc 01       	movw	r30, r24
 5fa:	20 83       	st	Z, r18

000005fc <.Loc.124>:
    DDRB &= ~(1<<PB2); //irsensor2
 5fc:	84 e2       	ldi	r24, 0x24	; 36
 5fe:	90 e0       	ldi	r25, 0x00	; 0
 600:	fc 01       	movw	r30, r24
 602:	20 81       	ld	r18, Z

00000604 <.Loc.125>:
 604:	84 e2       	ldi	r24, 0x24	; 36
 606:	90 e0       	ldi	r25, 0x00	; 0

00000608 <.Loc.126>:
 608:	2b 7f       	andi	r18, 0xFB	; 251
 60a:	fc 01       	movw	r30, r24
 60c:	20 83       	st	Z, r18

0000060e <.Loc.127>:
    PORTB |= (1<<PB2);
 60e:	85 e2       	ldi	r24, 0x25	; 37
 610:	90 e0       	ldi	r25, 0x00	; 0
 612:	fc 01       	movw	r30, r24
 614:	20 81       	ld	r18, Z
 616:	85 e2       	ldi	r24, 0x25	; 37
 618:	90 e0       	ldi	r25, 0x00	; 0

0000061a <.Loc.128>:
 61a:	24 60       	ori	r18, 0x04	; 4
 61c:	fc 01       	movw	r30, r24
 61e:	20 83       	st	Z, r18

00000620 <.Loc.129>:
}
 620:	00 00       	nop
 622:	df 91       	pop	r29
 624:	cf 91       	pop	r28
 626:	08 95       	ret

00000628 <vroem>:
void vroem()
{
 628:	cf 93       	push	r28
 62a:	df 93       	push	r29
 62c:	cd b7       	in	r28, 0x3d	; 61
 62e:	de b7       	in	r29, 0x3e	; 62

00000630 <.Loc.131>:
    h_bridge_set_percentage(50);
 630:	82 e3       	ldi	r24, 0x32	; 50
 632:	0e 94 96 01 	call	0x32c	; 0x32c <h_bridge_set_percentage>

00000636 <.Loc.132>:
}
 636:	00 00       	nop
 638:	df 91       	pop	r29
 63a:	cf 91       	pop	r28
 63c:	08 95       	ret

0000063e <plantsensoraan>:

void plantsensoraan()
{
 63e:	cf 93       	push	r28
 640:	df 93       	push	r29
 642:	cd b7       	in	r28, 0x3d	; 61
 644:	de b7       	in	r29, 0x3e	; 62

00000646 <.Loc.134>:
    //sensoren aan
}
 646:	00 00       	nop
 648:	df 91       	pop	r29
 64a:	cf 91       	pop	r28
 64c:	08 95       	ret

0000064e <rem>:

void rem()
{
 64e:	cf 93       	push	r28
 650:	df 93       	push	r29
 652:	cd b7       	in	r28, 0x3d	; 61
 654:	de b7       	in	r29, 0x3e	; 62

00000656 <.Loc.136>:
    h_bridge_set_percentage(0);
 656:	80 e0       	ldi	r24, 0x00	; 0
 658:	0e 94 96 01 	call	0x32c	; 0x32c <h_bridge_set_percentage>

0000065c <.Loc.137>:
}
 65c:	00 00       	nop
 65e:	df 91       	pop	r29
 660:	cf 91       	pop	r28
 662:	08 95       	ret

00000664 <alarm>:

void alarm()
{
 664:	cf 93       	push	r28
 666:	df 93       	push	r29
 668:	cd b7       	in	r28, 0x3d	; 61
 66a:	de b7       	in	r29, 0x3e	; 62

0000066c <.Loc.139>:
    //1 pinnetje aan en uit schakelen voor 2x
}
 66c:	00 00       	nop
 66e:	df 91       	pop	r29
 670:	cf 91       	pop	r28
 672:	08 95       	ret

00000674 <stuurlinks>:

void stuurlinks()
{
 674:	cf 93       	push	r28
 676:	df 93       	push	r29
 678:	cd b7       	in	r28, 0x3d	; 61
 67a:	de b7       	in	r29, 0x3e	; 62

0000067c <.Loc.141>:
        servo1_set_percentage(-50);
 67c:	8e ec       	ldi	r24, 0xCE	; 206
 67e:	0e 94 74 02 	call	0x4e8	; 0x4e8 <servo1_set_percentage>

00000682 <.Loc.142>:
}
 682:	00 00       	nop
 684:	df 91       	pop	r29
 686:	cf 91       	pop	r28
 688:	08 95       	ret

0000068a <stuurrechts>:

void stuurrechts()
{
 68a:	cf 93       	push	r28
 68c:	df 93       	push	r29
 68e:	cd b7       	in	r28, 0x3d	; 61
 690:	de b7       	in	r29, 0x3e	; 62

00000692 <.Loc.144>:
   servo1_set_percentage(50);
 692:	82 e3       	ldi	r24, 0x32	; 50
 694:	0e 94 74 02 	call	0x4e8	; 0x4e8 <servo1_set_percentage>

00000698 <.Loc.145>:
}
 698:	00 00       	nop
 69a:	df 91       	pop	r29
 69c:	cf 91       	pop	r28
 69e:	08 95       	ret

000006a0 <stuurvooruit>:

void stuurvooruit()
{
 6a0:	cf 93       	push	r28
 6a2:	df 93       	push	r29
 6a4:	cd b7       	in	r28, 0x3d	; 61
 6a6:	de b7       	in	r29, 0x3e	; 62

000006a8 <.Loc.147>:
    servo1_set_percentage(0);
 6a8:	80 e0       	ldi	r24, 0x00	; 0
 6aa:	0e 94 74 02 	call	0x4e8	; 0x4e8 <servo1_set_percentage>

000006ae <.Loc.148>:
}
 6ae:	00 00       	nop
 6b0:	df 91       	pop	r29
 6b2:	cf 91       	pop	r28
 6b4:	08 95       	ret

000006b6 <main>:


int main(void)
{
 6b6:	cf 93       	push	r28
 6b8:	df 93       	push	r29
 6ba:	cd b7       	in	r28, 0x3d	; 61
 6bc:	de b7       	in	r29, 0x3e	; 62

000006be <.Loc.150>:
init_h_bridge();
 6be:	0e 94 53 01 	call	0x2a6	; 0x2a6 <init_h_bridge>

000006c2 <.Loc.151>:
  init_servo();
 6c2:	0e 94 4a 02 	call	0x494	; 0x494 <init_servo>

000006c6 <.Loc.152>:
  init();
 6c6:	0e 94 e8 02 	call	0x5d0	; 0x5d0 <init>

000006ca <.L42>:
    while(1)

    {
        //sensoren checken
        if (PINB & ((1<<PB0) & (1<<PB2)))
 6ca:	83 e2       	ldi	r24, 0x23	; 35
 6cc:	90 e0       	ldi	r25, 0x00	; 0
 6ce:	fc 01       	movw	r30, r24
 6d0:	80 81       	ld	r24, Z

000006d2 <.Loc.154>:
        {
        state = 1;
        }
        if ((PINB & (1<<PB0))==0)
 6d2:	83 e2       	ldi	r24, 0x23	; 35
 6d4:	90 e0       	ldi	r25, 0x00	; 0
 6d6:	fc 01       	movw	r30, r24
 6d8:	80 81       	ld	r24, Z

000006da <.Loc.155>:
 6da:	88 2f       	mov	r24, r24
 6dc:	90 e0       	ldi	r25, 0x00	; 0
 6de:	81 70       	andi	r24, 0x01	; 1
 6e0:	99 27       	eor	r25, r25

000006e2 <.Loc.156>:
 6e2:	00 97       	sbiw	r24, 0x00	; 0
 6e4:	31 f4       	brne	.+12     	; 0x6f2 <.L33>

000006e6 <.Loc.157>:
        {
            state = 5;
 6e6:	85 e0       	ldi	r24, 0x05	; 5
 6e8:	90 e0       	ldi	r25, 0x00	; 0
 6ea:	90 93 01 02 	sts	0x0201, r25	; 0x800201 <state+0x1>
 6ee:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <state>

000006f2 <.L33>:
        }
        if ((PINB & (1<<PB2))==0)
 6f2:	83 e2       	ldi	r24, 0x23	; 35
 6f4:	90 e0       	ldi	r25, 0x00	; 0
 6f6:	fc 01       	movw	r30, r24
 6f8:	80 81       	ld	r24, Z

000006fa <.Loc.159>:
 6fa:	88 2f       	mov	r24, r24
 6fc:	90 e0       	ldi	r25, 0x00	; 0
 6fe:	84 70       	andi	r24, 0x04	; 4
 700:	99 27       	eor	r25, r25

00000702 <.Loc.160>:
 702:	00 97       	sbiw	r24, 0x00	; 0
 704:	31 f4       	brne	.+12     	; 0x712 <.L34>

00000706 <.Loc.161>:
        {
            state = 4;
 706:	84 e0       	ldi	r24, 0x04	; 4
 708:	90 e0       	ldi	r25, 0x00	; 0
 70a:	90 93 01 02 	sts	0x0201, r25	; 0x800201 <state+0x1>
 70e:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <state>

00000712 <.L34>:
        }
     /*   if ((PINB & (1<<PB0) | (1<<PB1))==0)
        {
            state
        }*/
        switch(state)
 712:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <state>
 716:	90 91 01 02 	lds	r25, 0x0201	; 0x800201 <state+0x1>
 71a:	85 30       	cpi	r24, 0x05	; 5
 71c:	91 05       	cpc	r25, r1
 71e:	91 f1       	breq	.+100    	; 0x784 <.L35>
 720:	85 30       	cpi	r24, 0x05	; 5
 722:	91 05       	cpc	r25, r1
 724:	09 f0       	breq	.+2      	; 0x728 <L0^A+0x2>

00000726 <L0^A>:
 726:	8c f6       	brge	.-94     	; 0x6ca <.L42>
 728:	84 30       	cpi	r24, 0x04	; 4
 72a:	91 05       	cpc	r25, r1
 72c:	41 f1       	breq	.+80     	; 0x77e <.L37>
 72e:	84 30       	cpi	r24, 0x04	; 4
 730:	91 05       	cpc	r25, r1
 732:	09 f0       	breq	.+2      	; 0x736 <L0^A+0x2>

00000734 <L0^A>:
 734:	54 f6       	brge	.-108    	; 0x6ca <.L42>
 736:	83 30       	cpi	r24, 0x03	; 3
 738:	91 05       	cpc	r25, r1
 73a:	39 f1       	breq	.+78     	; 0x78a <.L43>
 73c:	83 30       	cpi	r24, 0x03	; 3
 73e:	91 05       	cpc	r25, r1
 740:	09 f0       	breq	.+2      	; 0x744 <L0^A+0x2>

00000742 <L0^A>:
 742:	1c f6       	brge	.-122    	; 0x6ca <.L42>
 744:	82 30       	cpi	r24, 0x02	; 2
 746:	91 05       	cpc	r25, r1
 748:	a9 f0       	breq	.+42     	; 0x774 <.L39>
 74a:	82 30       	cpi	r24, 0x02	; 2
 74c:	91 05       	cpc	r25, r1
 74e:	11 f0       	breq	.+4      	; 0x754 <L0^A+0x2>

00000750 <L0^A>:
 750:	0c f0       	brlt	.+2      	; 0x754 <L0^A+0x2>

00000752 <L0^A>:
 752:	bb cf       	rjmp	.-138    	; 0x6ca <.L42>
 754:	00 97       	sbiw	r24, 0x00	; 0
 756:	21 f0       	breq	.+8      	; 0x760 <.L40>
 758:	81 30       	cpi	r24, 0x01	; 1
 75a:	91 05       	cpc	r25, r1
 75c:	21 f0       	breq	.+8      	; 0x766 <.L41>
 75e:	16 c0       	rjmp	.+44     	; 0x78c <.L36>

00000760 <.L40>:
        {
        case(0):
            rem();
 760:	0e 94 27 03 	call	0x64e	; 0x64e <rem>

00000764 <.Loc.164>:
            break;
 764:	13 c0       	rjmp	.+38     	; 0x78c <.L36>

00000766 <.L41>:

        case(1):
            vroem();
 766:	0e 94 14 03 	call	0x628	; 0x628 <vroem>

0000076a <.Loc.166>:
            plantsensoraan();
 76a:	0e 94 1f 03 	call	0x63e	; 0x63e <plantsensoraan>

0000076e <.Loc.167>:
            stuurvooruit();
 76e:	0e 94 50 03 	call	0x6a0	; 0x6a0 <stuurvooruit>

00000772 <.Loc.168>:
            //zij sensoren en sturen bijhouden
            break;
 772:	0c c0       	rjmp	.+24     	; 0x78c <.L36>

00000774 <.L39>:

        case(2):
            rem();
 774:	0e 94 27 03 	call	0x64e	; 0x64e <rem>

00000778 <.Loc.170>:
            alarm();
 778:	0e 94 32 03 	call	0x664	; 0x664 <alarm>

0000077c <.Loc.171>:
            //plant detect
            //alarm
            break;
 77c:	07 c0       	rjmp	.+14     	; 0x78c <.L36>

0000077e <.L37>:
            //bocht
            //plant sensoren uit
            break;

        case(4):
            stuurlinks();
 77e:	0e 94 3a 03 	call	0x674	; 0x674 <stuurlinks>

00000782 <.Loc.173>:
            break;
 782:	04 c0       	rjmp	.+8      	; 0x78c <.L36>

00000784 <.L35>:

        case(5):
            stuurrechts();
 784:	0e 94 45 03 	call	0x68a	; 0x68a <stuurrechts>

00000788 <.Loc.175>:
            break;
 788:	01 c0       	rjmp	.+2      	; 0x78c <.L36>

0000078a <.L43>:
	...

0000078c <.L36>:
        if (PINB & ((1<<PB0) & (1<<PB2)))
 78c:	9e cf       	rjmp	.-196    	; 0x6ca <.L42>

0000078e <__divmodhi4>:
 78e:	97 fb       	bst	r25, 7

00000790 <.Loc.1>:
 790:	07 2e       	mov	r0, r23

00000792 <.Loc.2>:
 792:	16 f4       	brtc	.+4      	; 0x798 <.L^B1>

00000794 <.Loc.3>:
 794:	00 94       	com	r0

00000796 <.Loc.4>:
 796:	07 d0       	rcall	.+14     	; 0x7a6 <__divmodhi4_neg1>

00000798 <.L^B1>:
 798:	77 fd       	sbrc	r23, 7

0000079a <.Loc.6>:
 79a:	09 d0       	rcall	.+18     	; 0x7ae <__divmodhi4_neg2>

0000079c <.Loc.7>:
 79c:	0e 94 db 03 	call	0x7b6	; 0x7b6 <__udivmodhi4>

000007a0 <.Loc.8>:
 7a0:	07 fc       	sbrc	r0, 7

000007a2 <.Loc.9>:
 7a2:	05 d0       	rcall	.+10     	; 0x7ae <__divmodhi4_neg2>

000007a4 <.Loc.10>:
 7a4:	3e f4       	brtc	.+14     	; 0x7b4 <__divmodhi4_exit>

000007a6 <__divmodhi4_neg1>:
 7a6:	90 95       	com	r25

000007a8 <.Loc.12>:
 7a8:	81 95       	neg	r24

000007aa <.Loc.13>:
 7aa:	9f 4f       	sbci	r25, 0xFF	; 255

000007ac <.Loc.14>:
 7ac:	08 95       	ret

000007ae <__divmodhi4_neg2>:
 7ae:	70 95       	com	r23

000007b0 <.Loc.16>:
 7b0:	61 95       	neg	r22

000007b2 <.Loc.17>:
 7b2:	7f 4f       	sbci	r23, 0xFF	; 255

000007b4 <__divmodhi4_exit>:
 7b4:	08 95       	ret

000007b6 <__udivmodhi4>:
 7b6:	aa 1b       	sub	r26, r26

000007b8 <.Loc.1>:
 7b8:	bb 1b       	sub	r27, r27

000007ba <.Loc.2>:
 7ba:	51 e1       	ldi	r21, 0x11	; 17

000007bc <.Loc.3>:
 7bc:	07 c0       	rjmp	.+14     	; 0x7cc <__udivmodhi4_ep>

000007be <__udivmodhi4_loop>:
 7be:	aa 1f       	adc	r26, r26

000007c0 <.Loc.5>:
 7c0:	bb 1f       	adc	r27, r27

000007c2 <.Loc.6>:
 7c2:	a6 17       	cp	r26, r22

000007c4 <.Loc.7>:
 7c4:	b7 07       	cpc	r27, r23

000007c6 <.Loc.8>:
 7c6:	10 f0       	brcs	.+4      	; 0x7cc <__udivmodhi4_ep>

000007c8 <.Loc.9>:
 7c8:	a6 1b       	sub	r26, r22

000007ca <.Loc.10>:
 7ca:	b7 0b       	sbc	r27, r23

000007cc <__udivmodhi4_ep>:
 7cc:	88 1f       	adc	r24, r24

000007ce <.Loc.12>:
 7ce:	99 1f       	adc	r25, r25

000007d0 <.Loc.13>:
 7d0:	5a 95       	dec	r21

000007d2 <.Loc.14>:
 7d2:	a9 f7       	brne	.-22     	; 0x7be <__udivmodhi4_loop>

000007d4 <.Loc.15>:
 7d4:	80 95       	com	r24

000007d6 <.Loc.16>:
 7d6:	90 95       	com	r25

000007d8 <.Loc.17>:
 7d8:	bc 01       	movw	r22, r24

000007da <.Loc.18>:
 7da:	cd 01       	movw	r24, r26

000007dc <.Loc.19>:
 7dc:	08 95       	ret

000007de <__subsf3>:
 7de:	50 58       	subi	r21, 0x80	; 128

000007e0 <__addsf3>:
 7e0:	bb 27       	eor	r27, r27
 7e2:	aa 27       	eor	r26, r26
 7e4:	0e 94 07 04 	call	0x80e	; 0x80e <__addsf3x>
 7e8:	0c 94 df 04 	jmp	0x9be	; 0x9be <__fp_round>

000007ec <.L^B1>:
 7ec:	0e 94 d1 04 	call	0x9a2	; 0x9a2 <__fp_pscA>
 7f0:	38 f0       	brcs	.+14     	; 0x800 <.L_nan>
 7f2:	0e 94 d8 04 	call	0x9b0	; 0x9b0 <__fp_pscB>
 7f6:	20 f0       	brcs	.+8      	; 0x800 <.L_nan>
 7f8:	39 f4       	brne	.+14     	; 0x808 <.L_inf>
 7fa:	9f 3f       	cpi	r25, 0xFF	; 255
 7fc:	19 f4       	brne	.+6      	; 0x804 <.L_infB>
 7fe:	26 f4       	brtc	.+8      	; 0x808 <.L_inf>

00000800 <.L_nan>:
 800:	0c 94 ce 04 	jmp	0x99c	; 0x99c <__fp_nan>

00000804 <.L_infB>:
 804:	0e f4       	brtc	.+2      	; 0x808 <.L_inf>
 806:	e0 95       	com	r30

00000808 <.L_inf>:
 808:	e7 fb       	bst	r30, 7
 80a:	0c 94 c8 04 	jmp	0x990	; 0x990 <__fp_inf>

0000080e <__addsf3x>:
 80e:	e9 2f       	mov	r30, r25
 810:	0e 94 f0 04 	call	0x9e0	; 0x9e0 <__fp_split3>
 814:	58 f3       	brcs	.-42     	; 0x7ec <.L^B1>
 816:	ba 17       	cp	r27, r26
 818:	62 07       	cpc	r22, r18
 81a:	73 07       	cpc	r23, r19
 81c:	84 07       	cpc	r24, r20
 81e:	95 07       	cpc	r25, r21
 820:	20 f0       	brcs	.+8      	; 0x82a <.L2^B1>
 822:	79 f4       	brne	.+30     	; 0x842 <.L4^B1>
 824:	a6 f5       	brtc	.+104    	; 0x88e <.L_add>
 826:	0c 94 12 05 	jmp	0xa24	; 0xa24 <__fp_zero>

0000082a <.L2^B1>:
 82a:	0e f4       	brtc	.+2      	; 0x82e <.L3^B1>
 82c:	e0 95       	com	r30

0000082e <.L3^B1>:
 82e:	0b 2e       	mov	r0, r27
 830:	ba 2f       	mov	r27, r26
 832:	a0 2d       	mov	r26, r0
 834:	0b 01       	movw	r0, r22
 836:	b9 01       	movw	r22, r18
 838:	90 01       	movw	r18, r0
 83a:	0c 01       	movw	r0, r24
 83c:	ca 01       	movw	r24, r20
 83e:	a0 01       	movw	r20, r0
 840:	11 24       	eor	r1, r1

00000842 <.L4^B1>:
 842:	ff 27       	eor	r31, r31
 844:	59 1b       	sub	r21, r25

00000846 <.L5^B1>:
 846:	99 f0       	breq	.+38     	; 0x86e <.L7^B1>
 848:	59 3f       	cpi	r21, 0xF9	; 249
 84a:	50 f4       	brcc	.+20     	; 0x860 <.L6^B1>
 84c:	50 3e       	cpi	r21, 0xE0	; 224
 84e:	68 f1       	brcs	.+90     	; 0x8aa <.L_ret>
 850:	1a 16       	cp	r1, r26
 852:	f0 40       	sbci	r31, 0x00	; 0
 854:	a2 2f       	mov	r26, r18
 856:	23 2f       	mov	r18, r19
 858:	34 2f       	mov	r19, r20
 85a:	44 27       	eor	r20, r20
 85c:	58 5f       	subi	r21, 0xF8	; 248
 85e:	f3 cf       	rjmp	.-26     	; 0x846 <.L5^B1>

00000860 <.L6^B1>:
 860:	46 95       	lsr	r20
 862:	37 95       	ror	r19
 864:	27 95       	ror	r18
 866:	a7 95       	ror	r26
 868:	f0 40       	sbci	r31, 0x00	; 0
 86a:	53 95       	inc	r21
 86c:	c9 f7       	brne	.-14     	; 0x860 <.L6^B1>

0000086e <.L7^B1>:
 86e:	7e f4       	brtc	.+30     	; 0x88e <.L_add>
 870:	1f 16       	cp	r1, r31
 872:	ba 0b       	sbc	r27, r26
 874:	62 0b       	sbc	r22, r18
 876:	73 0b       	sbc	r23, r19
 878:	84 0b       	sbc	r24, r20
 87a:	ba f0       	brmi	.+46     	; 0x8aa <.L_ret>

0000087c <.L8^B1>:
 87c:	91 50       	subi	r25, 0x01	; 1
 87e:	a1 f0       	breq	.+40     	; 0x8a8 <.L9^B1>
 880:	ff 0f       	add	r31, r31
 882:	bb 1f       	adc	r27, r27
 884:	66 1f       	adc	r22, r22
 886:	77 1f       	adc	r23, r23
 888:	88 1f       	adc	r24, r24
 88a:	c2 f7       	brpl	.-16     	; 0x87c <.L8^B1>
 88c:	0e c0       	rjmp	.+28     	; 0x8aa <.L_ret>

0000088e <.L_add>:
 88e:	ba 0f       	add	r27, r26
 890:	62 1f       	adc	r22, r18
 892:	73 1f       	adc	r23, r19
 894:	84 1f       	adc	r24, r20
 896:	48 f4       	brcc	.+18     	; 0x8aa <.L_ret>
 898:	87 95       	ror	r24
 89a:	77 95       	ror	r23
 89c:	67 95       	ror	r22
 89e:	b7 95       	ror	r27
 8a0:	f7 95       	ror	r31
 8a2:	9e 3f       	cpi	r25, 0xFE	; 254
 8a4:	08 f0       	brcs	.+2      	; 0x8a8 <.L9^B1>
 8a6:	b0 cf       	rjmp	.-160    	; 0x808 <.L_inf>

000008a8 <.L9^B1>:
 8a8:	93 95       	inc	r25

000008aa <.L_ret>:
 8aa:	88 0f       	add	r24, r24
 8ac:	08 f0       	brcs	.+2      	; 0x8b0 <.L1^B1>
 8ae:	99 27       	eor	r25, r25

000008b0 <.L1^B1>:
 8b0:	ee 0f       	add	r30, r30
 8b2:	97 95       	ror	r25
 8b4:	87 95       	ror	r24
 8b6:	08 95       	ret

000008b8 <__fixunssfsi>:
 8b8:	0e 94 f8 04 	call	0x9f0	; 0x9f0 <__fp_splitA>
 8bc:	88 f0       	brcs	.+34     	; 0x8e0 <.L_err>
 8be:	9f 57       	subi	r25, 0x7F	; 127
 8c0:	98 f0       	brcs	.+38     	; 0x8e8 <.L_zr>
 8c2:	b9 2f       	mov	r27, r25
 8c4:	99 27       	eor	r25, r25
 8c6:	b7 51       	subi	r27, 0x17	; 23
 8c8:	b0 f0       	brcs	.+44     	; 0x8f6 <.L4^B1>
 8ca:	e1 f0       	breq	.+56     	; 0x904 <.L_sign>

000008cc <.L1^B1>:
 8cc:	66 0f       	add	r22, r22
 8ce:	77 1f       	adc	r23, r23
 8d0:	88 1f       	adc	r24, r24
 8d2:	99 1f       	adc	r25, r25
 8d4:	1a f0       	brmi	.+6      	; 0x8dc <.L2^B1>
 8d6:	ba 95       	dec	r27
 8d8:	c9 f7       	brne	.-14     	; 0x8cc <.L1^B1>
 8da:	14 c0       	rjmp	.+40     	; 0x904 <.L_sign>

000008dc <.L2^B1>:
 8dc:	b1 30       	cpi	r27, 0x01	; 1
 8de:	91 f0       	breq	.+36     	; 0x904 <.L_sign>

000008e0 <.L_err>:
 8e0:	0e 94 12 05 	call	0xa24	; 0xa24 <__fp_zero>
 8e4:	b1 e0       	ldi	r27, 0x01	; 1
 8e6:	08 95       	ret

000008e8 <.L_zr>:
 8e8:	0c 94 12 05 	jmp	0xa24	; 0xa24 <__fp_zero>

000008ec <.L3^B1>:
 8ec:	67 2f       	mov	r22, r23
 8ee:	78 2f       	mov	r23, r24
 8f0:	88 27       	eor	r24, r24
 8f2:	b8 5f       	subi	r27, 0xF8	; 248
 8f4:	39 f0       	breq	.+14     	; 0x904 <.L_sign>

000008f6 <.L4^B1>:
 8f6:	b9 3f       	cpi	r27, 0xF9	; 249
 8f8:	cc f3       	brlt	.-14     	; 0x8ec <.L3^B1>

000008fa <.L5^B1>:
 8fa:	86 95       	lsr	r24
 8fc:	77 95       	ror	r23
 8fe:	67 95       	ror	r22
 900:	b3 95       	inc	r27
 902:	d9 f7       	brne	.-10     	; 0x8fa <.L5^B1>

00000904 <.L_sign>:
 904:	3e f4       	brtc	.+14     	; 0x914 <.L6^B1>
 906:	90 95       	com	r25
 908:	80 95       	com	r24
 90a:	70 95       	com	r23
 90c:	61 95       	neg	r22
 90e:	7f 4f       	sbci	r23, 0xFF	; 255
 910:	8f 4f       	sbci	r24, 0xFF	; 255
 912:	9f 4f       	sbci	r25, 0xFF	; 255

00000914 <.L6^B1>:
 914:	08 95       	ret

00000916 <__floatunsisf>:
 916:	e8 94       	clt
 918:	09 c0       	rjmp	.+18     	; 0x92c <.L1^B1>

0000091a <__floatsisf>:
 91a:	97 fb       	bst	r25, 7
 91c:	3e f4       	brtc	.+14     	; 0x92c <.L1^B1>
 91e:	90 95       	com	r25
 920:	80 95       	com	r24
 922:	70 95       	com	r23
 924:	61 95       	neg	r22
 926:	7f 4f       	sbci	r23, 0xFF	; 255
 928:	8f 4f       	sbci	r24, 0xFF	; 255
 92a:	9f 4f       	sbci	r25, 0xFF	; 255

0000092c <.L1^B1>:
 92c:	99 23       	and	r25, r25
 92e:	a9 f0       	breq	.+42     	; 0x95a <.L4^B1>
 930:	f9 2f       	mov	r31, r25
 932:	96 e9       	ldi	r25, 0x96	; 150
 934:	bb 27       	eor	r27, r27

00000936 <.L2^B1>:
 936:	93 95       	inc	r25
 938:	f6 95       	lsr	r31
 93a:	87 95       	ror	r24
 93c:	77 95       	ror	r23
 93e:	67 95       	ror	r22
 940:	b7 95       	ror	r27
 942:	f1 11       	cpse	r31, r1
 944:	f8 cf       	rjmp	.-16     	; 0x936 <.L2^B1>
 946:	fa f4       	brpl	.+62     	; 0x986 <.L_pack>
 948:	bb 0f       	add	r27, r27
 94a:	11 f4       	brne	.+4      	; 0x950 <.L3^B1>
 94c:	60 ff       	sbrs	r22, 0
 94e:	1b c0       	rjmp	.+54     	; 0x986 <.L_pack>

00000950 <.L3^B1>:
 950:	6f 5f       	subi	r22, 0xFF	; 255
 952:	7f 4f       	sbci	r23, 0xFF	; 255
 954:	8f 4f       	sbci	r24, 0xFF	; 255
 956:	9f 4f       	sbci	r25, 0xFF	; 255
 958:	16 c0       	rjmp	.+44     	; 0x986 <.L_pack>

0000095a <.L4^B1>:
 95a:	88 23       	and	r24, r24
 95c:	11 f0       	breq	.+4      	; 0x962 <.L5^B1>
 95e:	96 e9       	ldi	r25, 0x96	; 150
 960:	11 c0       	rjmp	.+34     	; 0x984 <.L8^B1>

00000962 <.L5^B1>:
 962:	77 23       	and	r23, r23
 964:	21 f0       	breq	.+8      	; 0x96e <.L6^B1>
 966:	9e e8       	ldi	r25, 0x8E	; 142
 968:	87 2f       	mov	r24, r23
 96a:	76 2f       	mov	r23, r22
 96c:	05 c0       	rjmp	.+10     	; 0x978 <.L7^B1>

0000096e <.L6^B1>:
 96e:	66 23       	and	r22, r22
 970:	71 f0       	breq	.+28     	; 0x98e <.L9^B1>
 972:	96 e8       	ldi	r25, 0x86	; 134
 974:	86 2f       	mov	r24, r22
 976:	70 e0       	ldi	r23, 0x00	; 0

00000978 <.L7^B1>:
 978:	60 e0       	ldi	r22, 0x00	; 0
 97a:	2a f0       	brmi	.+10     	; 0x986 <.L_pack>

0000097c <.L10^B1>:
 97c:	9a 95       	dec	r25
 97e:	66 0f       	add	r22, r22
 980:	77 1f       	adc	r23, r23
 982:	88 1f       	adc	r24, r24

00000984 <.L8^B1>:
 984:	da f7       	brpl	.-10     	; 0x97c <.L10^B1>

00000986 <.L_pack>:
 986:	88 0f       	add	r24, r24
 988:	96 95       	lsr	r25
 98a:	87 95       	ror	r24
 98c:	97 f9       	bld	r25, 7

0000098e <.L9^B1>:
 98e:	08 95       	ret

00000990 <__fp_inf>:
 990:	97 f9       	bld	r25, 7
 992:	9f 67       	ori	r25, 0x7F	; 127
 994:	80 e8       	ldi	r24, 0x80	; 128
 996:	70 e0       	ldi	r23, 0x00	; 0
 998:	60 e0       	ldi	r22, 0x00	; 0
 99a:	08 95       	ret

0000099c <__fp_nan>:
 99c:	9f ef       	ldi	r25, 0xFF	; 255
 99e:	80 ec       	ldi	r24, 0xC0	; 192
 9a0:	08 95       	ret

000009a2 <__fp_pscA>:
 9a2:	00 24       	eor	r0, r0
 9a4:	0a 94       	dec	r0
 9a6:	16 16       	cp	r1, r22
 9a8:	17 06       	cpc	r1, r23
 9aa:	18 06       	cpc	r1, r24
 9ac:	09 06       	cpc	r0, r25
 9ae:	08 95       	ret

000009b0 <__fp_pscB>:
 9b0:	00 24       	eor	r0, r0
 9b2:	0a 94       	dec	r0
 9b4:	12 16       	cp	r1, r18
 9b6:	13 06       	cpc	r1, r19
 9b8:	14 06       	cpc	r1, r20
 9ba:	05 06       	cpc	r0, r21
 9bc:	08 95       	ret

000009be <__fp_round>:
 9be:	09 2e       	mov	r0, r25
 9c0:	03 94       	inc	r0
 9c2:	00 0c       	add	r0, r0
 9c4:	11 f4       	brne	.+4      	; 0x9ca <.L1^B1>
 9c6:	88 23       	and	r24, r24
 9c8:	52 f0       	brmi	.+20     	; 0x9de <.L3^B1>

000009ca <.L1^B1>:
 9ca:	bb 0f       	add	r27, r27
 9cc:	40 f4       	brcc	.+16     	; 0x9de <.L3^B1>
 9ce:	bf 2b       	or	r27, r31
 9d0:	11 f4       	brne	.+4      	; 0x9d6 <.L2^B1>
 9d2:	60 ff       	sbrs	r22, 0
 9d4:	04 c0       	rjmp	.+8      	; 0x9de <.L3^B1>

000009d6 <.L2^B1>:
 9d6:	6f 5f       	subi	r22, 0xFF	; 255
 9d8:	7f 4f       	sbci	r23, 0xFF	; 255
 9da:	8f 4f       	sbci	r24, 0xFF	; 255
 9dc:	9f 4f       	sbci	r25, 0xFF	; 255

000009de <.L3^B1>:
 9de:	08 95       	ret

000009e0 <__fp_split3>:
 9e0:	57 fd       	sbrc	r21, 7
 9e2:	90 58       	subi	r25, 0x80	; 128
 9e4:	44 0f       	add	r20, r20
 9e6:	55 1f       	adc	r21, r21
 9e8:	59 f0       	breq	.+22     	; 0xa00 <.L4^B1>
 9ea:	5f 3f       	cpi	r21, 0xFF	; 255
 9ec:	71 f0       	breq	.+28     	; 0xa0a <.L5^B1>

000009ee <.L1^B1>:
 9ee:	47 95       	ror	r20

000009f0 <__fp_splitA>:
 9f0:	88 0f       	add	r24, r24
 9f2:	97 fb       	bst	r25, 7
 9f4:	99 1f       	adc	r25, r25
 9f6:	61 f0       	breq	.+24     	; 0xa10 <.L6^B1>
 9f8:	9f 3f       	cpi	r25, 0xFF	; 255
 9fa:	79 f0       	breq	.+30     	; 0xa1a <.L7^B1>

000009fc <.L3^B1>:
 9fc:	87 95       	ror	r24
 9fe:	08 95       	ret

00000a00 <.L4^B1>:
 a00:	12 16       	cp	r1, r18
 a02:	13 06       	cpc	r1, r19
 a04:	14 06       	cpc	r1, r20
 a06:	55 1f       	adc	r21, r21
 a08:	f2 cf       	rjmp	.-28     	; 0x9ee <.L1^B1>

00000a0a <.L5^B1>:
 a0a:	46 95       	lsr	r20
 a0c:	f1 df       	rcall	.-30     	; 0x9f0 <__fp_splitA>
 a0e:	08 c0       	rjmp	.+16     	; 0xa20 <.L8^B1>

00000a10 <.L6^B1>:
 a10:	16 16       	cp	r1, r22
 a12:	17 06       	cpc	r1, r23
 a14:	18 06       	cpc	r1, r24
 a16:	99 1f       	adc	r25, r25
 a18:	f1 cf       	rjmp	.-30     	; 0x9fc <.L3^B1>

00000a1a <.L7^B1>:
 a1a:	86 95       	lsr	r24
 a1c:	71 05       	cpc	r23, r1
 a1e:	61 05       	cpc	r22, r1

00000a20 <.L8^B1>:
 a20:	08 94       	sec
 a22:	08 95       	ret

00000a24 <__fp_zero>:
 a24:	e8 94       	clt

00000a26 <__fp_szero>:
 a26:	bb 27       	eor	r27, r27
 a28:	66 27       	eor	r22, r22
 a2a:	77 27       	eor	r23, r23
 a2c:	cb 01       	movw	r24, r22
 a2e:	97 f9       	bld	r25, 7
 a30:	08 95       	ret

00000a32 <__mulsf3>:
 a32:	0e 94 2c 05 	call	0xa58	; 0xa58 <__mulsf3x>
 a36:	0c 94 df 04 	jmp	0x9be	; 0x9be <__fp_round>

00000a3a <.L^B1>:
 a3a:	0e 94 d1 04 	call	0x9a2	; 0x9a2 <__fp_pscA>
 a3e:	38 f0       	brcs	.+14     	; 0xa4e <.L1^B1>
 a40:	0e 94 d8 04 	call	0x9b0	; 0x9b0 <__fp_pscB>
 a44:	20 f0       	brcs	.+8      	; 0xa4e <.L1^B1>
 a46:	95 23       	and	r25, r21
 a48:	11 f0       	breq	.+4      	; 0xa4e <.L1^B1>
 a4a:	0c 94 c8 04 	jmp	0x990	; 0x990 <__fp_inf>

00000a4e <.L1^B1>:
 a4e:	0c 94 ce 04 	jmp	0x99c	; 0x99c <__fp_nan>

00000a52 <.L2^B1>:
 a52:	11 24       	eor	r1, r1
 a54:	0c 94 13 05 	jmp	0xa26	; 0xa26 <__fp_szero>

00000a58 <__mulsf3x>:
 a58:	0e 94 f0 04 	call	0x9e0	; 0x9e0 <__fp_split3>
 a5c:	70 f3       	brcs	.-36     	; 0xa3a <.L^B1>

00000a5e <__mulsf3_pse>:
 a5e:	95 9f       	mul	r25, r21
 a60:	c1 f3       	breq	.-16     	; 0xa52 <.L2^B1>
 a62:	95 0f       	add	r25, r21
 a64:	50 e0       	ldi	r21, 0x00	; 0
 a66:	55 1f       	adc	r21, r21
 a68:	62 9f       	mul	r22, r18
 a6a:	f0 01       	movw	r30, r0
 a6c:	72 9f       	mul	r23, r18
 a6e:	bb 27       	eor	r27, r27
 a70:	f0 0d       	add	r31, r0
 a72:	b1 1d       	adc	r27, r1
 a74:	63 9f       	mul	r22, r19
 a76:	aa 27       	eor	r26, r26
 a78:	f0 0d       	add	r31, r0
 a7a:	b1 1d       	adc	r27, r1
 a7c:	aa 1f       	adc	r26, r26
 a7e:	64 9f       	mul	r22, r20
 a80:	66 27       	eor	r22, r22
 a82:	b0 0d       	add	r27, r0
 a84:	a1 1d       	adc	r26, r1
 a86:	66 1f       	adc	r22, r22
 a88:	82 9f       	mul	r24, r18
 a8a:	22 27       	eor	r18, r18
 a8c:	b0 0d       	add	r27, r0
 a8e:	a1 1d       	adc	r26, r1
 a90:	62 1f       	adc	r22, r18
 a92:	73 9f       	mul	r23, r19
 a94:	b0 0d       	add	r27, r0
 a96:	a1 1d       	adc	r26, r1
 a98:	62 1f       	adc	r22, r18
 a9a:	83 9f       	mul	r24, r19
 a9c:	a0 0d       	add	r26, r0
 a9e:	61 1d       	adc	r22, r1
 aa0:	22 1f       	adc	r18, r18
 aa2:	74 9f       	mul	r23, r20
 aa4:	33 27       	eor	r19, r19
 aa6:	a0 0d       	add	r26, r0
 aa8:	61 1d       	adc	r22, r1
 aaa:	23 1f       	adc	r18, r19
 aac:	84 9f       	mul	r24, r20
 aae:	60 0d       	add	r22, r0
 ab0:	21 1d       	adc	r18, r1
 ab2:	82 2f       	mov	r24, r18
 ab4:	76 2f       	mov	r23, r22
 ab6:	6a 2f       	mov	r22, r26
 ab8:	11 24       	eor	r1, r1
 aba:	9f 57       	subi	r25, 0x7F	; 127
 abc:	50 40       	sbci	r21, 0x00	; 0
 abe:	9a f0       	brmi	.+38     	; 0xae6 <.L13^B1>
 ac0:	f1 f0       	breq	.+60     	; 0xafe <.L15^B1>

00000ac2 <.L10^B1>:
 ac2:	88 23       	and	r24, r24
 ac4:	4a f0       	brmi	.+18     	; 0xad8 <.L11^B1>
 ac6:	ee 0f       	add	r30, r30
 ac8:	ff 1f       	adc	r31, r31
 aca:	bb 1f       	adc	r27, r27
 acc:	66 1f       	adc	r22, r22
 ace:	77 1f       	adc	r23, r23
 ad0:	88 1f       	adc	r24, r24
 ad2:	91 50       	subi	r25, 0x01	; 1
 ad4:	50 40       	sbci	r21, 0x00	; 0
 ad6:	a9 f7       	brne	.-22     	; 0xac2 <.L10^B1>

00000ad8 <.L11^B1>:
 ad8:	9e 3f       	cpi	r25, 0xFE	; 254
 ada:	51 05       	cpc	r21, r1
 adc:	80 f0       	brcs	.+32     	; 0xafe <.L15^B1>
 ade:	0c 94 c8 04 	jmp	0x990	; 0x990 <__fp_inf>

00000ae2 <.L12^B1>:
 ae2:	0c 94 13 05 	jmp	0xa26	; 0xa26 <__fp_szero>

00000ae6 <.L13^B1>:
 ae6:	5f 3f       	cpi	r21, 0xFF	; 255
 ae8:	e4 f3       	brlt	.-8      	; 0xae2 <.L12^B1>
 aea:	98 3e       	cpi	r25, 0xE8	; 232
 aec:	d4 f3       	brlt	.-12     	; 0xae2 <.L12^B1>

00000aee <.L14^B1>:
 aee:	86 95       	lsr	r24
 af0:	77 95       	ror	r23
 af2:	67 95       	ror	r22
 af4:	b7 95       	ror	r27
 af6:	f7 95       	ror	r31
 af8:	e7 95       	ror	r30
 afa:	9f 5f       	subi	r25, 0xFF	; 255
 afc:	c1 f7       	brne	.-16     	; 0xaee <.L14^B1>

00000afe <.L15^B1>:
 afe:	fe 2b       	or	r31, r30
 b00:	88 0f       	add	r24, r24
 b02:	91 1d       	adc	r25, r1
 b04:	96 95       	lsr	r25
 b06:	87 95       	ror	r24
 b08:	97 f9       	bld	r25, 7
 b0a:	08 95       	ret

00000b0c <_exit>:
 b0c:	f8 94       	cli

00000b0e <__stop_program>:
 b0e:	ff cf       	rjmp	.-2      	; 0xb0e <__stop_program>
