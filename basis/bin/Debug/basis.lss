
bin\Debug\basis.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000004  00800200  00001418  000014cc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001418  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000002  00800204  00800204  000014d0  2**0
                  ALLOC
  3 .fuse         00000003  00820000  00820000  000014d0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  4 .comment      00000012  00000000  00000000  000014d3  2**0
                  CONTENTS, READONLY
  5 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000014e8  2**2
                  CONTENTS, READONLY, OCTETS
  6 .debug_aranges 000000d8  00000000  00000000  00001528  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  7 .debug_info   0000114f  00000000  00000000  00001600  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  8 .debug_abbrev 00000daf  00000000  00000000  0000274f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  9 .debug_line   00000e6b  00000000  00000000  000034fe  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_frame  000003dc  00000000  00000000  0000436c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_str    00000657  00000000  00000000  00004748  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_line_str 0000016d  00000000  00000000  00004d9f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 72 00 	jmp	0xe4	; 0xe4 <__ctors_end>
       4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
       8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
       c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      10:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      14:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      18:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      1c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      20:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      24:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      28:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      2c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      30:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      34:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      38:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      3c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      40:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      44:	0c 94 1e 02 	jmp	0x43c	; 0x43c <__vector_17>
      48:	0c 94 46 02 	jmp	0x48c	; 0x48c <__vector_18>
      4c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      50:	0c 94 ed 01 	jmp	0x3da	; 0x3da <__vector_20>
      54:	0c 94 04 01 	jmp	0x208	; 0x208 <__vector_21>
      58:	0c 94 32 01 	jmp	0x264	; 0x264 <__vector_22>
      5c:	0c 94 95 00 	jmp	0x12a	; 0x12a <__vector_23>
      60:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      64:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      68:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      6c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      70:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      74:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      78:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      7c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      80:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      84:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      88:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      8c:	0c 94 8d 03 	jmp	0x71a	; 0x71a <__vector_35>
      90:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      94:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      98:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      9c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      a0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      a4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      a8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      ac:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      b0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      b4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      b8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      bc:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      c0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      c4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      c8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      cc:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      d0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      d4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      d8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      dc:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      e0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>

000000e4 <__ctors_end>:
      e4:	11 24       	eor	r1, r1
      e6:	1f be       	out	0x3f, r1	; 63
      e8:	cf ef       	ldi	r28, 0xFF	; 255
      ea:	d1 e2       	ldi	r29, 0x21	; 33
      ec:	de bf       	out	0x3e, r29	; 62
      ee:	cd bf       	out	0x3d, r28	; 61
      f0:	00 e0       	ldi	r16, 0x00	; 0
      f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
      f4:	12 e0       	ldi	r17, 0x02	; 2

000000f6 <.Loc.1>:
      f6:	a0 e0       	ldi	r26, 0x00	; 0

000000f8 <.Loc.2>:
      f8:	b2 e0       	ldi	r27, 0x02	; 2

000000fa <.Loc.3>:
      fa:	e8 e1       	ldi	r30, 0x18	; 24

000000fc <.Loc.4>:
      fc:	f4 e1       	ldi	r31, 0x14	; 20

000000fe <.Loc.5>:
      fe:	00 e0       	ldi	r16, 0x00	; 0

00000100 <.Loc.6>:
     100:	0b bf       	out	0x3b, r16	; 59

00000102 <.Loc.7>:
     102:	02 c0       	rjmp	.+4      	; 0x108 <.L__do_copy_data_start>

00000104 <.L__do_copy_data_loop>:
     104:	07 90       	elpm	r0, Z+

00000106 <.Loc.9>:
     106:	0d 92       	st	X+, r0

00000108 <.L__do_copy_data_start>:
     108:	a4 30       	cpi	r26, 0x04	; 4

0000010a <.Loc.11>:
     10a:	b1 07       	cpc	r27, r17

0000010c <.Loc.12>:
     10c:	d9 f7       	brne	.-10     	; 0x104 <.L__do_copy_data_loop>

0000010e <__do_clear_bss>:
     10e:	22 e0       	ldi	r18, 0x02	; 2

00000110 <.Loc.1>:
     110:	a4 e0       	ldi	r26, 0x04	; 4

00000112 <.Loc.2>:
     112:	b2 e0       	ldi	r27, 0x02	; 2

00000114 <.Loc.3>:
     114:	01 c0       	rjmp	.+2      	; 0x118 <.Loc.5>

00000116 <.Loc.4>:
     116:	1d 92       	st	X+, r1

00000118 <.Loc.5>:
     118:	a6 30       	cpi	r26, 0x06	; 6

0000011a <.Loc.6>:
     11a:	b2 07       	cpc	r27, r18

0000011c <.Loc.7>:
     11c:	e1 f7       	brne	.-8      	; 0x116 <.Loc.4>

0000011e <L0^A>:
     11e:	0e 94 9c 07 	call	0xf38	; 0xf38 <main>
     122:	0c 94 0a 0a 	jmp	0x1414	; 0x1414 <_exit>

00000126 <__bad_interrupt>:
     126:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000012a <__vector_23>:
#include <avr/io.h>
#include <avr/interrupt.h>
#include "h_bridge.h"

ISR(TIMER0_OVF_vect)
{
     12a:	1f 92       	push	r1
     12c:	0f 92       	push	r0
     12e:	0f b6       	in	r0, 0x3f	; 63
     130:	0f 92       	push	r0
     132:	11 24       	eor	r1, r1
     134:	0b b6       	in	r0, 0x3b	; 59
     136:	0f 92       	push	r0
     138:	2f 93       	push	r18
     13a:	8f 93       	push	r24
     13c:	9f 93       	push	r25
     13e:	ef 93       	push	r30
     140:	ff 93       	push	r31
     142:	cf 93       	push	r28
     144:	df 93       	push	r29
     146:	cd b7       	in	r28, 0x3d	; 61
     148:	de b7       	in	r29, 0x3e	; 62

0000014a <.Loc.1>:
	if (OCR0A == 0 && OCR0B == 0)
     14a:	87 e4       	ldi	r24, 0x47	; 71
     14c:	90 e0       	ldi	r25, 0x00	; 0
     14e:	fc 01       	movw	r30, r24
     150:	80 81       	ld	r24, Z

00000152 <.Loc.2>:
     152:	88 23       	and	r24, r24
     154:	c9 f4       	brne	.+50     	; 0x188 <.L2>

00000156 <.Loc.3>:
     156:	88 e4       	ldi	r24, 0x48	; 72
     158:	90 e0       	ldi	r25, 0x00	; 0
     15a:	fc 01       	movw	r30, r24
     15c:	80 81       	ld	r24, Z

0000015e <.Loc.4>:
     15e:	88 23       	and	r24, r24
     160:	99 f4       	brne	.+38     	; 0x188 <.L2>

00000162 <.Loc.5>:
	{
		PORT_RPWM &= ~(1<<PIN_RPWM);
     162:	85 e2       	ldi	r24, 0x25	; 37
     164:	90 e0       	ldi	r25, 0x00	; 0
     166:	fc 01       	movw	r30, r24
     168:	20 81       	ld	r18, Z

0000016a <.Loc.6>:
     16a:	85 e2       	ldi	r24, 0x25	; 37
     16c:	90 e0       	ldi	r25, 0x00	; 0

0000016e <.Loc.7>:
     16e:	2f 7b       	andi	r18, 0xBF	; 191
     170:	fc 01       	movw	r30, r24
     172:	20 83       	st	Z, r18

00000174 <.Loc.8>:
		PORT_LPWM &= ~(1<<PIN_LPWM);
     174:	85 e2       	ldi	r24, 0x25	; 37
     176:	90 e0       	ldi	r25, 0x00	; 0
     178:	fc 01       	movw	r30, r24
     17a:	20 81       	ld	r18, Z

0000017c <.Loc.9>:
     17c:	85 e2       	ldi	r24, 0x25	; 37
     17e:	90 e0       	ldi	r25, 0x00	; 0

00000180 <.Loc.10>:
     180:	2f 77       	andi	r18, 0x7F	; 127
     182:	fc 01       	movw	r30, r24
     184:	20 83       	st	Z, r18

00000186 <.Loc.11>:
	else if (OCR0B != 0)
	{
		PORT_RPWM &= ~(1<<PIN_RPWM);
		PORT_LPWM |= (1<<PIN_LPWM);
	}
}
     186:	31 c0       	rjmp	.+98     	; 0x1ea <.L5>

00000188 <.L2>:
	else if (OCR0A != 0)
     188:	87 e4       	ldi	r24, 0x47	; 71
     18a:	90 e0       	ldi	r25, 0x00	; 0
     18c:	fc 01       	movw	r30, r24
     18e:	80 81       	ld	r24, Z

00000190 <.Loc.13>:
     190:	88 23       	and	r24, r24
     192:	99 f0       	breq	.+38     	; 0x1ba <.L4>

00000194 <.Loc.14>:
		PORT_LPWM &= ~(1<<PIN_LPWM);
     194:	85 e2       	ldi	r24, 0x25	; 37
     196:	90 e0       	ldi	r25, 0x00	; 0
     198:	fc 01       	movw	r30, r24
     19a:	20 81       	ld	r18, Z

0000019c <.Loc.15>:
     19c:	85 e2       	ldi	r24, 0x25	; 37
     19e:	90 e0       	ldi	r25, 0x00	; 0

000001a0 <.Loc.16>:
     1a0:	2f 77       	andi	r18, 0x7F	; 127
     1a2:	fc 01       	movw	r30, r24
     1a4:	20 83       	st	Z, r18

000001a6 <.Loc.17>:
		PORT_RPWM |= (1<<PIN_RPWM);
     1a6:	85 e2       	ldi	r24, 0x25	; 37
     1a8:	90 e0       	ldi	r25, 0x00	; 0
     1aa:	fc 01       	movw	r30, r24
     1ac:	20 81       	ld	r18, Z
     1ae:	85 e2       	ldi	r24, 0x25	; 37
     1b0:	90 e0       	ldi	r25, 0x00	; 0

000001b2 <.Loc.18>:
     1b2:	20 64       	ori	r18, 0x40	; 64
     1b4:	fc 01       	movw	r30, r24
     1b6:	20 83       	st	Z, r18

000001b8 <.Loc.19>:
}
     1b8:	18 c0       	rjmp	.+48     	; 0x1ea <.L5>

000001ba <.L4>:
	else if (OCR0B != 0)
     1ba:	88 e4       	ldi	r24, 0x48	; 72
     1bc:	90 e0       	ldi	r25, 0x00	; 0
     1be:	fc 01       	movw	r30, r24
     1c0:	80 81       	ld	r24, Z

000001c2 <.Loc.21>:
     1c2:	88 23       	and	r24, r24
     1c4:	91 f0       	breq	.+36     	; 0x1ea <.L5>

000001c6 <.Loc.22>:
		PORT_RPWM &= ~(1<<PIN_RPWM);
     1c6:	85 e2       	ldi	r24, 0x25	; 37
     1c8:	90 e0       	ldi	r25, 0x00	; 0
     1ca:	fc 01       	movw	r30, r24
     1cc:	20 81       	ld	r18, Z

000001ce <.Loc.23>:
     1ce:	85 e2       	ldi	r24, 0x25	; 37
     1d0:	90 e0       	ldi	r25, 0x00	; 0

000001d2 <.Loc.24>:
     1d2:	2f 7b       	andi	r18, 0xBF	; 191
     1d4:	fc 01       	movw	r30, r24
     1d6:	20 83       	st	Z, r18

000001d8 <.Loc.25>:
		PORT_LPWM |= (1<<PIN_LPWM);
     1d8:	85 e2       	ldi	r24, 0x25	; 37
     1da:	90 e0       	ldi	r25, 0x00	; 0
     1dc:	fc 01       	movw	r30, r24
     1de:	20 81       	ld	r18, Z
     1e0:	85 e2       	ldi	r24, 0x25	; 37
     1e2:	90 e0       	ldi	r25, 0x00	; 0

000001e4 <.Loc.26>:
     1e4:	20 68       	ori	r18, 0x80	; 128
     1e6:	fc 01       	movw	r30, r24
     1e8:	20 83       	st	Z, r18

000001ea <.L5>:
}
     1ea:	00 00       	nop
     1ec:	df 91       	pop	r29
     1ee:	cf 91       	pop	r28
     1f0:	ff 91       	pop	r31
     1f2:	ef 91       	pop	r30
     1f4:	9f 91       	pop	r25
     1f6:	8f 91       	pop	r24
     1f8:	2f 91       	pop	r18
     1fa:	0f 90       	pop	r0
     1fc:	0b be       	out	0x3b, r0	; 59
     1fe:	0f 90       	pop	r0
     200:	0f be       	out	0x3f, r0	; 63
     202:	0f 90       	pop	r0
     204:	1f 90       	pop	r1
     206:	18 95       	reti

00000208 <__vector_21>:

ISR(TIMER0_COMPA_vect)
{
     208:	1f 92       	push	r1
     20a:	0f 92       	push	r0
     20c:	0f b6       	in	r0, 0x3f	; 63
     20e:	0f 92       	push	r0
     210:	11 24       	eor	r1, r1
     212:	0b b6       	in	r0, 0x3b	; 59
     214:	0f 92       	push	r0
     216:	2f 93       	push	r18
     218:	8f 93       	push	r24
     21a:	9f 93       	push	r25
     21c:	ef 93       	push	r30
     21e:	ff 93       	push	r31
     220:	cf 93       	push	r28
     222:	df 93       	push	r29
     224:	cd b7       	in	r28, 0x3d	; 61
     226:	de b7       	in	r29, 0x3e	; 62

00000228 <.Loc.29>:
	if (OCR0A != 255)
     228:	87 e4       	ldi	r24, 0x47	; 71
     22a:	90 e0       	ldi	r25, 0x00	; 0
     22c:	fc 01       	movw	r30, r24
     22e:	80 81       	ld	r24, Z

00000230 <.Loc.30>:
     230:	8f 3f       	cpi	r24, 0xFF	; 255
     232:	49 f0       	breq	.+18     	; 0x246 <.L8>

00000234 <.Loc.31>:
	{
		PORT_RPWM &= ~(1<<PIN_RPWM);
     234:	85 e2       	ldi	r24, 0x25	; 37
     236:	90 e0       	ldi	r25, 0x00	; 0
     238:	fc 01       	movw	r30, r24
     23a:	20 81       	ld	r18, Z

0000023c <.Loc.32>:
     23c:	85 e2       	ldi	r24, 0x25	; 37
     23e:	90 e0       	ldi	r25, 0x00	; 0

00000240 <.Loc.33>:
     240:	2f 7b       	andi	r18, 0xBF	; 191
     242:	fc 01       	movw	r30, r24
     244:	20 83       	st	Z, r18

00000246 <.L8>:
	}
}
     246:	00 00       	nop
     248:	df 91       	pop	r29
     24a:	cf 91       	pop	r28
     24c:	ff 91       	pop	r31
     24e:	ef 91       	pop	r30
     250:	9f 91       	pop	r25
     252:	8f 91       	pop	r24
     254:	2f 91       	pop	r18
     256:	0f 90       	pop	r0
     258:	0b be       	out	0x3b, r0	; 59
     25a:	0f 90       	pop	r0
     25c:	0f be       	out	0x3f, r0	; 63
     25e:	0f 90       	pop	r0
     260:	1f 90       	pop	r1
     262:	18 95       	reti

00000264 <__vector_22>:

ISR(TIMER0_COMPB_vect)
{
     264:	1f 92       	push	r1
     266:	0f 92       	push	r0
     268:	0f b6       	in	r0, 0x3f	; 63
     26a:	0f 92       	push	r0
     26c:	11 24       	eor	r1, r1
     26e:	0b b6       	in	r0, 0x3b	; 59
     270:	0f 92       	push	r0
     272:	2f 93       	push	r18
     274:	8f 93       	push	r24
     276:	9f 93       	push	r25
     278:	ef 93       	push	r30
     27a:	ff 93       	push	r31
     27c:	cf 93       	push	r28
     27e:	df 93       	push	r29
     280:	cd b7       	in	r28, 0x3d	; 61
     282:	de b7       	in	r29, 0x3e	; 62

00000284 <.Loc.36>:
	if (OCR0B != 255)
     284:	88 e4       	ldi	r24, 0x48	; 72
     286:	90 e0       	ldi	r25, 0x00	; 0
     288:	fc 01       	movw	r30, r24
     28a:	80 81       	ld	r24, Z

0000028c <.Loc.37>:
     28c:	8f 3f       	cpi	r24, 0xFF	; 255
     28e:	49 f0       	breq	.+18     	; 0x2a2 <.L11>

00000290 <.Loc.38>:
	{
		PORT_LPWM &= ~(1<<PIN_LPWM);
     290:	85 e2       	ldi	r24, 0x25	; 37
     292:	90 e0       	ldi	r25, 0x00	; 0
     294:	fc 01       	movw	r30, r24
     296:	20 81       	ld	r18, Z

00000298 <.Loc.39>:
     298:	85 e2       	ldi	r24, 0x25	; 37
     29a:	90 e0       	ldi	r25, 0x00	; 0

0000029c <.Loc.40>:
     29c:	2f 77       	andi	r18, 0x7F	; 127
     29e:	fc 01       	movw	r30, r24
     2a0:	20 83       	st	Z, r18

000002a2 <.L11>:
	}
}
     2a2:	00 00       	nop
     2a4:	df 91       	pop	r29
     2a6:	cf 91       	pop	r28
     2a8:	ff 91       	pop	r31
     2aa:	ef 91       	pop	r30
     2ac:	9f 91       	pop	r25
     2ae:	8f 91       	pop	r24
     2b0:	2f 91       	pop	r18
     2b2:	0f 90       	pop	r0
     2b4:	0b be       	out	0x3b, r0	; 59
     2b6:	0f 90       	pop	r0
     2b8:	0f be       	out	0x3f, r0	; 63
     2ba:	0f 90       	pop	r0
     2bc:	1f 90       	pop	r1
     2be:	18 95       	reti

000002c0 <init_h_bridge>:

void init_h_bridge(void)
{
     2c0:	cf 93       	push	r28
     2c2:	df 93       	push	r29
     2c4:	cd b7       	in	r28, 0x3d	; 61
     2c6:	de b7       	in	r29, 0x3e	; 62

000002c8 <.Loc.43>:
	// Config pins as output
	DDR_RPWM |= (1<<PIN_RPWM);
     2c8:	84 e2       	ldi	r24, 0x24	; 36
     2ca:	90 e0       	ldi	r25, 0x00	; 0
     2cc:	fc 01       	movw	r30, r24
     2ce:	20 81       	ld	r18, Z
     2d0:	84 e2       	ldi	r24, 0x24	; 36
     2d2:	90 e0       	ldi	r25, 0x00	; 0

000002d4 <.Loc.44>:
     2d4:	20 64       	ori	r18, 0x40	; 64
     2d6:	fc 01       	movw	r30, r24
     2d8:	20 83       	st	Z, r18

000002da <.Loc.45>:
	DDR_LPWM |= (1<<PIN_LPWM);
     2da:	84 e2       	ldi	r24, 0x24	; 36
     2dc:	90 e0       	ldi	r25, 0x00	; 0
     2de:	fc 01       	movw	r30, r24
     2e0:	20 81       	ld	r18, Z
     2e2:	84 e2       	ldi	r24, 0x24	; 36
     2e4:	90 e0       	ldi	r25, 0x00	; 0

000002e6 <.Loc.46>:
     2e6:	20 68       	ori	r18, 0x80	; 128
     2e8:	fc 01       	movw	r30, r24
     2ea:	20 83       	st	Z, r18

000002ec <.Loc.47>:

	// Output low
	PORT_RPWM &= ~(1<<PIN_RPWM);
     2ec:	85 e2       	ldi	r24, 0x25	; 37
     2ee:	90 e0       	ldi	r25, 0x00	; 0
     2f0:	fc 01       	movw	r30, r24
     2f2:	20 81       	ld	r18, Z

000002f4 <.Loc.48>:
     2f4:	85 e2       	ldi	r24, 0x25	; 37
     2f6:	90 e0       	ldi	r25, 0x00	; 0

000002f8 <.Loc.49>:
     2f8:	2f 7b       	andi	r18, 0xBF	; 191
     2fa:	fc 01       	movw	r30, r24
     2fc:	20 83       	st	Z, r18

000002fe <.Loc.50>:
	PORT_LPWM &= ~(1<<PIN_LPWM);
     2fe:	85 e2       	ldi	r24, 0x25	; 37
     300:	90 e0       	ldi	r25, 0x00	; 0
     302:	fc 01       	movw	r30, r24
     304:	20 81       	ld	r18, Z

00000306 <.Loc.51>:
     306:	85 e2       	ldi	r24, 0x25	; 37
     308:	90 e0       	ldi	r25, 0x00	; 0

0000030a <.Loc.52>:
     30a:	2f 77       	andi	r18, 0x7F	; 127
     30c:	fc 01       	movw	r30, r24
     30e:	20 83       	st	Z, r18

00000310 <.Loc.53>:

	// Use mode 0, clkdiv = 64
	TCCR0A = 0;
     310:	84 e4       	ldi	r24, 0x44	; 68
     312:	90 e0       	ldi	r25, 0x00	; 0

00000314 <.Loc.54>:
     314:	fc 01       	movw	r30, r24
     316:	10 82       	st	Z, r1

00000318 <.Loc.55>:
	TCCR0B = (0<<CS02) | (1<<CS01) | (1<<CS00);
     318:	85 e4       	ldi	r24, 0x45	; 69
     31a:	90 e0       	ldi	r25, 0x00	; 0

0000031c <.Loc.56>:
     31c:	23 e0       	ldi	r18, 0x03	; 3
     31e:	fc 01       	movw	r30, r24
     320:	20 83       	st	Z, r18

00000322 <.Loc.57>:

	// Disable PWM output
	OCR0A = 0;
     322:	87 e4       	ldi	r24, 0x47	; 71
     324:	90 e0       	ldi	r25, 0x00	; 0

00000326 <.Loc.58>:
     326:	fc 01       	movw	r30, r24
     328:	10 82       	st	Z, r1

0000032a <.Loc.59>:
	OCR0B = 0;
     32a:	88 e4       	ldi	r24, 0x48	; 72
     32c:	90 e0       	ldi	r25, 0x00	; 0

0000032e <.Loc.60>:
     32e:	fc 01       	movw	r30, r24
     330:	10 82       	st	Z, r1

00000332 <.Loc.61>:

	// Interrupts on OCA, OCB and OVF
	TIMSK0 = (1<<OCIE0B) | (1<<OCIE0A) | (1<<TOIE0);
     332:	8e e6       	ldi	r24, 0x6E	; 110
     334:	90 e0       	ldi	r25, 0x00	; 0

00000336 <.Loc.62>:
     336:	27 e0       	ldi	r18, 0x07	; 7
     338:	fc 01       	movw	r30, r24
     33a:	20 83       	st	Z, r18

0000033c <.Loc.63>:

	sei();
     33c:	78 94       	sei

0000033e <.Loc.64>:
}
     33e:	00 00       	nop
     340:	df 91       	pop	r29
     342:	cf 91       	pop	r28
     344:	08 95       	ret

00000346 <h_bridge_set_percentage>:

void h_bridge_set_percentage(signed char percentage)
{
     346:	cf 93       	push	r28
     348:	df 93       	push	r29
     34a:	0f 92       	push	r0
     34c:	cd b7       	in	r28, 0x3d	; 61
     34e:	de b7       	in	r29, 0x3e	; 62
     350:	89 83       	std	Y+1, r24	; 0x01

00000352 <.Loc.66>:
	if (percentage >= -100 && percentage <= 100)
     352:	89 81       	ldd	r24, Y+1	; 0x01
     354:	8c 39       	cpi	r24, 0x9C	; 156
     356:	e4 f1       	brlt	.+120    	; 0x3d0 <.L16>

00000358 <.Loc.67>:
     358:	89 81       	ldd	r24, Y+1	; 0x01
     35a:	84 36       	cpi	r24, 0x64	; 100
     35c:	09 f0       	breq	.+2      	; 0x360 <.Loc.68>

0000035e <L0^A>:
     35e:	c4 f5       	brge	.+112    	; 0x3d0 <.L16>

00000360 <.Loc.68>:
	{
		if (percentage >= 0)
     360:	89 81       	ldd	r24, Y+1	; 0x01
     362:	88 23       	and	r24, r24
     364:	dc f0       	brlt	.+54     	; 0x39c <.L15>

00000366 <.Loc.69>:
		{
			// Disable LPWM, calculate RPWM
			OCR0B = 0;
     366:	88 e4       	ldi	r24, 0x48	; 72
     368:	90 e0       	ldi	r25, 0x00	; 0

0000036a <.Loc.70>:
     36a:	fc 01       	movw	r30, r24
     36c:	10 82       	st	Z, r1

0000036e <.Loc.71>:
			OCR0A = (255*percentage)/100;
     36e:	89 81       	ldd	r24, Y+1	; 0x01
     370:	08 2e       	mov	r0, r24
     372:	00 0c       	add	r0, r0
     374:	99 0b       	sbc	r25, r25
     376:	2f ef       	ldi	r18, 0xFF	; 255
     378:	28 9f       	mul	r18, r24
     37a:	a0 01       	movw	r20, r0
     37c:	29 9f       	mul	r18, r25
     37e:	50 0d       	add	r21, r0
     380:	11 24       	eor	r1, r1

00000382 <.Loc.72>:
     382:	24 e6       	ldi	r18, 0x64	; 100
     384:	30 e0       	ldi	r19, 0x00	; 0
     386:	ca 01       	movw	r24, r20
     388:	b9 01       	movw	r22, r18
     38a:	0e 94 1d 08 	call	0x103a	; 0x103a <__divmodhi4>
     38e:	cb 01       	movw	r24, r22
     390:	9c 01       	movw	r18, r24

00000392 <.Loc.73>:
     392:	87 e4       	ldi	r24, 0x47	; 71
     394:	90 e0       	ldi	r25, 0x00	; 0

00000396 <.Loc.74>:
     396:	fc 01       	movw	r30, r24
     398:	20 83       	st	Z, r18

0000039a <.Loc.75>:
			// Disable RPWM, calculate LPWM
			OCR0A = 0;
			OCR0B = (255*percentage)/-100;
		}
	}
}
     39a:	1a c0       	rjmp	.+52     	; 0x3d0 <.L16>

0000039c <.L15>:
			OCR0A = 0;
     39c:	87 e4       	ldi	r24, 0x47	; 71
     39e:	90 e0       	ldi	r25, 0x00	; 0

000003a0 <.Loc.77>:
     3a0:	fc 01       	movw	r30, r24
     3a2:	10 82       	st	Z, r1

000003a4 <.Loc.78>:
			OCR0B = (255*percentage)/-100;
     3a4:	89 81       	ldd	r24, Y+1	; 0x01
     3a6:	08 2e       	mov	r0, r24
     3a8:	00 0c       	add	r0, r0
     3aa:	99 0b       	sbc	r25, r25
     3ac:	2f ef       	ldi	r18, 0xFF	; 255
     3ae:	28 9f       	mul	r18, r24
     3b0:	a0 01       	movw	r20, r0
     3b2:	29 9f       	mul	r18, r25
     3b4:	50 0d       	add	r21, r0
     3b6:	11 24       	eor	r1, r1

000003b8 <.Loc.79>:
     3b8:	2c e9       	ldi	r18, 0x9C	; 156
     3ba:	3f ef       	ldi	r19, 0xFF	; 255
     3bc:	ca 01       	movw	r24, r20
     3be:	b9 01       	movw	r22, r18
     3c0:	0e 94 1d 08 	call	0x103a	; 0x103a <__divmodhi4>
     3c4:	cb 01       	movw	r24, r22
     3c6:	9c 01       	movw	r18, r24

000003c8 <.Loc.80>:
     3c8:	88 e4       	ldi	r24, 0x48	; 72
     3ca:	90 e0       	ldi	r25, 0x00	; 0

000003cc <.Loc.81>:
     3cc:	fc 01       	movw	r30, r24
     3ce:	20 83       	st	Z, r18

000003d0 <.L16>:
}
     3d0:	00 00       	nop
     3d2:	0f 90       	pop	r0
     3d4:	df 91       	pop	r29
     3d6:	cf 91       	pop	r28
     3d8:	08 95       	ret

000003da <__vector_20>:
#define RESET_VALUE	(65636ul-TIME_VALUE)
#define STOP_VALUE	(TIME_VALUE*0.075)
#define RANGE		(TIME_VALUE*0.025)

ISR(TIMER1_OVF_vect)
{
     3da:	1f 92       	push	r1
     3dc:	0f 92       	push	r0
     3de:	0f b6       	in	r0, 0x3f	; 63
     3e0:	0f 92       	push	r0
     3e2:	11 24       	eor	r1, r1
     3e4:	0b b6       	in	r0, 0x3b	; 59
     3e6:	0f 92       	push	r0
     3e8:	2f 93       	push	r18
     3ea:	3f 93       	push	r19
     3ec:	8f 93       	push	r24
     3ee:	9f 93       	push	r25
     3f0:	ef 93       	push	r30
     3f2:	ff 93       	push	r31
     3f4:	cf 93       	push	r28
     3f6:	df 93       	push	r29
     3f8:	cd b7       	in	r28, 0x3d	; 61
     3fa:	de b7       	in	r29, 0x3e	; 62

000003fc <.Loc.84>:
	TCNT1 = RESET_VALUE;
     3fc:	84 e8       	ldi	r24, 0x84	; 132
     3fe:	90 e0       	ldi	r25, 0x00	; 0

00000400 <.Loc.85>:
     400:	24 e2       	ldi	r18, 0x24	; 36
     402:	34 e6       	ldi	r19, 0x64	; 100
     404:	fc 01       	movw	r30, r24
     406:	31 83       	std	Z+1, r19	; 0x01
     408:	20 83       	st	Z, r18

0000040a <.Loc.86>:

	PORT_1 |= (1<<PIN_1);
     40a:	85 e2       	ldi	r24, 0x25	; 37
     40c:	90 e0       	ldi	r25, 0x00	; 0
     40e:	fc 01       	movw	r30, r24
     410:	20 81       	ld	r18, Z
     412:	85 e2       	ldi	r24, 0x25	; 37
     414:	90 e0       	ldi	r25, 0x00	; 0

00000416 <.Loc.87>:
     416:	20 62       	ori	r18, 0x20	; 32
     418:	fc 01       	movw	r30, r24
     41a:	20 83       	st	Z, r18

0000041c <.Loc.88>:
}
     41c:	00 00       	nop
     41e:	df 91       	pop	r29
     420:	cf 91       	pop	r28
     422:	ff 91       	pop	r31
     424:	ef 91       	pop	r30
     426:	9f 91       	pop	r25
     428:	8f 91       	pop	r24
     42a:	3f 91       	pop	r19
     42c:	2f 91       	pop	r18
     42e:	0f 90       	pop	r0
     430:	0b be       	out	0x3b, r0	; 59
     432:	0f 90       	pop	r0
     434:	0f be       	out	0x3f, r0	; 63
     436:	0f 90       	pop	r0
     438:	1f 90       	pop	r1
     43a:	18 95       	reti

0000043c <__vector_17>:

ISR(TIMER1_COMPA_vect)
{
     43c:	1f 92       	push	r1
     43e:	0f 92       	push	r0
     440:	0f b6       	in	r0, 0x3f	; 63
     442:	0f 92       	push	r0
     444:	11 24       	eor	r1, r1
     446:	0b b6       	in	r0, 0x3b	; 59
     448:	0f 92       	push	r0
     44a:	2f 93       	push	r18
     44c:	8f 93       	push	r24
     44e:	9f 93       	push	r25
     450:	ef 93       	push	r30
     452:	ff 93       	push	r31
     454:	cf 93       	push	r28
     456:	df 93       	push	r29
     458:	cd b7       	in	r28, 0x3d	; 61
     45a:	de b7       	in	r29, 0x3e	; 62

0000045c <.Loc.90>:
	PORT_1 &= ~(1<<PIN_1);
     45c:	85 e2       	ldi	r24, 0x25	; 37
     45e:	90 e0       	ldi	r25, 0x00	; 0
     460:	fc 01       	movw	r30, r24
     462:	20 81       	ld	r18, Z

00000464 <.Loc.91>:
     464:	85 e2       	ldi	r24, 0x25	; 37
     466:	90 e0       	ldi	r25, 0x00	; 0

00000468 <.Loc.92>:
     468:	2f 7d       	andi	r18, 0xDF	; 223
     46a:	fc 01       	movw	r30, r24
     46c:	20 83       	st	Z, r18

0000046e <.Loc.93>:
}
     46e:	00 00       	nop
     470:	df 91       	pop	r29
     472:	cf 91       	pop	r28
     474:	ff 91       	pop	r31
     476:	ef 91       	pop	r30
     478:	9f 91       	pop	r25
     47a:	8f 91       	pop	r24
     47c:	2f 91       	pop	r18
     47e:	0f 90       	pop	r0
     480:	0b be       	out	0x3b, r0	; 59
     482:	0f 90       	pop	r0
     484:	0f be       	out	0x3f, r0	; 63
     486:	0f 90       	pop	r0
     488:	1f 90       	pop	r1
     48a:	18 95       	reti

0000048c <__vector_18>:

ISR(TIMER1_COMPB_vect)
{
     48c:	1f 92       	push	r1
     48e:	0f 92       	push	r0
     490:	0f b6       	in	r0, 0x3f	; 63
     492:	0f 92       	push	r0
     494:	11 24       	eor	r1, r1
     496:	cf 93       	push	r28
     498:	df 93       	push	r29
     49a:	cd b7       	in	r28, 0x3d	; 61
     49c:	de b7       	in	r29, 0x3e	; 62

0000049e <.Loc.95>:

}
     49e:	00 00       	nop
     4a0:	df 91       	pop	r29
     4a2:	cf 91       	pop	r28
     4a4:	0f 90       	pop	r0
     4a6:	0f be       	out	0x3f, r0	; 63
     4a8:	0f 90       	pop	r0
     4aa:	1f 90       	pop	r1
     4ac:	18 95       	reti

000004ae <init_servo>:

void init_servo(void)
{
     4ae:	cf 93       	push	r28
     4b0:	df 93       	push	r29
     4b2:	cd b7       	in	r28, 0x3d	; 61
     4b4:	de b7       	in	r29, 0x3e	; 62

000004b6 <.Loc.97>:
	// Config pins as output
	DDR_1 |= (1<<PIN_1);
     4b6:	84 e2       	ldi	r24, 0x24	; 36
     4b8:	90 e0       	ldi	r25, 0x00	; 0
     4ba:	fc 01       	movw	r30, r24
     4bc:	20 81       	ld	r18, Z
     4be:	84 e2       	ldi	r24, 0x24	; 36
     4c0:	90 e0       	ldi	r25, 0x00	; 0

000004c2 <.Loc.98>:
     4c2:	20 62       	ori	r18, 0x20	; 32
     4c4:	fc 01       	movw	r30, r24
     4c6:	20 83       	st	Z, r18

000004c8 <.Loc.99>:

	// Use mode 0, clkdiv = 8
	TCCR1A = 0;
     4c8:	80 e8       	ldi	r24, 0x80	; 128
     4ca:	90 e0       	ldi	r25, 0x00	; 0

000004cc <.Loc.100>:
     4cc:	fc 01       	movw	r30, r24
     4ce:	10 82       	st	Z, r1

000004d0 <.Loc.101>:
	TCCR1B = (0<<CS12) | (1<<CS11) | (0<<CS10);
     4d0:	81 e8       	ldi	r24, 0x81	; 129
     4d2:	90 e0       	ldi	r25, 0x00	; 0

000004d4 <.Loc.102>:
     4d4:	22 e0       	ldi	r18, 0x02	; 2
     4d6:	fc 01       	movw	r30, r24
     4d8:	20 83       	st	Z, r18

000004da <.Loc.103>:
	// Interrupts on OCA, OCB and OVF
	TIMSK1 = (1<<OCIE1B) | (1<<OCIE1A) | (1<<TOIE1);
     4da:	8f e6       	ldi	r24, 0x6F	; 111
     4dc:	90 e0       	ldi	r25, 0x00	; 0

000004de <.Loc.104>:
     4de:	27 e0       	ldi	r18, 0x07	; 7
     4e0:	fc 01       	movw	r30, r24
     4e2:	20 83       	st	Z, r18

000004e4 <.Loc.105>:

	TCNT1 = RESET_VALUE;
     4e4:	84 e8       	ldi	r24, 0x84	; 132
     4e6:	90 e0       	ldi	r25, 0x00	; 0

000004e8 <.Loc.106>:
     4e8:	24 e2       	ldi	r18, 0x24	; 36
     4ea:	34 e6       	ldi	r19, 0x64	; 100
     4ec:	fc 01       	movw	r30, r24
     4ee:	31 83       	std	Z+1, r19	; 0x01
     4f0:	20 83       	st	Z, r18

000004f2 <.Loc.107>:

	servo1_set_percentage(0);
     4f2:	80 e0       	ldi	r24, 0x00	; 0
     4f4:	0e 94 81 02 	call	0x502	; 0x502 <servo1_set_percentage>

000004f8 <.Loc.108>:


	sei();
     4f8:	78 94       	sei

000004fa <.Loc.109>:
}
     4fa:	00 00       	nop
     4fc:	df 91       	pop	r29
     4fe:	cf 91       	pop	r28
     500:	08 95       	ret

00000502 <servo1_set_percentage>:

void servo1_set_percentage(signed char percentage)
{
     502:	0f 93       	push	r16
     504:	1f 93       	push	r17
     506:	cf 93       	push	r28
     508:	df 93       	push	r29
     50a:	cd b7       	in	r28, 0x3d	; 61
     50c:	de b7       	in	r29, 0x3e	; 62
     50e:	6d 97       	sbiw	r28, 0x1d	; 29
     510:	0f b6       	in	r0, 0x3f	; 63
     512:	f8 94       	cli
     514:	de bf       	out	0x3e, r29	; 62
     516:	0f be       	out	0x3f, r0	; 63
     518:	cd bf       	out	0x3d, r28	; 61
     51a:	89 83       	std	Y+1, r24	; 0x01

0000051c <.Loc.111>:
	if (percentage >= -100 && percentage <= 100)
     51c:	89 81       	ldd	r24, Y+1	; 0x01
     51e:	8c 39       	cpi	r24, 0x9C	; 156
     520:	0c f4       	brge	.+2      	; 0x524 <.Loc.112>

00000522 <L0^A>:
     522:	57 c0       	rjmp	.+174    	; 0x5d2 <.L23>

00000524 <.Loc.112>:
     524:	89 81       	ldd	r24, Y+1	; 0x01
     526:	84 36       	cpi	r24, 0x64	; 100
     528:	11 f0       	breq	.+4      	; 0x52e <.Loc.113>

0000052a <L0^A>:
     52a:	0c f0       	brlt	.+2      	; 0x52e <.Loc.113>

0000052c <L0^A>:
     52c:	52 c0       	rjmp	.+164    	; 0x5d2 <.L23>

0000052e <.Loc.113>:
	{
		OCR1A = RESET_VALUE+STOP_VALUE+(RANGE/100*percentage);
     52e:	89 81       	ldd	r24, Y+1	; 0x01
     530:	28 2f       	mov	r18, r24
     532:	88 0f       	add	r24, r24
     534:	33 0b       	sbc	r19, r19
     536:	44 0b       	sbc	r20, r20
     538:	55 0b       	sbc	r21, r21
     53a:	2e 87       	std	Y+14, r18	; 0x0e
     53c:	3f 87       	std	Y+15, r19	; 0x0f
     53e:	48 8b       	std	Y+16, r20	; 0x10
     540:	59 8b       	std	Y+17, r21	; 0x11
     542:	6e 85       	ldd	r22, Y+14	; 0x0e
     544:	7f 85       	ldd	r23, Y+15	; 0x0f
     546:	88 89       	ldd	r24, Y+16	; 0x10
     548:	99 89       	ldd	r25, Y+17	; 0x11
     54a:	0e 94 e8 08 	call	0x11d0	; 0x11d0 <__floatsisf>
     54e:	6a 83       	std	Y+2, r22	; 0x02
     550:	7b 83       	std	Y+3, r23	; 0x03
     552:	8c 83       	std	Y+4, r24	; 0x04
     554:	9d 83       	std	Y+5, r25	; 0x05
     556:	20 e0       	ldi	r18, 0x00	; 0
     558:	30 e0       	ldi	r19, 0x00	; 0
     55a:	40 e2       	ldi	r20, 0x20	; 32
     55c:	51 e4       	ldi	r21, 0x41	; 65
     55e:	6a 81       	ldd	r22, Y+2	; 0x02
     560:	7b 81       	ldd	r23, Y+3	; 0x03
     562:	8c 81       	ldd	r24, Y+4	; 0x04
     564:	9d 81       	ldd	r25, Y+5	; 0x05
     566:	0e 94 9d 09 	call	0x133a	; 0x133a <__mulsf3>
     56a:	6a 8b       	std	Y+18, r22	; 0x12
     56c:	7b 8b       	std	Y+19, r23	; 0x13
     56e:	8c 8b       	std	Y+20, r24	; 0x14
     570:	9d 8b       	std	Y+21, r25	; 0x15
     572:	8a 89       	ldd	r24, Y+18	; 0x12
     574:	9b 89       	ldd	r25, Y+19	; 0x13
     576:	ac 89       	ldd	r26, Y+20	; 0x14
     578:	bd 89       	ldd	r27, Y+21	; 0x15
     57a:	8e 83       	std	Y+6, r24	; 0x06
     57c:	9f 83       	std	Y+7, r25	; 0x07
     57e:	a8 87       	std	Y+8, r26	; 0x08
     580:	b9 87       	std	Y+9, r27	; 0x09

00000582 <.Loc.114>:
     582:	20 e0       	ldi	r18, 0x00	; 0
     584:	38 eb       	ldi	r19, 0xB8	; 184
     586:	4f ed       	ldi	r20, 0xDF	; 223
     588:	56 e4       	ldi	r21, 0x46	; 70
     58a:	6e 81       	ldd	r22, Y+6	; 0x06
     58c:	7f 81       	ldd	r23, Y+7	; 0x07
     58e:	88 85       	ldd	r24, Y+8	; 0x08
     590:	99 85       	ldd	r25, Y+9	; 0x09
     592:	0e 94 46 08 	call	0x108c	; 0x108c <__addsf3>
     596:	6e 8b       	std	Y+22, r22	; 0x16
     598:	7f 8b       	std	Y+23, r23	; 0x17
     59a:	88 8f       	std	Y+24, r24	; 0x18
     59c:	99 8f       	std	Y+25, r25	; 0x19
     59e:	2e 89       	ldd	r18, Y+22	; 0x16
     5a0:	3f 89       	ldd	r19, Y+23	; 0x17
     5a2:	48 8d       	ldd	r20, Y+24	; 0x18
     5a4:	59 8d       	ldd	r21, Y+25	; 0x19
     5a6:	2a 87       	std	Y+10, r18	; 0x0a
     5a8:	3b 87       	std	Y+11, r19	; 0x0b
     5aa:	4c 87       	std	Y+12, r20	; 0x0c
     5ac:	5d 87       	std	Y+13, r21	; 0x0d

000005ae <.Loc.115>:
     5ae:	08 e8       	ldi	r16, 0x88	; 136
     5b0:	10 e0       	ldi	r17, 0x00	; 0

000005b2 <.Loc.116>:
     5b2:	6a 85       	ldd	r22, Y+10	; 0x0a
     5b4:	7b 85       	ldd	r23, Y+11	; 0x0b
     5b6:	8c 85       	ldd	r24, Y+12	; 0x0c
     5b8:	9d 85       	ldd	r25, Y+13	; 0x0d
     5ba:	0e 94 b7 08 	call	0x116e	; 0x116e <__fixunssfsi>
     5be:	6a 8f       	std	Y+26, r22	; 0x1a
     5c0:	7b 8f       	std	Y+27, r23	; 0x1b
     5c2:	8c 8f       	std	Y+28, r24	; 0x1c
     5c4:	9d 8f       	std	Y+29, r25	; 0x1d
     5c6:	8a 8d       	ldd	r24, Y+26	; 0x1a
     5c8:	9b 8d       	ldd	r25, Y+27	; 0x1b
     5ca:	d8 01       	movw	r26, r16
     5cc:	11 96       	adiw	r26, 0x01	; 1
     5ce:	9c 93       	st	X, r25
     5d0:	8e 93       	st	-X, r24

000005d2 <.L23>:
	}
}
     5d2:	00 00       	nop
     5d4:	6d 96       	adiw	r28, 0x1d	; 29
     5d6:	0f b6       	in	r0, 0x3f	; 63
     5d8:	f8 94       	cli
     5da:	de bf       	out	0x3e, r29	; 62
     5dc:	0f be       	out	0x3f, r0	; 63
     5de:	cd bf       	out	0x3d, r28	; 61
     5e0:	df 91       	pop	r29
     5e2:	cf 91       	pop	r28
     5e4:	1f 91       	pop	r17
     5e6:	0f 91       	pop	r16
     5e8:	08 95       	ret

000005ea <init>:
#define RESET 34534ul
int state = 0;
volatile int random1 = 1;        //ints bij buzzer
volatile int random2 = 1;
void init()
{
     5ea:	cf 93       	push	r28
     5ec:	df 93       	push	r29
     5ee:	cd b7       	in	r28, 0x3d	; 61
     5f0:	de b7       	in	r29, 0x3e	; 62

000005f2 <.Loc.119>:
    DDRF &= ~(1<<PF6); //A6, ir links voor
     5f2:	80 e3       	ldi	r24, 0x30	; 48
     5f4:	90 e0       	ldi	r25, 0x00	; 0
     5f6:	fc 01       	movw	r30, r24
     5f8:	20 81       	ld	r18, Z

000005fa <.Loc.120>:
     5fa:	80 e3       	ldi	r24, 0x30	; 48
     5fc:	90 e0       	ldi	r25, 0x00	; 0

000005fe <.Loc.121>:
     5fe:	2f 7b       	andi	r18, 0xBF	; 191
     600:	fc 01       	movw	r30, r24
     602:	20 83       	st	Z, r18

00000604 <.Loc.122>:
    PORTF |= (1<<PF6);
     604:	81 e3       	ldi	r24, 0x31	; 49
     606:	90 e0       	ldi	r25, 0x00	; 0
     608:	fc 01       	movw	r30, r24
     60a:	20 81       	ld	r18, Z
     60c:	81 e3       	ldi	r24, 0x31	; 49
     60e:	90 e0       	ldi	r25, 0x00	; 0

00000610 <.Loc.123>:
     610:	20 64       	ori	r18, 0x40	; 64
     612:	fc 01       	movw	r30, r24
     614:	20 83       	st	Z, r18

00000616 <.Loc.124>:
    DDRF &= ~(1<<PF1); //A1, ir rechts voor
     616:	80 e3       	ldi	r24, 0x30	; 48
     618:	90 e0       	ldi	r25, 0x00	; 0
     61a:	fc 01       	movw	r30, r24
     61c:	20 81       	ld	r18, Z

0000061e <.Loc.125>:
     61e:	80 e3       	ldi	r24, 0x30	; 48
     620:	90 e0       	ldi	r25, 0x00	; 0

00000622 <.Loc.126>:
     622:	2d 7f       	andi	r18, 0xFD	; 253
     624:	fc 01       	movw	r30, r24
     626:	20 83       	st	Z, r18

00000628 <.Loc.127>:
    PORTF |= (1<<PF1);
     628:	81 e3       	ldi	r24, 0x31	; 49
     62a:	90 e0       	ldi	r25, 0x00	; 0
     62c:	fc 01       	movw	r30, r24
     62e:	20 81       	ld	r18, Z
     630:	81 e3       	ldi	r24, 0x31	; 49
     632:	90 e0       	ldi	r25, 0x00	; 0

00000634 <.Loc.128>:
     634:	22 60       	ori	r18, 0x02	; 2
     636:	fc 01       	movw	r30, r24
     638:	20 83       	st	Z, r18

0000063a <.Loc.129>:
    DDRF &= ~(1<<PF2); //A2, ir bomen rechts
     63a:	80 e3       	ldi	r24, 0x30	; 48
     63c:	90 e0       	ldi	r25, 0x00	; 0
     63e:	fc 01       	movw	r30, r24
     640:	20 81       	ld	r18, Z

00000642 <.Loc.130>:
     642:	80 e3       	ldi	r24, 0x30	; 48
     644:	90 e0       	ldi	r25, 0x00	; 0

00000646 <.Loc.131>:
     646:	2b 7f       	andi	r18, 0xFB	; 251
     648:	fc 01       	movw	r30, r24
     64a:	20 83       	st	Z, r18

0000064c <.Loc.132>:
    PORTF |= (1<<PF2);
     64c:	81 e3       	ldi	r24, 0x31	; 49
     64e:	90 e0       	ldi	r25, 0x00	; 0
     650:	fc 01       	movw	r30, r24
     652:	20 81       	ld	r18, Z
     654:	81 e3       	ldi	r24, 0x31	; 49
     656:	90 e0       	ldi	r25, 0x00	; 0

00000658 <.Loc.133>:
     658:	24 60       	ori	r18, 0x04	; 4
     65a:	fc 01       	movw	r30, r24
     65c:	20 83       	st	Z, r18

0000065e <.Loc.134>:
    DDRF &= ~(1<<PF3);//A3, ir bomen links
     65e:	80 e3       	ldi	r24, 0x30	; 48
     660:	90 e0       	ldi	r25, 0x00	; 0
     662:	fc 01       	movw	r30, r24
     664:	20 81       	ld	r18, Z

00000666 <.Loc.135>:
     666:	80 e3       	ldi	r24, 0x30	; 48
     668:	90 e0       	ldi	r25, 0x00	; 0

0000066a <.Loc.136>:
     66a:	27 7f       	andi	r18, 0xF7	; 247
     66c:	fc 01       	movw	r30, r24
     66e:	20 83       	st	Z, r18

00000670 <.Loc.137>:
    PORTF |= (1<<PF3);
     670:	81 e3       	ldi	r24, 0x31	; 49
     672:	90 e0       	ldi	r25, 0x00	; 0
     674:	fc 01       	movw	r30, r24
     676:	20 81       	ld	r18, Z
     678:	81 e3       	ldi	r24, 0x31	; 49
     67a:	90 e0       	ldi	r25, 0x00	; 0

0000067c <.Loc.138>:
     67c:	28 60       	ori	r18, 0x08	; 8
     67e:	fc 01       	movw	r30, r24
     680:	20 83       	st	Z, r18

00000682 <.Loc.139>:
    DDRF &= ~(1<<PF4);//A4, voren detecteren
     682:	80 e3       	ldi	r24, 0x30	; 48
     684:	90 e0       	ldi	r25, 0x00	; 0
     686:	fc 01       	movw	r30, r24
     688:	20 81       	ld	r18, Z

0000068a <.Loc.140>:
     68a:	80 e3       	ldi	r24, 0x30	; 48
     68c:	90 e0       	ldi	r25, 0x00	; 0

0000068e <.Loc.141>:
     68e:	2f 7e       	andi	r18, 0xEF	; 239
     690:	fc 01       	movw	r30, r24
     692:	20 83       	st	Z, r18

00000694 <.Loc.142>:
    PORTF |= (1<<PF4);
     694:	81 e3       	ldi	r24, 0x31	; 49
     696:	90 e0       	ldi	r25, 0x00	; 0
     698:	fc 01       	movw	r30, r24
     69a:	20 81       	ld	r18, Z
     69c:	81 e3       	ldi	r24, 0x31	; 49
     69e:	90 e0       	ldi	r25, 0x00	; 0

000006a0 <.Loc.143>:
     6a0:	20 61       	ori	r18, 0x10	; 16
     6a2:	fc 01       	movw	r30, r24
     6a4:	20 83       	st	Z, r18

000006a6 <.Loc.144>:
    DDRF &= ~(1<<PF5);//A5, eind van balk detectie
     6a6:	80 e3       	ldi	r24, 0x30	; 48
     6a8:	90 e0       	ldi	r25, 0x00	; 0
     6aa:	fc 01       	movw	r30, r24
     6ac:	20 81       	ld	r18, Z

000006ae <.Loc.145>:
     6ae:	80 e3       	ldi	r24, 0x30	; 48
     6b0:	90 e0       	ldi	r25, 0x00	; 0

000006b2 <.Loc.146>:
     6b2:	2f 7d       	andi	r18, 0xDF	; 223
     6b4:	fc 01       	movw	r30, r24
     6b6:	20 83       	st	Z, r18

000006b8 <.Loc.147>:
    PORTF |= (1<<PF5);
     6b8:	81 e3       	ldi	r24, 0x31	; 49
     6ba:	90 e0       	ldi	r25, 0x00	; 0
     6bc:	fc 01       	movw	r30, r24
     6be:	20 81       	ld	r18, Z
     6c0:	81 e3       	ldi	r24, 0x31	; 49
     6c2:	90 e0       	ldi	r25, 0x00	; 0

000006c4 <.Loc.148>:
     6c4:	20 62       	ori	r18, 0x20	; 32
     6c6:	fc 01       	movw	r30, r24
     6c8:	20 83       	st	Z, r18

000006ca <.Loc.149>:
    DDRB |= (1<<PB0);  //53, links leds
     6ca:	84 e2       	ldi	r24, 0x24	; 36
     6cc:	90 e0       	ldi	r25, 0x00	; 0
     6ce:	fc 01       	movw	r30, r24
     6d0:	20 81       	ld	r18, Z
     6d2:	84 e2       	ldi	r24, 0x24	; 36
     6d4:	90 e0       	ldi	r25, 0x00	; 0

000006d6 <.Loc.150>:
     6d6:	21 60       	ori	r18, 0x01	; 1
     6d8:	fc 01       	movw	r30, r24
     6da:	20 83       	st	Z, r18

000006dc <.Loc.151>:
    PORTB &= ~(1<<PB0);
     6dc:	85 e2       	ldi	r24, 0x25	; 37
     6de:	90 e0       	ldi	r25, 0x00	; 0
     6e0:	fc 01       	movw	r30, r24
     6e2:	20 81       	ld	r18, Z

000006e4 <.Loc.152>:
     6e4:	85 e2       	ldi	r24, 0x25	; 37
     6e6:	90 e0       	ldi	r25, 0x00	; 0

000006e8 <.Loc.153>:
     6e8:	2e 7f       	andi	r18, 0xFE	; 254
     6ea:	fc 01       	movw	r30, r24
     6ec:	20 83       	st	Z, r18

000006ee <.Loc.154>:
    DDRB |= (1<<PB1);   //52, leds rechts
     6ee:	84 e2       	ldi	r24, 0x24	; 36
     6f0:	90 e0       	ldi	r25, 0x00	; 0
     6f2:	fc 01       	movw	r30, r24
     6f4:	20 81       	ld	r18, Z
     6f6:	84 e2       	ldi	r24, 0x24	; 36
     6f8:	90 e0       	ldi	r25, 0x00	; 0

000006fa <.Loc.155>:
     6fa:	22 60       	ori	r18, 0x02	; 2
     6fc:	fc 01       	movw	r30, r24
     6fe:	20 83       	st	Z, r18

00000700 <.Loc.156>:
    PORTB &= ~(1<<PB1);
     700:	85 e2       	ldi	r24, 0x25	; 37
     702:	90 e0       	ldi	r25, 0x00	; 0
     704:	fc 01       	movw	r30, r24
     706:	20 81       	ld	r18, Z

00000708 <.Loc.157>:
     708:	85 e2       	ldi	r24, 0x25	; 37
     70a:	90 e0       	ldi	r25, 0x00	; 0

0000070c <.Loc.158>:
     70c:	2d 7f       	andi	r18, 0xFD	; 253
     70e:	fc 01       	movw	r30, r24
     710:	20 83       	st	Z, r18

00000712 <.Loc.159>:
}
     712:	00 00       	nop
     714:	df 91       	pop	r29
     716:	cf 91       	pop	r28
     718:	08 95       	ret

0000071a <__vector_35>:

ISR(TIMER3_OVF_vect)
{
     71a:	1f 92       	push	r1
     71c:	0f 92       	push	r0
     71e:	0f b6       	in	r0, 0x3f	; 63
     720:	0f 92       	push	r0
     722:	11 24       	eor	r1, r1
     724:	0b b6       	in	r0, 0x3b	; 59
     726:	0f 92       	push	r0
     728:	2f 93       	push	r18
     72a:	3f 93       	push	r19
     72c:	8f 93       	push	r24
     72e:	9f 93       	push	r25
     730:	ef 93       	push	r30
     732:	ff 93       	push	r31
     734:	cf 93       	push	r28
     736:	df 93       	push	r29
     738:	cd b7       	in	r28, 0x3d	; 61
     73a:	de b7       	in	r29, 0x3e	; 62

0000073c <.Loc.161>:
    random1 = 1;
     73c:	81 e0       	ldi	r24, 0x01	; 1
     73e:	90 e0       	ldi	r25, 0x00	; 0
     740:	90 93 01 02 	sts	0x0201, r25	; 0x800201 <random1+0x1>
     744:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <random1>

00000748 <.Loc.162>:
    random2 = 1;
     748:	81 e0       	ldi	r24, 0x01	; 1
     74a:	90 e0       	ldi	r25, 0x00	; 0
     74c:	90 93 03 02 	sts	0x0203, r25	; 0x800203 <random2+0x1>
     750:	80 93 02 02 	sts	0x0202, r24	; 0x800202 <random2>

00000754 <.Loc.163>:
    TCNT3 = RESET;
     754:	84 e9       	ldi	r24, 0x94	; 148
     756:	90 e0       	ldi	r25, 0x00	; 0

00000758 <.Loc.164>:
     758:	26 ee       	ldi	r18, 0xE6	; 230
     75a:	36 e8       	ldi	r19, 0x86	; 134
     75c:	fc 01       	movw	r30, r24
     75e:	31 83       	std	Z+1, r19	; 0x01
     760:	20 83       	st	Z, r18

00000762 <.Loc.165>:
    TCCR3B = 0;
     762:	81 e9       	ldi	r24, 0x91	; 145
     764:	90 e0       	ldi	r25, 0x00	; 0

00000766 <.Loc.166>:
     766:	fc 01       	movw	r30, r24
     768:	10 82       	st	Z, r1

0000076a <.Loc.167>:
}
     76a:	00 00       	nop
     76c:	df 91       	pop	r29
     76e:	cf 91       	pop	r28
     770:	ff 91       	pop	r31
     772:	ef 91       	pop	r30
     774:	9f 91       	pop	r25
     776:	8f 91       	pop	r24
     778:	3f 91       	pop	r19
     77a:	2f 91       	pop	r18
     77c:	0f 90       	pop	r0
     77e:	0b be       	out	0x3b, r0	; 59
     780:	0f 90       	pop	r0
     782:	0f be       	out	0x3f, r0	; 63
     784:	0f 90       	pop	r0
     786:	1f 90       	pop	r1
     788:	18 95       	reti

0000078a <sensoren>:

void sensoren()
{
     78a:	cf 93       	push	r28
     78c:	df 93       	push	r29
     78e:	cd b7       	in	r28, 0x3d	; 61
     790:	de b7       	in	r29, 0x3e	; 62

00000792 <.Loc.169>:
        if ((PINF & (1<<PF0))==0)       //beide zijkanten checken, rechtdoor
     792:	8f e2       	ldi	r24, 0x2F	; 47
     794:	90 e0       	ldi	r25, 0x00	; 0
     796:	fc 01       	movw	r30, r24
     798:	80 81       	ld	r24, Z

0000079a <.Loc.170>:
     79a:	88 2f       	mov	r24, r24
     79c:	90 e0       	ldi	r25, 0x00	; 0
     79e:	81 70       	andi	r24, 0x01	; 1
     7a0:	99 27       	eor	r25, r25

000007a2 <.Loc.171>:
     7a2:	00 97       	sbiw	r24, 0x00	; 0
     7a4:	81 f4       	brne	.+32     	; 0x7c6 <.L27>

000007a6 <.Loc.172>:
        {
        if ((PINF & (1<<PF1))==0)
     7a6:	8f e2       	ldi	r24, 0x2F	; 47
     7a8:	90 e0       	ldi	r25, 0x00	; 0
     7aa:	fc 01       	movw	r30, r24
     7ac:	80 81       	ld	r24, Z

000007ae <.Loc.173>:
     7ae:	88 2f       	mov	r24, r24
     7b0:	90 e0       	ldi	r25, 0x00	; 0
     7b2:	82 70       	andi	r24, 0x02	; 2
     7b4:	99 27       	eor	r25, r25

000007b6 <.Loc.174>:
     7b6:	00 97       	sbiw	r24, 0x00	; 0
     7b8:	31 f4       	brne	.+12     	; 0x7c6 <.L27>

000007ba <.Loc.175>:
        {
            state = 1;
     7ba:	81 e0       	ldi	r24, 0x01	; 1
     7bc:	90 e0       	ldi	r25, 0x00	; 0
     7be:	90 93 05 02 	sts	0x0205, r25	; 0x800205 <state+0x1>
     7c2:	80 93 04 02 	sts	0x0204, r24	; 0x800204 <state>

000007c6 <.L27>:
        }
        }
        if (PINF & (1<<PF0))                   //links checken, rechts corigeren
     7c6:	8f e2       	ldi	r24, 0x2F	; 47
     7c8:	90 e0       	ldi	r25, 0x00	; 0
     7ca:	fc 01       	movw	r30, r24
     7cc:	80 81       	ld	r24, Z

000007ce <.Loc.177>:
     7ce:	88 2f       	mov	r24, r24
     7d0:	90 e0       	ldi	r25, 0x00	; 0
     7d2:	81 70       	andi	r24, 0x01	; 1
     7d4:	99 27       	eor	r25, r25

000007d6 <.Loc.178>:
     7d6:	00 97       	sbiw	r24, 0x00	; 0
     7d8:	31 f0       	breq	.+12     	; 0x7e6 <.L28>

000007da <.Loc.179>:
        {
            state = 5;
     7da:	85 e0       	ldi	r24, 0x05	; 5
     7dc:	90 e0       	ldi	r25, 0x00	; 0
     7de:	90 93 05 02 	sts	0x0205, r25	; 0x800205 <state+0x1>
     7e2:	80 93 04 02 	sts	0x0204, r24	; 0x800204 <state>

000007e6 <.L28>:
        }
        if (PINF & (1<<PF1))                    //rechts checken, links corigeren
     7e6:	8f e2       	ldi	r24, 0x2F	; 47
     7e8:	90 e0       	ldi	r25, 0x00	; 0
     7ea:	fc 01       	movw	r30, r24
     7ec:	80 81       	ld	r24, Z

000007ee <.Loc.181>:
     7ee:	88 2f       	mov	r24, r24
     7f0:	90 e0       	ldi	r25, 0x00	; 0
     7f2:	82 70       	andi	r24, 0x02	; 2
     7f4:	99 27       	eor	r25, r25

000007f6 <.Loc.182>:
     7f6:	00 97       	sbiw	r24, 0x00	; 0
     7f8:	31 f0       	breq	.+12     	; 0x806 <.L29>

000007fa <.Loc.183>:
        {
            state = 4;
     7fa:	84 e0       	ldi	r24, 0x04	; 4
     7fc:	90 e0       	ldi	r25, 0x00	; 0
     7fe:	90 93 05 02 	sts	0x0205, r25	; 0x800205 <state+0x1>
     802:	80 93 04 02 	sts	0x0204, r24	; 0x800204 <state>

00000806 <.L29>:
        }
            if (PINF & (1<<PF5)==0)                 //balk checken, grote bocht
     806:	8f e2       	ldi	r24, 0x2F	; 47
     808:	90 e0       	ldi	r25, 0x00	; 0
     80a:	fc 01       	movw	r30, r24
     80c:	80 81       	ld	r24, Z

0000080e <.Loc.185>:
        {
        state = 3;
        }


}
     80e:	00 00       	nop
     810:	df 91       	pop	r29
     812:	cf 91       	pop	r28
     814:	08 95       	ret

00000816 <veiligheidsensor>:
void veiligheidsensor()
{
     816:	cf 93       	push	r28
     818:	df 93       	push	r29
     81a:	cd b7       	in	r28, 0x3d	; 61
     81c:	de b7       	in	r29, 0x3e	; 62

0000081e <.Loc.187>:
    if (PINF & (1<<PF4)==0)                        //voren iets, staan stil
     81e:	8f e2       	ldi	r24, 0x2F	; 47
     820:	90 e0       	ldi	r25, 0x00	; 0
     822:	fc 01       	movw	r30, r24
     824:	80 81       	ld	r24, Z

00000826 <.Loc.188>:
        {
            state = 0;
        }
}
     826:	00 00       	nop
     828:	df 91       	pop	r29
     82a:	cf 91       	pop	r28
     82c:	08 95       	ret

0000082e <vroem>:
void vroem()
{
     82e:	cf 93       	push	r28
     830:	df 93       	push	r29
     832:	cd b7       	in	r28, 0x3d	; 61
     834:	de b7       	in	r29, 0x3e	; 62

00000836 <.Loc.190>:
    h_bridge_set_percentage(30);
     836:	8e e1       	ldi	r24, 0x1E	; 30
     838:	0e 94 a3 01 	call	0x346	; 0x346 <h_bridge_set_percentage>

0000083c <.Loc.191>:
}
     83c:	00 00       	nop
     83e:	df 91       	pop	r29
     840:	cf 91       	pop	r28
     842:	08 95       	ret

00000844 <plantsensoraan>:

void plantsensoraan()
{
     844:	cf 93       	push	r28
     846:	df 93       	push	r29
     848:	cd b7       	in	r28, 0x3d	; 61
     84a:	de b7       	in	r29, 0x3e	; 62

0000084c <.Loc.193>:
if(random1 == 1)
     84c:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <random1>
     850:	90 91 01 02 	lds	r25, 0x0201	; 0x800201 <random1+0x1>

00000854 <.Loc.194>:
     854:	81 30       	cpi	r24, 0x01	; 1
     856:	91 05       	cpc	r25, r1
     858:	a1 f4       	brne	.+40     	; 0x882 <.L33>

0000085a <.Loc.195>:
{
if ((PINF & (1<<PF2))==0)                    //bomen rechts, staan stil
     85a:	8f e2       	ldi	r24, 0x2F	; 47
     85c:	90 e0       	ldi	r25, 0x00	; 0
     85e:	fc 01       	movw	r30, r24
     860:	80 81       	ld	r24, Z

00000862 <.Loc.196>:
     862:	88 2f       	mov	r24, r24
     864:	90 e0       	ldi	r25, 0x00	; 0
     866:	84 70       	andi	r24, 0x04	; 4
     868:	99 27       	eor	r25, r25

0000086a <.Loc.197>:
     86a:	00 97       	sbiw	r24, 0x00	; 0
     86c:	51 f4       	brne	.+20     	; 0x882 <.L33>

0000086e <.Loc.198>:
{
state = 2;
     86e:	82 e0       	ldi	r24, 0x02	; 2
     870:	90 e0       	ldi	r25, 0x00	; 0
     872:	90 93 05 02 	sts	0x0205, r25	; 0x800205 <state+0x1>
     876:	80 93 04 02 	sts	0x0204, r24	; 0x800204 <state>

0000087a <.Loc.199>:
random1 = 0;
     87a:	10 92 01 02 	sts	0x0201, r1	; 0x800201 <random1+0x1>
     87e:	10 92 00 02 	sts	0x0200, r1	; 0x800200 <random1>

00000882 <.L33>:
}
}

if (random2 == 1)
     882:	80 91 02 02 	lds	r24, 0x0202	; 0x800202 <random2>
     886:	90 91 03 02 	lds	r25, 0x0203	; 0x800203 <random2+0x1>

0000088a <.Loc.201>:
     88a:	81 30       	cpi	r24, 0x01	; 1
     88c:	91 05       	cpc	r25, r1
     88e:	a1 f4       	brne	.+40     	; 0x8b8 <.L35>

00000890 <.Loc.202>:
{
if ((PINF & (1<<PF3))==0)                    //bomen links, staan stil
     890:	8f e2       	ldi	r24, 0x2F	; 47
     892:	90 e0       	ldi	r25, 0x00	; 0
     894:	fc 01       	movw	r30, r24
     896:	80 81       	ld	r24, Z

00000898 <.Loc.203>:
     898:	88 2f       	mov	r24, r24
     89a:	90 e0       	ldi	r25, 0x00	; 0
     89c:	88 70       	andi	r24, 0x08	; 8
     89e:	99 27       	eor	r25, r25

000008a0 <.Loc.204>:
     8a0:	00 97       	sbiw	r24, 0x00	; 0
     8a2:	51 f4       	brne	.+20     	; 0x8b8 <.L35>

000008a4 <.Loc.205>:
{
state = 2;
     8a4:	82 e0       	ldi	r24, 0x02	; 2
     8a6:	90 e0       	ldi	r25, 0x00	; 0
     8a8:	90 93 05 02 	sts	0x0205, r25	; 0x800205 <state+0x1>
     8ac:	80 93 04 02 	sts	0x0204, r24	; 0x800204 <state>

000008b0 <.Loc.206>:
random2 = 0;
     8b0:	10 92 03 02 	sts	0x0203, r1	; 0x800203 <random2+0x1>
     8b4:	10 92 02 02 	sts	0x0202, r1	; 0x800202 <random2>

000008b8 <.L35>:
}
}
}
     8b8:	00 00       	nop
     8ba:	df 91       	pop	r29
     8bc:	cf 91       	pop	r28
     8be:	08 95       	ret

000008c0 <rem>:


void rem()
{
     8c0:	cf 93       	push	r28
     8c2:	df 93       	push	r29
     8c4:	cd b7       	in	r28, 0x3d	; 61
     8c6:	de b7       	in	r29, 0x3e	; 62

000008c8 <.Loc.209>:
    h_bridge_set_percentage(0);
     8c8:	80 e0       	ldi	r24, 0x00	; 0
     8ca:	0e 94 a3 01 	call	0x346	; 0x346 <h_bridge_set_percentage>

000008ce <.Loc.210>:
}
     8ce:	00 00       	nop
     8d0:	df 91       	pop	r29
     8d2:	cf 91       	pop	r28
     8d4:	08 95       	ret

000008d6 <alarm>:

void alarm()
{
     8d6:	cf 93       	push	r28
     8d8:	df 93       	push	r29
     8da:	cd b7       	in	r28, 0x3d	; 61
     8dc:	de b7       	in	r29, 0x3e	; 62
     8de:	c8 58       	subi	r28, 0x88	; 136
     8e0:	d1 09       	sbc	r29, r1
     8e2:	0f b6       	in	r0, 0x3f	; 63
     8e4:	f8 94       	cli
     8e6:	de bf       	out	0x3e, r29	; 62
     8e8:	0f be       	out	0x3f, r0	; 63
     8ea:	cd bf       	out	0x3d, r28	; 61

000008ec <.Loc.212>:
        PORTB |= (1<<PB0);
     8ec:	85 e2       	ldi	r24, 0x25	; 37
     8ee:	90 e0       	ldi	r25, 0x00	; 0
     8f0:	dc 01       	movw	r26, r24
     8f2:	2c 91       	ld	r18, X
     8f4:	85 e2       	ldi	r24, 0x25	; 37
     8f6:	90 e0       	ldi	r25, 0x00	; 0

000008f8 <.Loc.213>:
     8f8:	21 60       	ori	r18, 0x01	; 1
     8fa:	fc 01       	movw	r30, r24
     8fc:	20 83       	st	Z, r18
     8fe:	80 e0       	ldi	r24, 0x00	; 0
     900:	90 e0       	ldi	r25, 0x00	; 0
     902:	aa ef       	ldi	r26, 0xFA	; 250
     904:	b3 e4       	ldi	r27, 0x43	; 67
     906:	8b a7       	std	Y+43, r24	; 0x2b
     908:	9c a7       	std	Y+44, r25	; 0x2c
     90a:	ad a7       	std	Y+45, r26	; 0x2d
     90c:	be a7       	std	Y+46, r27	; 0x2e

0000090e <.LBB30>:

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     90e:	20 e0       	ldi	r18, 0x00	; 0
     910:	30 e0       	ldi	r19, 0x00	; 0
     912:	4a e7       	ldi	r20, 0x7A	; 122
     914:	55 e4       	ldi	r21, 0x45	; 69
     916:	6b a5       	ldd	r22, Y+43	; 0x2b
     918:	7c a5       	ldd	r23, Y+44	; 0x2c
     91a:	8d a5       	ldd	r24, Y+45	; 0x2d
     91c:	9e a5       	ldd	r25, Y+46	; 0x2e
     91e:	0e 94 9d 09 	call	0x133a	; 0x133a <__mulsf3>
     922:	2d 96       	adiw	r28, 0x0d	; 13
     924:	6c af       	std	Y+60, r22	; 0x3c
     926:	7d af       	std	Y+61, r23	; 0x3d
     928:	8e af       	std	Y+62, r24	; 0x3e
     92a:	9f af       	std	Y+63, r25	; 0x3f
     92c:	2d 97       	sbiw	r28, 0x0d	; 13
     92e:	2d 96       	adiw	r28, 0x0d	; 13
     930:	8c ad       	ldd	r24, Y+60	; 0x3c
     932:	9d ad       	ldd	r25, Y+61	; 0x3d
     934:	ae ad       	ldd	r26, Y+62	; 0x3e
     936:	bf ad       	ldd	r27, Y+63	; 0x3f
     938:	2d 97       	sbiw	r28, 0x0d	; 13
     93a:	8f a7       	std	Y+47, r24	; 0x2f
     93c:	98 ab       	std	Y+48, r25	; 0x30
     93e:	a9 ab       	std	Y+49, r26	; 0x31
     940:	ba ab       	std	Y+50, r27	; 0x32

00000942 <.Loc.215>:
	if (__tmp < 1.0)
     942:	20 e0       	ldi	r18, 0x00	; 0
     944:	30 e0       	ldi	r19, 0x00	; 0
     946:	40 e8       	ldi	r20, 0x80	; 128
     948:	5f e3       	ldi	r21, 0x3F	; 63
     94a:	6f a5       	ldd	r22, Y+47	; 0x2f
     94c:	78 a9       	ldd	r23, Y+48	; 0x30
     94e:	89 a9       	ldd	r24, Y+49	; 0x31
     950:	9a a9       	ldd	r25, Y+50	; 0x32
     952:	0e 94 b2 08 	call	0x1164	; 0x1164 <__cmpsf2>
     956:	88 23       	and	r24, r24
     958:	2c f4       	brge	.+10     	; 0x964 <.L78>

0000095a <.Loc.216>:
		__ticks = 1;
     95a:	81 e0       	ldi	r24, 0x01	; 1
     95c:	90 e0       	ldi	r25, 0x00	; 0
     95e:	9c ab       	std	Y+52, r25	; 0x34
     960:	8b ab       	std	Y+51, r24	; 0x33
     962:	66 c0       	rjmp	.+204    	; 0xa30 <.L40>

00000964 <.L78>:
	else if (__tmp > 65535)
     964:	20 e0       	ldi	r18, 0x00	; 0
     966:	3f ef       	ldi	r19, 0xFF	; 255
     968:	4f e7       	ldi	r20, 0x7F	; 127
     96a:	57 e4       	ldi	r21, 0x47	; 71
     96c:	6f a5       	ldd	r22, Y+47	; 0x2f
     96e:	78 a9       	ldd	r23, Y+48	; 0x30
     970:	89 a9       	ldd	r24, Y+49	; 0x31
     972:	9a a9       	ldd	r25, Y+50	; 0x32
     974:	0e 94 98 09 	call	0x1330	; 0x1330 <__gesf2>
     978:	88 23       	and	r24, r24
     97a:	09 f0       	breq	.+2      	; 0x97e <L0^A>

0000097c <L0^A>:
     97c:	0c f4       	brge	.+2      	; 0x980 <.Loc.218>

0000097e <L0^A>:
     97e:	46 c0       	rjmp	.+140    	; 0xa0c <.L79>

00000980 <.Loc.218>:
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     980:	20 e0       	ldi	r18, 0x00	; 0
     982:	30 e0       	ldi	r19, 0x00	; 0
     984:	40 e2       	ldi	r20, 0x20	; 32
     986:	51 e4       	ldi	r21, 0x41	; 65
     988:	6b a5       	ldd	r22, Y+43	; 0x2b
     98a:	7c a5       	ldd	r23, Y+44	; 0x2c
     98c:	8d a5       	ldd	r24, Y+45	; 0x2d
     98e:	9e a5       	ldd	r25, Y+46	; 0x2e
     990:	0e 94 9d 09 	call	0x133a	; 0x133a <__mulsf3>
     994:	61 96       	adiw	r28, 0x11	; 17
     996:	6c af       	std	Y+60, r22	; 0x3c
     998:	7d af       	std	Y+61, r23	; 0x3d
     99a:	8e af       	std	Y+62, r24	; 0x3e
     99c:	9f af       	std	Y+63, r25	; 0x3f
     99e:	61 97       	sbiw	r28, 0x11	; 17
     9a0:	61 96       	adiw	r28, 0x11	; 17
     9a2:	8c ad       	ldd	r24, Y+60	; 0x3c
     9a4:	9d ad       	ldd	r25, Y+61	; 0x3d
     9a6:	ae ad       	ldd	r26, Y+62	; 0x3e
     9a8:	bf ad       	ldd	r27, Y+63	; 0x3f
     9aa:	61 97       	sbiw	r28, 0x11	; 17
     9ac:	29 96       	adiw	r28, 0x09	; 9
     9ae:	8c af       	std	Y+60, r24	; 0x3c
     9b0:	9d af       	std	Y+61, r25	; 0x3d
     9b2:	ae af       	std	Y+62, r26	; 0x3e
     9b4:	bf af       	std	Y+63, r27	; 0x3f
     9b6:	29 97       	sbiw	r28, 0x09	; 9

000009b8 <.Loc.219>:
     9b8:	29 96       	adiw	r28, 0x09	; 9
     9ba:	6c ad       	ldd	r22, Y+60	; 0x3c
     9bc:	7d ad       	ldd	r23, Y+61	; 0x3d
     9be:	8e ad       	ldd	r24, Y+62	; 0x3e
     9c0:	9f ad       	ldd	r25, Y+63	; 0x3f
     9c2:	29 97       	sbiw	r28, 0x09	; 9
     9c4:	0e 94 b7 08 	call	0x116e	; 0x116e <__fixunssfsi>
     9c8:	65 96       	adiw	r28, 0x15	; 21
     9ca:	6c af       	std	Y+60, r22	; 0x3c
     9cc:	7d af       	std	Y+61, r23	; 0x3d
     9ce:	8e af       	std	Y+62, r24	; 0x3e
     9d0:	9f af       	std	Y+63, r25	; 0x3f
     9d2:	65 97       	sbiw	r28, 0x15	; 21
     9d4:	63 96       	adiw	r28, 0x13	; 19
     9d6:	ae ad       	ldd	r26, Y+62	; 0x3e
     9d8:	bf ad       	ldd	r27, Y+63	; 0x3f
     9da:	63 97       	sbiw	r28, 0x13	; 19
     9dc:	bc ab       	std	Y+52, r27	; 0x34
     9de:	ab ab       	std	Y+51, r26	; 0x33

000009e0 <.Loc.220>:
		while(__ticks)
     9e0:	10 c0       	rjmp	.+32     	; 0xa02 <.L43>

000009e2 <.L44>:
     9e2:	80 e9       	ldi	r24, 0x90	; 144
     9e4:	91 e0       	ldi	r25, 0x01	; 1
     9e6:	9e ab       	std	Y+54, r25	; 0x36
     9e8:	8d ab       	std	Y+53, r24	; 0x35

000009ea <.LBB32>:
		"sbc %B0,__zero_reg__"    "\n\t"
		"brne 1b"
		: "+d" (__count)
	);
#else
	__asm__ volatile (
     9ea:	8d a9       	ldd	r24, Y+53	; 0x35
     9ec:	9e a9       	ldd	r25, Y+54	; 0x36

000009ee <.L1^B1>:
     9ee:	01 97       	sbiw	r24, 0x01	; 1
     9f0:	f1 f7       	brne	.-4      	; 0x9ee <.L1^B1>
     9f2:	9e ab       	std	Y+54, r25	; 0x36
     9f4:	8d ab       	std	Y+53, r24	; 0x35

000009f6 <.Loc.222>:
	...

000009f8 <.LBE32>:
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     9f8:	8b a9       	ldd	r24, Y+51	; 0x33
     9fa:	9c a9       	ldd	r25, Y+52	; 0x34
     9fc:	01 97       	sbiw	r24, 0x01	; 1
     9fe:	9c ab       	std	Y+52, r25	; 0x34
     a00:	8b ab       	std	Y+51, r24	; 0x33

00000a02 <.L43>:
		while(__ticks)
     a02:	8b a9       	ldd	r24, Y+51	; 0x33
     a04:	9c a9       	ldd	r25, Y+52	; 0x34
     a06:	00 97       	sbiw	r24, 0x00	; 0
     a08:	61 f7       	brne	.-40     	; 0x9e2 <.L44>

00000a0a <.Loc.225>:
		}
		return;
     a0a:	1d c0       	rjmp	.+58     	; 0xa46 <.L45>

00000a0c <.L79>:
	}
	else
		__ticks = (uint16_t)__tmp;
     a0c:	6f a5       	ldd	r22, Y+47	; 0x2f
     a0e:	78 a9       	ldd	r23, Y+48	; 0x30
     a10:	89 a9       	ldd	r24, Y+49	; 0x31
     a12:	9a a9       	ldd	r25, Y+50	; 0x32
     a14:	0e 94 b7 08 	call	0x116e	; 0x116e <__fixunssfsi>
     a18:	69 96       	adiw	r28, 0x19	; 25
     a1a:	6c af       	std	Y+60, r22	; 0x3c
     a1c:	7d af       	std	Y+61, r23	; 0x3d
     a1e:	8e af       	std	Y+62, r24	; 0x3e
     a20:	9f af       	std	Y+63, r25	; 0x3f
     a22:	69 97       	sbiw	r28, 0x19	; 25
     a24:	67 96       	adiw	r28, 0x17	; 23
     a26:	ee ad       	ldd	r30, Y+62	; 0x3e
     a28:	ff ad       	ldd	r31, Y+63	; 0x3f
     a2a:	67 97       	sbiw	r28, 0x17	; 23
     a2c:	fc ab       	std	Y+52, r31	; 0x34
     a2e:	eb ab       	std	Y+51, r30	; 0x33

00000a30 <.L40>:
     a30:	8b a9       	ldd	r24, Y+51	; 0x33
     a32:	9c a9       	ldd	r25, Y+52	; 0x34
     a34:	98 af       	std	Y+56, r25	; 0x38
     a36:	8f ab       	std	Y+55, r24	; 0x37

00000a38 <.LBB34>:
     a38:	8f a9       	ldd	r24, Y+55	; 0x37
     a3a:	98 ad       	ldd	r25, Y+56	; 0x38

00000a3c <.L1^B2>:
     a3c:	01 97       	sbiw	r24, 0x01	; 1
     a3e:	f1 f7       	brne	.-4      	; 0xa3c <.L1^B2>
     a40:	98 af       	std	Y+56, r25	; 0x38
     a42:	8f ab       	std	Y+55, r24	; 0x37

00000a44 <.Loc.228>:
	...

00000a46 <.L45>:
        _delay_ms(500);
        PORTB &= ~(1<<PB0);
     a46:	85 e2       	ldi	r24, 0x25	; 37
     a48:	90 e0       	ldi	r25, 0x00	; 0
     a4a:	dc 01       	movw	r26, r24
     a4c:	2c 91       	ld	r18, X

00000a4e <.Loc.230>:
     a4e:	85 e2       	ldi	r24, 0x25	; 37
     a50:	90 e0       	ldi	r25, 0x00	; 0

00000a52 <.Loc.231>:
     a52:	2e 7f       	andi	r18, 0xFE	; 254
     a54:	fc 01       	movw	r30, r24
     a56:	20 83       	st	Z, r18

00000a58 <.Loc.232>:
        PORTB |= (1<<PB1);
     a58:	85 e2       	ldi	r24, 0x25	; 37
     a5a:	90 e0       	ldi	r25, 0x00	; 0
     a5c:	dc 01       	movw	r26, r24
     a5e:	2c 91       	ld	r18, X
     a60:	85 e2       	ldi	r24, 0x25	; 37
     a62:	90 e0       	ldi	r25, 0x00	; 0

00000a64 <.Loc.233>:
     a64:	22 60       	ori	r18, 0x02	; 2
     a66:	fc 01       	movw	r30, r24
     a68:	20 83       	st	Z, r18
     a6a:	80 e0       	ldi	r24, 0x00	; 0
     a6c:	90 e0       	ldi	r25, 0x00	; 0
     a6e:	aa ef       	ldi	r26, 0xFA	; 250
     a70:	b3 e4       	ldi	r27, 0x43	; 67
     a72:	8d 8f       	std	Y+29, r24	; 0x1d
     a74:	9e 8f       	std	Y+30, r25	; 0x1e
     a76:	af 8f       	std	Y+31, r26	; 0x1f
     a78:	b8 a3       	std	Y+32, r27	; 0x20

00000a7a <.LBB36>:
	__tmp = ((F_CPU) / 4e3) * __ms;
     a7a:	20 e0       	ldi	r18, 0x00	; 0
     a7c:	30 e0       	ldi	r19, 0x00	; 0
     a7e:	4a e7       	ldi	r20, 0x7A	; 122
     a80:	55 e4       	ldi	r21, 0x45	; 69
     a82:	6d 8d       	ldd	r22, Y+29	; 0x1d
     a84:	7e 8d       	ldd	r23, Y+30	; 0x1e
     a86:	8f 8d       	ldd	r24, Y+31	; 0x1f
     a88:	98 a1       	ldd	r25, Y+32	; 0x20
     a8a:	0e 94 9d 09 	call	0x133a	; 0x133a <__mulsf3>
     a8e:	6d 96       	adiw	r28, 0x1d	; 29
     a90:	6c af       	std	Y+60, r22	; 0x3c
     a92:	7d af       	std	Y+61, r23	; 0x3d
     a94:	8e af       	std	Y+62, r24	; 0x3e
     a96:	9f af       	std	Y+63, r25	; 0x3f
     a98:	6d 97       	sbiw	r28, 0x1d	; 29
     a9a:	6d 96       	adiw	r28, 0x1d	; 29
     a9c:	8c ad       	ldd	r24, Y+60	; 0x3c
     a9e:	9d ad       	ldd	r25, Y+61	; 0x3d
     aa0:	ae ad       	ldd	r26, Y+62	; 0x3e
     aa2:	bf ad       	ldd	r27, Y+63	; 0x3f
     aa4:	6d 97       	sbiw	r28, 0x1d	; 29
     aa6:	89 a3       	std	Y+33, r24	; 0x21
     aa8:	9a a3       	std	Y+34, r25	; 0x22
     aaa:	ab a3       	std	Y+35, r26	; 0x23
     aac:	bc a3       	std	Y+36, r27	; 0x24

00000aae <.Loc.235>:
	if (__tmp < 1.0)
     aae:	20 e0       	ldi	r18, 0x00	; 0
     ab0:	30 e0       	ldi	r19, 0x00	; 0
     ab2:	40 e8       	ldi	r20, 0x80	; 128
     ab4:	5f e3       	ldi	r21, 0x3F	; 63
     ab6:	69 a1       	ldd	r22, Y+33	; 0x21
     ab8:	7a a1       	ldd	r23, Y+34	; 0x22
     aba:	8b a1       	ldd	r24, Y+35	; 0x23
     abc:	9c a1       	ldd	r25, Y+36	; 0x24
     abe:	0e 94 b2 08 	call	0x1164	; 0x1164 <__cmpsf2>
     ac2:	88 23       	and	r24, r24
     ac4:	2c f4       	brge	.+10     	; 0xad0 <.L80>

00000ac6 <.Loc.236>:
		__ticks = 1;
     ac6:	81 e0       	ldi	r24, 0x01	; 1
     ac8:	90 e0       	ldi	r25, 0x00	; 0
     aca:	9e a3       	std	Y+38, r25	; 0x26
     acc:	8d a3       	std	Y+37, r24	; 0x25
     ace:	66 c0       	rjmp	.+204    	; 0xb9c <.L48>

00000ad0 <.L80>:
	else if (__tmp > 65535)
     ad0:	20 e0       	ldi	r18, 0x00	; 0
     ad2:	3f ef       	ldi	r19, 0xFF	; 255
     ad4:	4f e7       	ldi	r20, 0x7F	; 127
     ad6:	57 e4       	ldi	r21, 0x47	; 71
     ad8:	69 a1       	ldd	r22, Y+33	; 0x21
     ada:	7a a1       	ldd	r23, Y+34	; 0x22
     adc:	8b a1       	ldd	r24, Y+35	; 0x23
     ade:	9c a1       	ldd	r25, Y+36	; 0x24
     ae0:	0e 94 98 09 	call	0x1330	; 0x1330 <__gesf2>
     ae4:	88 23       	and	r24, r24
     ae6:	09 f0       	breq	.+2      	; 0xaea <L0^A>

00000ae8 <L0^A>:
     ae8:	0c f4       	brge	.+2      	; 0xaec <.Loc.238>

00000aea <L0^A>:
     aea:	46 c0       	rjmp	.+140    	; 0xb78 <.L81>

00000aec <.Loc.238>:
		__ticks = (uint16_t) (__ms * 10.0);
     aec:	20 e0       	ldi	r18, 0x00	; 0
     aee:	30 e0       	ldi	r19, 0x00	; 0
     af0:	40 e2       	ldi	r20, 0x20	; 32
     af2:	51 e4       	ldi	r21, 0x41	; 65
     af4:	6d 8d       	ldd	r22, Y+29	; 0x1d
     af6:	7e 8d       	ldd	r23, Y+30	; 0x1e
     af8:	8f 8d       	ldd	r24, Y+31	; 0x1f
     afa:	98 a1       	ldd	r25, Y+32	; 0x20
     afc:	0e 94 9d 09 	call	0x133a	; 0x133a <__mulsf3>
     b00:	a1 96       	adiw	r28, 0x21	; 33
     b02:	6c af       	std	Y+60, r22	; 0x3c
     b04:	7d af       	std	Y+61, r23	; 0x3d
     b06:	8e af       	std	Y+62, r24	; 0x3e
     b08:	9f af       	std	Y+63, r25	; 0x3f
     b0a:	a1 97       	sbiw	r28, 0x21	; 33
     b0c:	a1 96       	adiw	r28, 0x21	; 33
     b0e:	8c ad       	ldd	r24, Y+60	; 0x3c
     b10:	9d ad       	ldd	r25, Y+61	; 0x3d
     b12:	ae ad       	ldd	r26, Y+62	; 0x3e
     b14:	bf ad       	ldd	r27, Y+63	; 0x3f
     b16:	a1 97       	sbiw	r28, 0x21	; 33
     b18:	25 96       	adiw	r28, 0x05	; 5
     b1a:	8c af       	std	Y+60, r24	; 0x3c
     b1c:	9d af       	std	Y+61, r25	; 0x3d
     b1e:	ae af       	std	Y+62, r26	; 0x3e
     b20:	bf af       	std	Y+63, r27	; 0x3f
     b22:	25 97       	sbiw	r28, 0x05	; 5

00000b24 <.Loc.239>:
     b24:	25 96       	adiw	r28, 0x05	; 5
     b26:	6c ad       	ldd	r22, Y+60	; 0x3c
     b28:	7d ad       	ldd	r23, Y+61	; 0x3d
     b2a:	8e ad       	ldd	r24, Y+62	; 0x3e
     b2c:	9f ad       	ldd	r25, Y+63	; 0x3f
     b2e:	25 97       	sbiw	r28, 0x05	; 5
     b30:	0e 94 b7 08 	call	0x116e	; 0x116e <__fixunssfsi>
     b34:	a5 96       	adiw	r28, 0x25	; 37
     b36:	6c af       	std	Y+60, r22	; 0x3c
     b38:	7d af       	std	Y+61, r23	; 0x3d
     b3a:	8e af       	std	Y+62, r24	; 0x3e
     b3c:	9f af       	std	Y+63, r25	; 0x3f
     b3e:	a5 97       	sbiw	r28, 0x25	; 37
     b40:	a3 96       	adiw	r28, 0x23	; 35
     b42:	ae ad       	ldd	r26, Y+62	; 0x3e
     b44:	bf ad       	ldd	r27, Y+63	; 0x3f
     b46:	a3 97       	sbiw	r28, 0x23	; 35
     b48:	be a3       	std	Y+38, r27	; 0x26
     b4a:	ad a3       	std	Y+37, r26	; 0x25

00000b4c <.Loc.240>:
		while(__ticks)
     b4c:	10 c0       	rjmp	.+32     	; 0xb6e <.L51>

00000b4e <.L52>:
     b4e:	80 e9       	ldi	r24, 0x90	; 144
     b50:	91 e0       	ldi	r25, 0x01	; 1
     b52:	98 a7       	std	Y+40, r25	; 0x28
     b54:	8f a3       	std	Y+39, r24	; 0x27

00000b56 <.LBB38>:
     b56:	8f a1       	ldd	r24, Y+39	; 0x27
     b58:	98 a5       	ldd	r25, Y+40	; 0x28

00000b5a <.L1^B3>:
     b5a:	01 97       	sbiw	r24, 0x01	; 1
     b5c:	f1 f7       	brne	.-4      	; 0xb5a <.L1^B3>
     b5e:	98 a7       	std	Y+40, r25	; 0x28
     b60:	8f a3       	std	Y+39, r24	; 0x27

00000b62 <.Loc.242>:
	...

00000b64 <.LBE38>:
			__ticks --;
     b64:	8d a1       	ldd	r24, Y+37	; 0x25
     b66:	9e a1       	ldd	r25, Y+38	; 0x26
     b68:	01 97       	sbiw	r24, 0x01	; 1
     b6a:	9e a3       	std	Y+38, r25	; 0x26
     b6c:	8d a3       	std	Y+37, r24	; 0x25

00000b6e <.L51>:
		while(__ticks)
     b6e:	8d a1       	ldd	r24, Y+37	; 0x25
     b70:	9e a1       	ldd	r25, Y+38	; 0x26
     b72:	00 97       	sbiw	r24, 0x00	; 0
     b74:	61 f7       	brne	.-40     	; 0xb4e <.L52>

00000b76 <.Loc.245>:
		return;
     b76:	1d c0       	rjmp	.+58     	; 0xbb2 <.L53>

00000b78 <.L81>:
		__ticks = (uint16_t)__tmp;
     b78:	69 a1       	ldd	r22, Y+33	; 0x21
     b7a:	7a a1       	ldd	r23, Y+34	; 0x22
     b7c:	8b a1       	ldd	r24, Y+35	; 0x23
     b7e:	9c a1       	ldd	r25, Y+36	; 0x24
     b80:	0e 94 b7 08 	call	0x116e	; 0x116e <__fixunssfsi>
     b84:	a9 96       	adiw	r28, 0x29	; 41
     b86:	6c af       	std	Y+60, r22	; 0x3c
     b88:	7d af       	std	Y+61, r23	; 0x3d
     b8a:	8e af       	std	Y+62, r24	; 0x3e
     b8c:	9f af       	std	Y+63, r25	; 0x3f
     b8e:	a9 97       	sbiw	r28, 0x29	; 41
     b90:	a7 96       	adiw	r28, 0x27	; 39
     b92:	ee ad       	ldd	r30, Y+62	; 0x3e
     b94:	ff ad       	ldd	r31, Y+63	; 0x3f
     b96:	a7 97       	sbiw	r28, 0x27	; 39
     b98:	fe a3       	std	Y+38, r31	; 0x26
     b9a:	ed a3       	std	Y+37, r30	; 0x25

00000b9c <.L48>:
     b9c:	8d a1       	ldd	r24, Y+37	; 0x25
     b9e:	9e a1       	ldd	r25, Y+38	; 0x26
     ba0:	9a a7       	std	Y+42, r25	; 0x2a
     ba2:	89 a7       	std	Y+41, r24	; 0x29

00000ba4 <.LBB40>:
     ba4:	89 a5       	ldd	r24, Y+41	; 0x29
     ba6:	9a a5       	ldd	r25, Y+42	; 0x2a

00000ba8 <.L1^B4>:
     ba8:	01 97       	sbiw	r24, 0x01	; 1
     baa:	f1 f7       	brne	.-4      	; 0xba8 <.L1^B4>
     bac:	9a a7       	std	Y+42, r25	; 0x2a
     bae:	89 a7       	std	Y+41, r24	; 0x29

00000bb0 <.Loc.248>:
	...

00000bb2 <.L53>:
        _delay_ms(500);
        PORTB |= (1<<PB0);
     bb2:	85 e2       	ldi	r24, 0x25	; 37
     bb4:	90 e0       	ldi	r25, 0x00	; 0
     bb6:	dc 01       	movw	r26, r24
     bb8:	2c 91       	ld	r18, X
     bba:	85 e2       	ldi	r24, 0x25	; 37
     bbc:	90 e0       	ldi	r25, 0x00	; 0

00000bbe <.Loc.250>:
     bbe:	21 60       	ori	r18, 0x01	; 1
     bc0:	fc 01       	movw	r30, r24
     bc2:	20 83       	st	Z, r18

00000bc4 <.Loc.251>:
        PORTB &= ~(1<<PB1);
     bc4:	85 e2       	ldi	r24, 0x25	; 37
     bc6:	90 e0       	ldi	r25, 0x00	; 0
     bc8:	dc 01       	movw	r26, r24
     bca:	2c 91       	ld	r18, X

00000bcc <.Loc.252>:
     bcc:	85 e2       	ldi	r24, 0x25	; 37
     bce:	90 e0       	ldi	r25, 0x00	; 0

00000bd0 <.Loc.253>:
     bd0:	2d 7f       	andi	r18, 0xFD	; 253
     bd2:	fc 01       	movw	r30, r24
     bd4:	20 83       	st	Z, r18
     bd6:	80 e0       	ldi	r24, 0x00	; 0
     bd8:	90 e0       	ldi	r25, 0x00	; 0
     bda:	aa ef       	ldi	r26, 0xFA	; 250
     bdc:	b3 e4       	ldi	r27, 0x43	; 67
     bde:	8f 87       	std	Y+15, r24	; 0x0f
     be0:	98 8b       	std	Y+16, r25	; 0x10
     be2:	a9 8b       	std	Y+17, r26	; 0x11
     be4:	ba 8b       	std	Y+18, r27	; 0x12

00000be6 <.LBB42>:
	__tmp = ((F_CPU) / 4e3) * __ms;
     be6:	20 e0       	ldi	r18, 0x00	; 0
     be8:	30 e0       	ldi	r19, 0x00	; 0
     bea:	4a e7       	ldi	r20, 0x7A	; 122
     bec:	55 e4       	ldi	r21, 0x45	; 69
     bee:	6f 85       	ldd	r22, Y+15	; 0x0f
     bf0:	78 89       	ldd	r23, Y+16	; 0x10
     bf2:	89 89       	ldd	r24, Y+17	; 0x11
     bf4:	9a 89       	ldd	r25, Y+18	; 0x12
     bf6:	0e 94 9d 09 	call	0x133a	; 0x133a <__mulsf3>
     bfa:	ad 96       	adiw	r28, 0x2d	; 45
     bfc:	6c af       	std	Y+60, r22	; 0x3c
     bfe:	7d af       	std	Y+61, r23	; 0x3d
     c00:	8e af       	std	Y+62, r24	; 0x3e
     c02:	9f af       	std	Y+63, r25	; 0x3f
     c04:	ad 97       	sbiw	r28, 0x2d	; 45
     c06:	ad 96       	adiw	r28, 0x2d	; 45
     c08:	8c ad       	ldd	r24, Y+60	; 0x3c
     c0a:	9d ad       	ldd	r25, Y+61	; 0x3d
     c0c:	ae ad       	ldd	r26, Y+62	; 0x3e
     c0e:	bf ad       	ldd	r27, Y+63	; 0x3f
     c10:	ad 97       	sbiw	r28, 0x2d	; 45
     c12:	8b 8b       	std	Y+19, r24	; 0x13
     c14:	9c 8b       	std	Y+20, r25	; 0x14
     c16:	ad 8b       	std	Y+21, r26	; 0x15
     c18:	be 8b       	std	Y+22, r27	; 0x16

00000c1a <.Loc.255>:
	if (__tmp < 1.0)
     c1a:	20 e0       	ldi	r18, 0x00	; 0
     c1c:	30 e0       	ldi	r19, 0x00	; 0
     c1e:	40 e8       	ldi	r20, 0x80	; 128
     c20:	5f e3       	ldi	r21, 0x3F	; 63
     c22:	6b 89       	ldd	r22, Y+19	; 0x13
     c24:	7c 89       	ldd	r23, Y+20	; 0x14
     c26:	8d 89       	ldd	r24, Y+21	; 0x15
     c28:	9e 89       	ldd	r25, Y+22	; 0x16
     c2a:	0e 94 b2 08 	call	0x1164	; 0x1164 <__cmpsf2>
     c2e:	88 23       	and	r24, r24
     c30:	2c f4       	brge	.+10     	; 0xc3c <.L82>

00000c32 <.Loc.256>:
		__ticks = 1;
     c32:	81 e0       	ldi	r24, 0x01	; 1
     c34:	90 e0       	ldi	r25, 0x00	; 0
     c36:	98 8f       	std	Y+24, r25	; 0x18
     c38:	8f 8b       	std	Y+23, r24	; 0x17
     c3a:	66 c0       	rjmp	.+204    	; 0xd08 <.L56>

00000c3c <.L82>:
	else if (__tmp > 65535)
     c3c:	20 e0       	ldi	r18, 0x00	; 0
     c3e:	3f ef       	ldi	r19, 0xFF	; 255
     c40:	4f e7       	ldi	r20, 0x7F	; 127
     c42:	57 e4       	ldi	r21, 0x47	; 71
     c44:	6b 89       	ldd	r22, Y+19	; 0x13
     c46:	7c 89       	ldd	r23, Y+20	; 0x14
     c48:	8d 89       	ldd	r24, Y+21	; 0x15
     c4a:	9e 89       	ldd	r25, Y+22	; 0x16
     c4c:	0e 94 98 09 	call	0x1330	; 0x1330 <__gesf2>
     c50:	88 23       	and	r24, r24
     c52:	09 f0       	breq	.+2      	; 0xc56 <L0^A>

00000c54 <L0^A>:
     c54:	0c f4       	brge	.+2      	; 0xc58 <.Loc.258>

00000c56 <L0^A>:
     c56:	46 c0       	rjmp	.+140    	; 0xce4 <.L83>

00000c58 <.Loc.258>:
		__ticks = (uint16_t) (__ms * 10.0);
     c58:	20 e0       	ldi	r18, 0x00	; 0
     c5a:	30 e0       	ldi	r19, 0x00	; 0
     c5c:	40 e2       	ldi	r20, 0x20	; 32
     c5e:	51 e4       	ldi	r21, 0x41	; 65
     c60:	6f 85       	ldd	r22, Y+15	; 0x0f
     c62:	78 89       	ldd	r23, Y+16	; 0x10
     c64:	89 89       	ldd	r24, Y+17	; 0x11
     c66:	9a 89       	ldd	r25, Y+18	; 0x12
     c68:	0e 94 9d 09 	call	0x133a	; 0x133a <__mulsf3>
     c6c:	e1 96       	adiw	r28, 0x31	; 49
     c6e:	6c af       	std	Y+60, r22	; 0x3c
     c70:	7d af       	std	Y+61, r23	; 0x3d
     c72:	8e af       	std	Y+62, r24	; 0x3e
     c74:	9f af       	std	Y+63, r25	; 0x3f
     c76:	e1 97       	sbiw	r28, 0x31	; 49
     c78:	e1 96       	adiw	r28, 0x31	; 49
     c7a:	8c ad       	ldd	r24, Y+60	; 0x3c
     c7c:	9d ad       	ldd	r25, Y+61	; 0x3d
     c7e:	ae ad       	ldd	r26, Y+62	; 0x3e
     c80:	bf ad       	ldd	r27, Y+63	; 0x3f
     c82:	e1 97       	sbiw	r28, 0x31	; 49
     c84:	21 96       	adiw	r28, 0x01	; 1
     c86:	8c af       	std	Y+60, r24	; 0x3c
     c88:	9d af       	std	Y+61, r25	; 0x3d
     c8a:	ae af       	std	Y+62, r26	; 0x3e
     c8c:	bf af       	std	Y+63, r27	; 0x3f
     c8e:	21 97       	sbiw	r28, 0x01	; 1

00000c90 <.Loc.259>:
     c90:	21 96       	adiw	r28, 0x01	; 1
     c92:	6c ad       	ldd	r22, Y+60	; 0x3c
     c94:	7d ad       	ldd	r23, Y+61	; 0x3d
     c96:	8e ad       	ldd	r24, Y+62	; 0x3e
     c98:	9f ad       	ldd	r25, Y+63	; 0x3f
     c9a:	21 97       	sbiw	r28, 0x01	; 1
     c9c:	0e 94 b7 08 	call	0x116e	; 0x116e <__fixunssfsi>
     ca0:	e5 96       	adiw	r28, 0x35	; 53
     ca2:	6c af       	std	Y+60, r22	; 0x3c
     ca4:	7d af       	std	Y+61, r23	; 0x3d
     ca6:	8e af       	std	Y+62, r24	; 0x3e
     ca8:	9f af       	std	Y+63, r25	; 0x3f
     caa:	e5 97       	sbiw	r28, 0x35	; 53
     cac:	e3 96       	adiw	r28, 0x33	; 51
     cae:	ae ad       	ldd	r26, Y+62	; 0x3e
     cb0:	bf ad       	ldd	r27, Y+63	; 0x3f
     cb2:	e3 97       	sbiw	r28, 0x33	; 51
     cb4:	b8 8f       	std	Y+24, r27	; 0x18
     cb6:	af 8b       	std	Y+23, r26	; 0x17

00000cb8 <.Loc.260>:
		while(__ticks)
     cb8:	10 c0       	rjmp	.+32     	; 0xcda <.L59>

00000cba <.L60>:
     cba:	80 e9       	ldi	r24, 0x90	; 144
     cbc:	91 e0       	ldi	r25, 0x01	; 1
     cbe:	9a 8f       	std	Y+26, r25	; 0x1a
     cc0:	89 8f       	std	Y+25, r24	; 0x19

00000cc2 <.LBB44>:
     cc2:	89 8d       	ldd	r24, Y+25	; 0x19
     cc4:	9a 8d       	ldd	r25, Y+26	; 0x1a

00000cc6 <.L1^B5>:
     cc6:	01 97       	sbiw	r24, 0x01	; 1
     cc8:	f1 f7       	brne	.-4      	; 0xcc6 <.L1^B5>
     cca:	9a 8f       	std	Y+26, r25	; 0x1a
     ccc:	89 8f       	std	Y+25, r24	; 0x19

00000cce <.Loc.262>:
	...

00000cd0 <.LBE44>:
			__ticks --;
     cd0:	8f 89       	ldd	r24, Y+23	; 0x17
     cd2:	98 8d       	ldd	r25, Y+24	; 0x18
     cd4:	01 97       	sbiw	r24, 0x01	; 1
     cd6:	98 8f       	std	Y+24, r25	; 0x18
     cd8:	8f 8b       	std	Y+23, r24	; 0x17

00000cda <.L59>:
		while(__ticks)
     cda:	8f 89       	ldd	r24, Y+23	; 0x17
     cdc:	98 8d       	ldd	r25, Y+24	; 0x18
     cde:	00 97       	sbiw	r24, 0x00	; 0
     ce0:	61 f7       	brne	.-40     	; 0xcba <.L60>

00000ce2 <.Loc.265>:
		return;
     ce2:	1d c0       	rjmp	.+58     	; 0xd1e <.L61>

00000ce4 <.L83>:
		__ticks = (uint16_t)__tmp;
     ce4:	6b 89       	ldd	r22, Y+19	; 0x13
     ce6:	7c 89       	ldd	r23, Y+20	; 0x14
     ce8:	8d 89       	ldd	r24, Y+21	; 0x15
     cea:	9e 89       	ldd	r25, Y+22	; 0x16
     cec:	0e 94 b7 08 	call	0x116e	; 0x116e <__fixunssfsi>
     cf0:	e9 96       	adiw	r28, 0x39	; 57
     cf2:	6c af       	std	Y+60, r22	; 0x3c
     cf4:	7d af       	std	Y+61, r23	; 0x3d
     cf6:	8e af       	std	Y+62, r24	; 0x3e
     cf8:	9f af       	std	Y+63, r25	; 0x3f
     cfa:	e9 97       	sbiw	r28, 0x39	; 57
     cfc:	e7 96       	adiw	r28, 0x37	; 55
     cfe:	ee ad       	ldd	r30, Y+62	; 0x3e
     d00:	ff ad       	ldd	r31, Y+63	; 0x3f
     d02:	e7 97       	sbiw	r28, 0x37	; 55
     d04:	f8 8f       	std	Y+24, r31	; 0x18
     d06:	ef 8b       	std	Y+23, r30	; 0x17

00000d08 <.L56>:
     d08:	8f 89       	ldd	r24, Y+23	; 0x17
     d0a:	98 8d       	ldd	r25, Y+24	; 0x18
     d0c:	9c 8f       	std	Y+28, r25	; 0x1c
     d0e:	8b 8f       	std	Y+27, r24	; 0x1b

00000d10 <.LBB46>:
     d10:	8b 8d       	ldd	r24, Y+27	; 0x1b
     d12:	9c 8d       	ldd	r25, Y+28	; 0x1c

00000d14 <.L1^B6>:
     d14:	01 97       	sbiw	r24, 0x01	; 1
     d16:	f1 f7       	brne	.-4      	; 0xd14 <.L1^B6>
     d18:	9c 8f       	std	Y+28, r25	; 0x1c
     d1a:	8b 8f       	std	Y+27, r24	; 0x1b

00000d1c <.Loc.268>:
	...

00000d1e <.L61>:
        _delay_ms(500);
        PORTB &= ~(1<<PB0);
     d1e:	85 e2       	ldi	r24, 0x25	; 37
     d20:	90 e0       	ldi	r25, 0x00	; 0
     d22:	dc 01       	movw	r26, r24
     d24:	2c 91       	ld	r18, X

00000d26 <.Loc.270>:
     d26:	85 e2       	ldi	r24, 0x25	; 37
     d28:	90 e0       	ldi	r25, 0x00	; 0

00000d2a <.Loc.271>:
     d2a:	2e 7f       	andi	r18, 0xFE	; 254
     d2c:	fc 01       	movw	r30, r24
     d2e:	20 83       	st	Z, r18

00000d30 <.Loc.272>:
        PORTB |= (1<<PB1);
     d30:	85 e2       	ldi	r24, 0x25	; 37
     d32:	90 e0       	ldi	r25, 0x00	; 0
     d34:	dc 01       	movw	r26, r24
     d36:	2c 91       	ld	r18, X
     d38:	85 e2       	ldi	r24, 0x25	; 37
     d3a:	90 e0       	ldi	r25, 0x00	; 0

00000d3c <.Loc.273>:
     d3c:	22 60       	ori	r18, 0x02	; 2
     d3e:	fc 01       	movw	r30, r24
     d40:	20 83       	st	Z, r18
     d42:	80 e0       	ldi	r24, 0x00	; 0
     d44:	90 e0       	ldi	r25, 0x00	; 0
     d46:	aa ef       	ldi	r26, 0xFA	; 250
     d48:	b3 e4       	ldi	r27, 0x43	; 67
     d4a:	89 83       	std	Y+1, r24	; 0x01
     d4c:	9a 83       	std	Y+2, r25	; 0x02
     d4e:	ab 83       	std	Y+3, r26	; 0x03
     d50:	bc 83       	std	Y+4, r27	; 0x04

00000d52 <.LBB48>:
	__tmp = ((F_CPU) / 4e3) * __ms;
     d52:	20 e0       	ldi	r18, 0x00	; 0
     d54:	30 e0       	ldi	r19, 0x00	; 0
     d56:	4a e7       	ldi	r20, 0x7A	; 122
     d58:	55 e4       	ldi	r21, 0x45	; 69
     d5a:	69 81       	ldd	r22, Y+1	; 0x01
     d5c:	7a 81       	ldd	r23, Y+2	; 0x02
     d5e:	8b 81       	ldd	r24, Y+3	; 0x03
     d60:	9c 81       	ldd	r25, Y+4	; 0x04
     d62:	0e 94 9d 09 	call	0x133a	; 0x133a <__mulsf3>
     d66:	ed 96       	adiw	r28, 0x3d	; 61
     d68:	6c af       	std	Y+60, r22	; 0x3c
     d6a:	7d af       	std	Y+61, r23	; 0x3d
     d6c:	8e af       	std	Y+62, r24	; 0x3e
     d6e:	9f af       	std	Y+63, r25	; 0x3f
     d70:	ed 97       	sbiw	r28, 0x3d	; 61
     d72:	ed 96       	adiw	r28, 0x3d	; 61
     d74:	8c ad       	ldd	r24, Y+60	; 0x3c
     d76:	9d ad       	ldd	r25, Y+61	; 0x3d
     d78:	ae ad       	ldd	r26, Y+62	; 0x3e
     d7a:	bf ad       	ldd	r27, Y+63	; 0x3f
     d7c:	ed 97       	sbiw	r28, 0x3d	; 61
     d7e:	8d 83       	std	Y+5, r24	; 0x05
     d80:	9e 83       	std	Y+6, r25	; 0x06
     d82:	af 83       	std	Y+7, r26	; 0x07
     d84:	b8 87       	std	Y+8, r27	; 0x08

00000d86 <.Loc.275>:
	if (__tmp < 1.0)
     d86:	20 e0       	ldi	r18, 0x00	; 0
     d88:	30 e0       	ldi	r19, 0x00	; 0
     d8a:	40 e8       	ldi	r20, 0x80	; 128
     d8c:	5f e3       	ldi	r21, 0x3F	; 63
     d8e:	6d 81       	ldd	r22, Y+5	; 0x05
     d90:	7e 81       	ldd	r23, Y+6	; 0x06
     d92:	8f 81       	ldd	r24, Y+7	; 0x07
     d94:	98 85       	ldd	r25, Y+8	; 0x08
     d96:	0e 94 b2 08 	call	0x1164	; 0x1164 <__cmpsf2>
     d9a:	88 23       	and	r24, r24
     d9c:	2c f4       	brge	.+10     	; 0xda8 <.L84>

00000d9e <.Loc.276>:
		__ticks = 1;
     d9e:	81 e0       	ldi	r24, 0x01	; 1
     da0:	90 e0       	ldi	r25, 0x00	; 0
     da2:	9a 87       	std	Y+10, r25	; 0x0a
     da4:	89 87       	std	Y+9, r24	; 0x09
     da6:	6e c0       	rjmp	.+220    	; 0xe84 <.L64>

00000da8 <.L84>:
	else if (__tmp > 65535)
     da8:	20 e0       	ldi	r18, 0x00	; 0
     daa:	3f ef       	ldi	r19, 0xFF	; 255
     dac:	4f e7       	ldi	r20, 0x7F	; 127
     dae:	57 e4       	ldi	r21, 0x47	; 71
     db0:	6d 81       	ldd	r22, Y+5	; 0x05
     db2:	7e 81       	ldd	r23, Y+6	; 0x06
     db4:	8f 81       	ldd	r24, Y+7	; 0x07
     db6:	98 85       	ldd	r25, Y+8	; 0x08
     db8:	0e 94 98 09 	call	0x1330	; 0x1330 <__gesf2>
     dbc:	88 23       	and	r24, r24
     dbe:	09 f0       	breq	.+2      	; 0xdc2 <L0^A>

00000dc0 <L0^A>:
     dc0:	0c f4       	brge	.+2      	; 0xdc4 <.Loc.278>

00000dc2 <L0^A>:
     dc2:	4a c0       	rjmp	.+148    	; 0xe58 <.L85>

00000dc4 <.Loc.278>:
		__ticks = (uint16_t) (__ms * 10.0);
     dc4:	20 e0       	ldi	r18, 0x00	; 0
     dc6:	30 e0       	ldi	r19, 0x00	; 0
     dc8:	40 e2       	ldi	r20, 0x20	; 32
     dca:	51 e4       	ldi	r21, 0x41	; 65
     dcc:	69 81       	ldd	r22, Y+1	; 0x01
     dce:	7a 81       	ldd	r23, Y+2	; 0x02
     dd0:	8b 81       	ldd	r24, Y+3	; 0x03
     dd2:	9c 81       	ldd	r25, Y+4	; 0x04
     dd4:	0e 94 9d 09 	call	0x133a	; 0x133a <__mulsf3>
     dd8:	c3 58       	subi	r28, 0x83	; 131
     dda:	df 4f       	sbci	r29, 0xFF	; 255
     ddc:	68 83       	st	Y, r22
     dde:	79 83       	std	Y+1, r23	; 0x01
     de0:	8a 83       	std	Y+2, r24	; 0x02
     de2:	9b 83       	std	Y+3, r25	; 0x03
     de4:	cd 57       	subi	r28, 0x7D	; 125
     de6:	d0 40       	sbci	r29, 0x00	; 0
     de8:	c3 58       	subi	r28, 0x83	; 131
     dea:	df 4f       	sbci	r29, 0xFF	; 255
     dec:	88 81       	ld	r24, Y
     dee:	99 81       	ldd	r25, Y+1	; 0x01
     df0:	aa 81       	ldd	r26, Y+2	; 0x02
     df2:	bb 81       	ldd	r27, Y+3	; 0x03
     df4:	cd 57       	subi	r28, 0x7D	; 125
     df6:	d0 40       	sbci	r29, 0x00	; 0
     df8:	89 af       	std	Y+57, r24	; 0x39
     dfa:	9a af       	std	Y+58, r25	; 0x3a
     dfc:	ab af       	std	Y+59, r26	; 0x3b
     dfe:	bc af       	std	Y+60, r27	; 0x3c

00000e00 <.Loc.279>:
     e00:	69 ad       	ldd	r22, Y+57	; 0x39
     e02:	7a ad       	ldd	r23, Y+58	; 0x3a
     e04:	8b ad       	ldd	r24, Y+59	; 0x3b
     e06:	9c ad       	ldd	r25, Y+60	; 0x3c
     e08:	0e 94 b7 08 	call	0x116e	; 0x116e <__fixunssfsi>
     e0c:	cf 57       	subi	r28, 0x7F	; 127
     e0e:	df 4f       	sbci	r29, 0xFF	; 255
     e10:	68 83       	st	Y, r22
     e12:	79 83       	std	Y+1, r23	; 0x01
     e14:	8a 83       	std	Y+2, r24	; 0x02
     e16:	9b 83       	std	Y+3, r25	; 0x03
     e18:	c1 58       	subi	r28, 0x81	; 129
     e1a:	d0 40       	sbci	r29, 0x00	; 0
     e1c:	cf 57       	subi	r28, 0x7F	; 127
     e1e:	df 4f       	sbci	r29, 0xFF	; 255
     e20:	a8 81       	ld	r26, Y
     e22:	b9 81       	ldd	r27, Y+1	; 0x01
     e24:	c1 58       	subi	r28, 0x81	; 129
     e26:	d0 40       	sbci	r29, 0x00	; 0
     e28:	ba 87       	std	Y+10, r27	; 0x0a
     e2a:	a9 87       	std	Y+9, r26	; 0x09

00000e2c <.Loc.280>:
		while(__ticks)
     e2c:	10 c0       	rjmp	.+32     	; 0xe4e <.L67>

00000e2e <.L68>:
     e2e:	80 e9       	ldi	r24, 0x90	; 144
     e30:	91 e0       	ldi	r25, 0x01	; 1
     e32:	9c 87       	std	Y+12, r25	; 0x0c
     e34:	8b 87       	std	Y+11, r24	; 0x0b

00000e36 <.LBB50>:
     e36:	8b 85       	ldd	r24, Y+11	; 0x0b
     e38:	9c 85       	ldd	r25, Y+12	; 0x0c

00000e3a <.L1^B7>:
     e3a:	01 97       	sbiw	r24, 0x01	; 1
     e3c:	f1 f7       	brne	.-4      	; 0xe3a <.L1^B7>
     e3e:	9c 87       	std	Y+12, r25	; 0x0c
     e40:	8b 87       	std	Y+11, r24	; 0x0b

00000e42 <.Loc.282>:
	...

00000e44 <.LBE50>:
			__ticks --;
     e44:	89 85       	ldd	r24, Y+9	; 0x09
     e46:	9a 85       	ldd	r25, Y+10	; 0x0a
     e48:	01 97       	sbiw	r24, 0x01	; 1
     e4a:	9a 87       	std	Y+10, r25	; 0x0a
     e4c:	89 87       	std	Y+9, r24	; 0x09

00000e4e <.L67>:
		while(__ticks)
     e4e:	89 85       	ldd	r24, Y+9	; 0x09
     e50:	9a 85       	ldd	r25, Y+10	; 0x0a
     e52:	00 97       	sbiw	r24, 0x00	; 0
     e54:	61 f7       	brne	.-40     	; 0xe2e <.L68>

00000e56 <.Loc.285>:
		return;
     e56:	21 c0       	rjmp	.+66     	; 0xe9a <.L69>

00000e58 <.L85>:
		__ticks = (uint16_t)__tmp;
     e58:	6d 81       	ldd	r22, Y+5	; 0x05
     e5a:	7e 81       	ldd	r23, Y+6	; 0x06
     e5c:	8f 81       	ldd	r24, Y+7	; 0x07
     e5e:	98 85       	ldd	r25, Y+8	; 0x08
     e60:	0e 94 b7 08 	call	0x116e	; 0x116e <__fixunssfsi>
     e64:	cb 57       	subi	r28, 0x7B	; 123
     e66:	df 4f       	sbci	r29, 0xFF	; 255
     e68:	68 83       	st	Y, r22
     e6a:	79 83       	std	Y+1, r23	; 0x01
     e6c:	8a 83       	std	Y+2, r24	; 0x02
     e6e:	9b 83       	std	Y+3, r25	; 0x03
     e70:	c5 58       	subi	r28, 0x85	; 133
     e72:	d0 40       	sbci	r29, 0x00	; 0
     e74:	cb 57       	subi	r28, 0x7B	; 123
     e76:	df 4f       	sbci	r29, 0xFF	; 255
     e78:	e8 81       	ld	r30, Y
     e7a:	f9 81       	ldd	r31, Y+1	; 0x01
     e7c:	c5 58       	subi	r28, 0x85	; 133
     e7e:	d0 40       	sbci	r29, 0x00	; 0
     e80:	fa 87       	std	Y+10, r31	; 0x0a
     e82:	e9 87       	std	Y+9, r30	; 0x09

00000e84 <.L64>:
     e84:	89 85       	ldd	r24, Y+9	; 0x09
     e86:	9a 85       	ldd	r25, Y+10	; 0x0a
     e88:	9e 87       	std	Y+14, r25	; 0x0e
     e8a:	8d 87       	std	Y+13, r24	; 0x0d

00000e8c <.LBB52>:
     e8c:	8d 85       	ldd	r24, Y+13	; 0x0d
     e8e:	9e 85       	ldd	r25, Y+14	; 0x0e

00000e90 <.L1^B8>:
     e90:	01 97       	sbiw	r24, 0x01	; 1
     e92:	f1 f7       	brne	.-4      	; 0xe90 <.L1^B8>
     e94:	9e 87       	std	Y+14, r25	; 0x0e
     e96:	8d 87       	std	Y+13, r24	; 0x0d

00000e98 <.Loc.288>:
	...

00000e9a <.L69>:
        _delay_ms(500);
        PORTB &= ~(1<<PB0);
     e9a:	85 e2       	ldi	r24, 0x25	; 37
     e9c:	90 e0       	ldi	r25, 0x00	; 0
     e9e:	dc 01       	movw	r26, r24
     ea0:	2c 91       	ld	r18, X

00000ea2 <.Loc.290>:
     ea2:	85 e2       	ldi	r24, 0x25	; 37
     ea4:	90 e0       	ldi	r25, 0x00	; 0

00000ea6 <.Loc.291>:
     ea6:	2e 7f       	andi	r18, 0xFE	; 254
     ea8:	fc 01       	movw	r30, r24
     eaa:	20 83       	st	Z, r18

00000eac <.Loc.292>:
        PORTB &= ~(1<<PB1);
     eac:	85 e2       	ldi	r24, 0x25	; 37
     eae:	90 e0       	ldi	r25, 0x00	; 0
     eb0:	dc 01       	movw	r26, r24
     eb2:	2c 91       	ld	r18, X

00000eb4 <.Loc.293>:
     eb4:	85 e2       	ldi	r24, 0x25	; 37
     eb6:	90 e0       	ldi	r25, 0x00	; 0

00000eb8 <.Loc.294>:
     eb8:	2d 7f       	andi	r18, 0xFD	; 253
     eba:	fc 01       	movw	r30, r24
     ebc:	20 83       	st	Z, r18

00000ebe <.Loc.295>:
        TCCR3B |= ((1<<CS32)|(0<<CS31)|(1<<CS30));
     ebe:	81 e9       	ldi	r24, 0x91	; 145
     ec0:	90 e0       	ldi	r25, 0x00	; 0
     ec2:	dc 01       	movw	r26, r24
     ec4:	2c 91       	ld	r18, X
     ec6:	81 e9       	ldi	r24, 0x91	; 145
     ec8:	90 e0       	ldi	r25, 0x00	; 0

00000eca <.Loc.296>:
     eca:	25 60       	ori	r18, 0x05	; 5
     ecc:	fc 01       	movw	r30, r24
     ece:	20 83       	st	Z, r18

00000ed0 <.Loc.297>:
}
     ed0:	00 00       	nop
     ed2:	c8 57       	subi	r28, 0x78	; 120
     ed4:	df 4f       	sbci	r29, 0xFF	; 255
     ed6:	0f b6       	in	r0, 0x3f	; 63
     ed8:	f8 94       	cli
     eda:	de bf       	out	0x3e, r29	; 62
     edc:	0f be       	out	0x3f, r0	; 63
     ede:	cd bf       	out	0x3d, r28	; 61
     ee0:	df 91       	pop	r29
     ee2:	cf 91       	pop	r28
     ee4:	08 95       	ret

00000ee6 <stuurlinks>:

void stuurlinks()
{
     ee6:	cf 93       	push	r28
     ee8:	df 93       	push	r29
     eea:	cd b7       	in	r28, 0x3d	; 61
     eec:	de b7       	in	r29, 0x3e	; 62

00000eee <.Loc.299>:
    servo1_set_percentage(-20);
     eee:	8c ee       	ldi	r24, 0xEC	; 236
     ef0:	0e 94 81 02 	call	0x502	; 0x502 <servo1_set_percentage>

00000ef4 <.Loc.300>:
}
     ef4:	00 00       	nop
     ef6:	df 91       	pop	r29
     ef8:	cf 91       	pop	r28
     efa:	08 95       	ret

00000efc <stuurrechts>:

void stuurrechts()
{
     efc:	cf 93       	push	r28
     efe:	df 93       	push	r29
     f00:	cd b7       	in	r28, 0x3d	; 61
     f02:	de b7       	in	r29, 0x3e	; 62

00000f04 <.Loc.302>:
   servo1_set_percentage(20);
     f04:	84 e1       	ldi	r24, 0x14	; 20
     f06:	0e 94 81 02 	call	0x502	; 0x502 <servo1_set_percentage>

00000f0a <.Loc.303>:
}
     f0a:	00 00       	nop
     f0c:	df 91       	pop	r29
     f0e:	cf 91       	pop	r28
     f10:	08 95       	ret

00000f12 <stuurvooruit>:

void stuurvooruit()
{
     f12:	cf 93       	push	r28
     f14:	df 93       	push	r29
     f16:	cd b7       	in	r28, 0x3d	; 61
     f18:	de b7       	in	r29, 0x3e	; 62

00000f1a <.Loc.305>:
    servo1_set_percentage(0);
     f1a:	80 e0       	ldi	r24, 0x00	; 0
     f1c:	0e 94 81 02 	call	0x502	; 0x502 <servo1_set_percentage>

00000f20 <.Loc.306>:
}
     f20:	00 00       	nop
     f22:	df 91       	pop	r29
     f24:	cf 91       	pop	r28
     f26:	08 95       	ret

00000f28 <grotebocht>:

void grotebocht()
{
     f28:	cf 93       	push	r28
     f2a:	df 93       	push	r29
     f2c:	cd b7       	in	r28, 0x3d	; 61
     f2e:	de b7       	in	r29, 0x3e	; 62

00000f30 <.Loc.308>:

}
     f30:	00 00       	nop
     f32:	df 91       	pop	r29
     f34:	cf 91       	pop	r28
     f36:	08 95       	ret

00000f38 <main>:

int main(void)
{
     f38:	cf 93       	push	r28
     f3a:	df 93       	push	r29
     f3c:	cd b7       	in	r28, 0x3d	; 61
     f3e:	de b7       	in	r29, 0x3e	; 62

00000f40 <.Loc.310>:
    TCCR3A = 0;
     f40:	80 e9       	ldi	r24, 0x90	; 144
     f42:	90 e0       	ldi	r25, 0x00	; 0

00000f44 <.Loc.311>:
     f44:	fc 01       	movw	r30, r24
     f46:	10 82       	st	Z, r1

00000f48 <.Loc.312>:
    TCCR3B = 0;
     f48:	81 e9       	ldi	r24, 0x91	; 145
     f4a:	90 e0       	ldi	r25, 0x00	; 0

00000f4c <.Loc.313>:
     f4c:	fc 01       	movw	r30, r24
     f4e:	10 82       	st	Z, r1

00000f50 <.Loc.314>:
    TIMSK3 |= (1<<TOIE3);
     f50:	81 e7       	ldi	r24, 0x71	; 113
     f52:	90 e0       	ldi	r25, 0x00	; 0
     f54:	fc 01       	movw	r30, r24
     f56:	20 81       	ld	r18, Z
     f58:	81 e7       	ldi	r24, 0x71	; 113
     f5a:	90 e0       	ldi	r25, 0x00	; 0

00000f5c <.Loc.315>:
     f5c:	21 60       	ori	r18, 0x01	; 1
     f5e:	fc 01       	movw	r30, r24
     f60:	20 83       	st	Z, r18

00000f62 <.Loc.316>:
    TCNT3 = RESET;
     f62:	84 e9       	ldi	r24, 0x94	; 148
     f64:	90 e0       	ldi	r25, 0x00	; 0

00000f66 <.Loc.317>:
     f66:	26 ee       	ldi	r18, 0xE6	; 230
     f68:	36 e8       	ldi	r19, 0x86	; 134
     f6a:	fc 01       	movw	r30, r24
     f6c:	31 83       	std	Z+1, r19	; 0x01
     f6e:	20 83       	st	Z, r18

00000f70 <.Loc.318>:

    sei();
     f70:	78 94       	sei

00000f72 <.Loc.319>:
    init_h_bridge();    //d12,13
     f72:	0e 94 60 01 	call	0x2c0	; 0x2c0 <init_h_bridge>

00000f76 <.Loc.320>:
    init_servo();       //d11
     f76:	0e 94 57 02 	call	0x4ae	; 0x4ae <init_servo>

00000f7a <.Loc.321>:
    init();
     f7a:	0e 94 f5 02 	call	0x5ea	; 0x5ea <init>

00000f7e <.L98>:

    {
        //sensoren checken


        switch(state)
     f7e:	80 91 04 02 	lds	r24, 0x0204	; 0x800204 <state>
     f82:	90 91 05 02 	lds	r25, 0x0205	; 0x800205 <state+0x1>
     f86:	85 30       	cpi	r24, 0x05	; 5
     f88:	91 05       	cpc	r25, r1
     f8a:	09 f4       	brne	.+2      	; 0xf8e <L0^A+0x2>

00000f8c <L0^A>:
     f8c:	4c c0       	rjmp	.+152    	; 0x1026 <.L91>
     f8e:	85 30       	cpi	r24, 0x05	; 5
     f90:	91 05       	cpc	r25, r1
     f92:	09 f0       	breq	.+2      	; 0xf96 <L0^A+0x2>

00000f94 <L0^A>:
     f94:	a4 f7       	brge	.-24     	; 0xf7e <.L98>
     f96:	84 30       	cpi	r24, 0x04	; 4
     f98:	91 05       	cpc	r25, r1
     f9a:	e1 f1       	breq	.+120    	; 0x1014 <.L93>
     f9c:	84 30       	cpi	r24, 0x04	; 4
     f9e:	91 05       	cpc	r25, r1
     fa0:	09 f0       	breq	.+2      	; 0xfa4 <L0^A+0x2>

00000fa2 <L0^A>:
     fa2:	6c f7       	brge	.-38     	; 0xf7e <.L98>
     fa4:	83 30       	cpi	r24, 0x03	; 3
     fa6:	91 05       	cpc	r25, r1
     fa8:	71 f1       	breq	.+92     	; 0x1006 <.L94>
     faa:	83 30       	cpi	r24, 0x03	; 3
     fac:	91 05       	cpc	r25, r1
     fae:	09 f0       	breq	.+2      	; 0xfb2 <L0^A+0x2>

00000fb0 <L0^A>:
     fb0:	34 f7       	brge	.-52     	; 0xf7e <.L98>
     fb2:	82 30       	cpi	r24, 0x02	; 2
     fb4:	91 05       	cpc	r25, r1
     fb6:	e1 f0       	breq	.+56     	; 0xff0 <.L95>
     fb8:	82 30       	cpi	r24, 0x02	; 2
     fba:	91 05       	cpc	r25, r1
     fbc:	09 f0       	breq	.+2      	; 0xfc0 <L0^A+0x2>

00000fbe <L0^A>:
     fbe:	fc f6       	brge	.-66     	; 0xf7e <.L98>
     fc0:	00 97       	sbiw	r24, 0x00	; 0
     fc2:	21 f0       	breq	.+8      	; 0xfcc <.L96>
     fc4:	81 30       	cpi	r24, 0x01	; 1
     fc6:	91 05       	cpc	r25, r1
     fc8:	41 f0       	breq	.+16     	; 0xfda <.L97>
     fca:	d9 cf       	rjmp	.-78     	; 0xf7e <.L98>

00000fcc <.L96>:

        {
        case(0):
            rem();
     fcc:	0e 94 60 04 	call	0x8c0	; 0x8c0 <rem>

00000fd0 <.Loc.324>:
            sensoren();
     fd0:	0e 94 c5 03 	call	0x78a	; 0x78a <sensoren>

00000fd4 <.Loc.325>:
            veiligheidsensor();
     fd4:	0e 94 0b 04 	call	0x816	; 0x816 <veiligheidsensor>

00000fd8 <.Loc.326>:
            break;
     fd8:	2f c0       	rjmp	.+94     	; 0x1038 <.L92>

00000fda <.L97>:

        case(1):
            stuurvooruit();
     fda:	0e 94 89 07 	call	0xf12	; 0xf12 <stuurvooruit>

00000fde <.Loc.328>:
            vroem();
     fde:	0e 94 17 04 	call	0x82e	; 0x82e <vroem>

00000fe2 <.Loc.329>:
            sensoren();
     fe2:	0e 94 c5 03 	call	0x78a	; 0x78a <sensoren>

00000fe6 <.Loc.330>:
            plantsensoraan();
     fe6:	0e 94 22 04 	call	0x844	; 0x844 <plantsensoraan>

00000fea <.Loc.331>:
            veiligheidsensor();//zij sensoren en sturen bijhouden
     fea:	0e 94 0b 04 	call	0x816	; 0x816 <veiligheidsensor>

00000fee <.Loc.332>:
            break;
     fee:	24 c0       	rjmp	.+72     	; 0x1038 <.L92>

00000ff0 <.L95>:

        case(2):
            rem();
     ff0:	0e 94 60 04 	call	0x8c0	; 0x8c0 <rem>

00000ff4 <.Loc.334>:
            alarm();
     ff4:	0e 94 6b 04 	call	0x8d6	; 0x8d6 <alarm>

00000ff8 <.Loc.335>:
            vroem();
     ff8:	0e 94 17 04 	call	0x82e	; 0x82e <vroem>

00000ffc <.Loc.336>:
            sensoren();
     ffc:	0e 94 c5 03 	call	0x78a	; 0x78a <sensoren>

00001000 <.Loc.337>:
            veiligheidsensor();
    1000:	0e 94 0b 04 	call	0x816	; 0x816 <veiligheidsensor>

00001004 <.Loc.338>:
            break;
    1004:	19 c0       	rjmp	.+50     	; 0x1038 <.L92>

00001006 <.L94>:

        case(3):
            grotebocht();//bocht
    1006:	0e 94 94 07 	call	0xf28	; 0xf28 <grotebocht>

0000100a <.Loc.340>:
            sensoren();
    100a:	0e 94 c5 03 	call	0x78a	; 0x78a <sensoren>

0000100e <.Loc.341>:
            veiligheidsensor();
    100e:	0e 94 0b 04 	call	0x816	; 0x816 <veiligheidsensor>

00001012 <.Loc.342>:
            break;
    1012:	12 c0       	rjmp	.+36     	; 0x1038 <.L92>

00001014 <.L93>:

        case(4):
            stuurlinks();
    1014:	0e 94 73 07 	call	0xee6	; 0xee6 <stuurlinks>

00001018 <.Loc.344>:
            sensoren();
    1018:	0e 94 c5 03 	call	0x78a	; 0x78a <sensoren>

0000101c <.Loc.345>:
            plantsensoraan();
    101c:	0e 94 22 04 	call	0x844	; 0x844 <plantsensoraan>

00001020 <.Loc.346>:
            veiligheidsensor();
    1020:	0e 94 0b 04 	call	0x816	; 0x816 <veiligheidsensor>

00001024 <.Loc.347>:
            break;
    1024:	09 c0       	rjmp	.+18     	; 0x1038 <.L92>

00001026 <.L91>:

        case(5):
            stuurrechts();
    1026:	0e 94 7e 07 	call	0xefc	; 0xefc <stuurrechts>

0000102a <.Loc.349>:
            sensoren();
    102a:	0e 94 c5 03 	call	0x78a	; 0x78a <sensoren>

0000102e <.Loc.350>:
            plantsensoraan();
    102e:	0e 94 22 04 	call	0x844	; 0x844 <plantsensoraan>

00001032 <.Loc.351>:
            veiligheidsensor();
    1032:	0e 94 0b 04 	call	0x816	; 0x816 <veiligheidsensor>

00001036 <.Loc.352>:
	...

00001038 <.L92>:
        switch(state)
    1038:	a2 cf       	rjmp	.-188    	; 0xf7e <.L98>

0000103a <__divmodhi4>:
    103a:	97 fb       	bst	r25, 7

0000103c <.Loc.1>:
    103c:	07 2e       	mov	r0, r23

0000103e <.Loc.2>:
    103e:	16 f4       	brtc	.+4      	; 0x1044 <.L^B1>

00001040 <.Loc.3>:
    1040:	00 94       	com	r0

00001042 <.Loc.4>:
    1042:	07 d0       	rcall	.+14     	; 0x1052 <__divmodhi4_neg1>

00001044 <.L^B1>:
    1044:	77 fd       	sbrc	r23, 7

00001046 <.Loc.6>:
    1046:	09 d0       	rcall	.+18     	; 0x105a <__divmodhi4_neg2>

00001048 <.Loc.7>:
    1048:	0e 94 31 08 	call	0x1062	; 0x1062 <__udivmodhi4>

0000104c <.Loc.8>:
    104c:	07 fc       	sbrc	r0, 7

0000104e <.Loc.9>:
    104e:	05 d0       	rcall	.+10     	; 0x105a <__divmodhi4_neg2>

00001050 <.Loc.10>:
    1050:	3e f4       	brtc	.+14     	; 0x1060 <__divmodhi4_exit>

00001052 <__divmodhi4_neg1>:
    1052:	90 95       	com	r25

00001054 <.Loc.12>:
    1054:	81 95       	neg	r24

00001056 <.Loc.13>:
    1056:	9f 4f       	sbci	r25, 0xFF	; 255

00001058 <.Loc.14>:
    1058:	08 95       	ret

0000105a <__divmodhi4_neg2>:
    105a:	70 95       	com	r23

0000105c <.Loc.16>:
    105c:	61 95       	neg	r22

0000105e <.Loc.17>:
    105e:	7f 4f       	sbci	r23, 0xFF	; 255

00001060 <__divmodhi4_exit>:
    1060:	08 95       	ret

00001062 <__udivmodhi4>:
    1062:	aa 1b       	sub	r26, r26

00001064 <.Loc.1>:
    1064:	bb 1b       	sub	r27, r27

00001066 <.Loc.2>:
    1066:	51 e1       	ldi	r21, 0x11	; 17

00001068 <.Loc.3>:
    1068:	07 c0       	rjmp	.+14     	; 0x1078 <__udivmodhi4_ep>

0000106a <__udivmodhi4_loop>:
    106a:	aa 1f       	adc	r26, r26

0000106c <.Loc.5>:
    106c:	bb 1f       	adc	r27, r27

0000106e <.Loc.6>:
    106e:	a6 17       	cp	r26, r22

00001070 <.Loc.7>:
    1070:	b7 07       	cpc	r27, r23

00001072 <.Loc.8>:
    1072:	10 f0       	brcs	.+4      	; 0x1078 <__udivmodhi4_ep>

00001074 <.Loc.9>:
    1074:	a6 1b       	sub	r26, r22

00001076 <.Loc.10>:
    1076:	b7 0b       	sbc	r27, r23

00001078 <__udivmodhi4_ep>:
    1078:	88 1f       	adc	r24, r24

0000107a <.Loc.12>:
    107a:	99 1f       	adc	r25, r25

0000107c <.Loc.13>:
    107c:	5a 95       	dec	r21

0000107e <.Loc.14>:
    107e:	a9 f7       	brne	.-22     	; 0x106a <__udivmodhi4_loop>

00001080 <.Loc.15>:
    1080:	80 95       	com	r24

00001082 <.Loc.16>:
    1082:	90 95       	com	r25

00001084 <.Loc.17>:
    1084:	bc 01       	movw	r22, r24

00001086 <.Loc.18>:
    1086:	cd 01       	movw	r24, r26

00001088 <.Loc.19>:
    1088:	08 95       	ret

0000108a <__subsf3>:
    108a:	50 58       	subi	r21, 0x80	; 128

0000108c <__addsf3>:
    108c:	bb 27       	eor	r27, r27
    108e:	aa 27       	eor	r26, r26
    1090:	0e 94 5d 08 	call	0x10ba	; 0x10ba <__addsf3x>
    1094:	0c 94 5e 09 	jmp	0x12bc	; 0x12bc <__fp_round>

00001098 <.L^B1>:
    1098:	0e 94 50 09 	call	0x12a0	; 0x12a0 <__fp_pscA>
    109c:	38 f0       	brcs	.+14     	; 0x10ac <.L_nan>
    109e:	0e 94 57 09 	call	0x12ae	; 0x12ae <__fp_pscB>
    10a2:	20 f0       	brcs	.+8      	; 0x10ac <.L_nan>
    10a4:	39 f4       	brne	.+14     	; 0x10b4 <.L_inf>
    10a6:	9f 3f       	cpi	r25, 0xFF	; 255
    10a8:	19 f4       	brne	.+6      	; 0x10b0 <.L_infB>
    10aa:	26 f4       	brtc	.+8      	; 0x10b4 <.L_inf>

000010ac <.L_nan>:
    10ac:	0c 94 4d 09 	jmp	0x129a	; 0x129a <__fp_nan>

000010b0 <.L_infB>:
    10b0:	0e f4       	brtc	.+2      	; 0x10b4 <.L_inf>
    10b2:	e0 95       	com	r30

000010b4 <.L_inf>:
    10b4:	e7 fb       	bst	r30, 7
    10b6:	0c 94 47 09 	jmp	0x128e	; 0x128e <__fp_inf>

000010ba <__addsf3x>:
    10ba:	e9 2f       	mov	r30, r25
    10bc:	0e 94 6f 09 	call	0x12de	; 0x12de <__fp_split3>
    10c0:	58 f3       	brcs	.-42     	; 0x1098 <.L^B1>
    10c2:	ba 17       	cp	r27, r26
    10c4:	62 07       	cpc	r22, r18
    10c6:	73 07       	cpc	r23, r19
    10c8:	84 07       	cpc	r24, r20
    10ca:	95 07       	cpc	r25, r21
    10cc:	20 f0       	brcs	.+8      	; 0x10d6 <.L2^B1>
    10ce:	79 f4       	brne	.+30     	; 0x10ee <.L4^B1>
    10d0:	a6 f5       	brtc	.+104    	; 0x113a <.L_add>
    10d2:	0c 94 91 09 	jmp	0x1322	; 0x1322 <__fp_zero>

000010d6 <.L2^B1>:
    10d6:	0e f4       	brtc	.+2      	; 0x10da <.L3^B1>
    10d8:	e0 95       	com	r30

000010da <.L3^B1>:
    10da:	0b 2e       	mov	r0, r27
    10dc:	ba 2f       	mov	r27, r26
    10de:	a0 2d       	mov	r26, r0
    10e0:	0b 01       	movw	r0, r22
    10e2:	b9 01       	movw	r22, r18
    10e4:	90 01       	movw	r18, r0
    10e6:	0c 01       	movw	r0, r24
    10e8:	ca 01       	movw	r24, r20
    10ea:	a0 01       	movw	r20, r0
    10ec:	11 24       	eor	r1, r1

000010ee <.L4^B1>:
    10ee:	ff 27       	eor	r31, r31
    10f0:	59 1b       	sub	r21, r25

000010f2 <.L5^B1>:
    10f2:	99 f0       	breq	.+38     	; 0x111a <.L7^B1>
    10f4:	59 3f       	cpi	r21, 0xF9	; 249
    10f6:	50 f4       	brcc	.+20     	; 0x110c <.L6^B1>
    10f8:	50 3e       	cpi	r21, 0xE0	; 224
    10fa:	68 f1       	brcs	.+90     	; 0x1156 <.L_ret>
    10fc:	1a 16       	cp	r1, r26
    10fe:	f0 40       	sbci	r31, 0x00	; 0
    1100:	a2 2f       	mov	r26, r18
    1102:	23 2f       	mov	r18, r19
    1104:	34 2f       	mov	r19, r20
    1106:	44 27       	eor	r20, r20
    1108:	58 5f       	subi	r21, 0xF8	; 248
    110a:	f3 cf       	rjmp	.-26     	; 0x10f2 <.L5^B1>

0000110c <.L6^B1>:
    110c:	46 95       	lsr	r20
    110e:	37 95       	ror	r19
    1110:	27 95       	ror	r18
    1112:	a7 95       	ror	r26
    1114:	f0 40       	sbci	r31, 0x00	; 0
    1116:	53 95       	inc	r21
    1118:	c9 f7       	brne	.-14     	; 0x110c <.L6^B1>

0000111a <.L7^B1>:
    111a:	7e f4       	brtc	.+30     	; 0x113a <.L_add>
    111c:	1f 16       	cp	r1, r31
    111e:	ba 0b       	sbc	r27, r26
    1120:	62 0b       	sbc	r22, r18
    1122:	73 0b       	sbc	r23, r19
    1124:	84 0b       	sbc	r24, r20
    1126:	ba f0       	brmi	.+46     	; 0x1156 <.L_ret>

00001128 <.L8^B1>:
    1128:	91 50       	subi	r25, 0x01	; 1
    112a:	a1 f0       	breq	.+40     	; 0x1154 <.L9^B1>
    112c:	ff 0f       	add	r31, r31
    112e:	bb 1f       	adc	r27, r27
    1130:	66 1f       	adc	r22, r22
    1132:	77 1f       	adc	r23, r23
    1134:	88 1f       	adc	r24, r24
    1136:	c2 f7       	brpl	.-16     	; 0x1128 <.L8^B1>
    1138:	0e c0       	rjmp	.+28     	; 0x1156 <.L_ret>

0000113a <.L_add>:
    113a:	ba 0f       	add	r27, r26
    113c:	62 1f       	adc	r22, r18
    113e:	73 1f       	adc	r23, r19
    1140:	84 1f       	adc	r24, r20
    1142:	48 f4       	brcc	.+18     	; 0x1156 <.L_ret>
    1144:	87 95       	ror	r24
    1146:	77 95       	ror	r23
    1148:	67 95       	ror	r22
    114a:	b7 95       	ror	r27
    114c:	f7 95       	ror	r31
    114e:	9e 3f       	cpi	r25, 0xFE	; 254
    1150:	08 f0       	brcs	.+2      	; 0x1154 <.L9^B1>
    1152:	b0 cf       	rjmp	.-160    	; 0x10b4 <.L_inf>

00001154 <.L9^B1>:
    1154:	93 95       	inc	r25

00001156 <.L_ret>:
    1156:	88 0f       	add	r24, r24
    1158:	08 f0       	brcs	.+2      	; 0x115c <.L1^B1>
    115a:	99 27       	eor	r25, r25

0000115c <.L1^B1>:
    115c:	ee 0f       	add	r30, r30
    115e:	97 95       	ror	r25
    1160:	87 95       	ror	r24
    1162:	08 95       	ret

00001164 <__cmpsf2>:
    1164:	0e 94 23 09 	call	0x1246	; 0x1246 <__fp_cmp>
    1168:	08 f4       	brcc	.+2      	; 0x116c <.L1^B1>
    116a:	81 e0       	ldi	r24, 0x01	; 1

0000116c <.L1^B1>:
    116c:	08 95       	ret

0000116e <__fixunssfsi>:
    116e:	0e 94 77 09 	call	0x12ee	; 0x12ee <__fp_splitA>
    1172:	88 f0       	brcs	.+34     	; 0x1196 <.L_err>
    1174:	9f 57       	subi	r25, 0x7F	; 127
    1176:	98 f0       	brcs	.+38     	; 0x119e <.L_zr>
    1178:	b9 2f       	mov	r27, r25
    117a:	99 27       	eor	r25, r25
    117c:	b7 51       	subi	r27, 0x17	; 23
    117e:	b0 f0       	brcs	.+44     	; 0x11ac <.L4^B1>
    1180:	e1 f0       	breq	.+56     	; 0x11ba <.L_sign>

00001182 <.L1^B1>:
    1182:	66 0f       	add	r22, r22
    1184:	77 1f       	adc	r23, r23
    1186:	88 1f       	adc	r24, r24
    1188:	99 1f       	adc	r25, r25
    118a:	1a f0       	brmi	.+6      	; 0x1192 <.L2^B1>
    118c:	ba 95       	dec	r27
    118e:	c9 f7       	brne	.-14     	; 0x1182 <.L1^B1>
    1190:	14 c0       	rjmp	.+40     	; 0x11ba <.L_sign>

00001192 <.L2^B1>:
    1192:	b1 30       	cpi	r27, 0x01	; 1
    1194:	91 f0       	breq	.+36     	; 0x11ba <.L_sign>

00001196 <.L_err>:
    1196:	0e 94 91 09 	call	0x1322	; 0x1322 <__fp_zero>
    119a:	b1 e0       	ldi	r27, 0x01	; 1
    119c:	08 95       	ret

0000119e <.L_zr>:
    119e:	0c 94 91 09 	jmp	0x1322	; 0x1322 <__fp_zero>

000011a2 <.L3^B1>:
    11a2:	67 2f       	mov	r22, r23
    11a4:	78 2f       	mov	r23, r24
    11a6:	88 27       	eor	r24, r24
    11a8:	b8 5f       	subi	r27, 0xF8	; 248
    11aa:	39 f0       	breq	.+14     	; 0x11ba <.L_sign>

000011ac <.L4^B1>:
    11ac:	b9 3f       	cpi	r27, 0xF9	; 249
    11ae:	cc f3       	brlt	.-14     	; 0x11a2 <.L3^B1>

000011b0 <.L5^B1>:
    11b0:	86 95       	lsr	r24
    11b2:	77 95       	ror	r23
    11b4:	67 95       	ror	r22
    11b6:	b3 95       	inc	r27
    11b8:	d9 f7       	brne	.-10     	; 0x11b0 <.L5^B1>

000011ba <.L_sign>:
    11ba:	3e f4       	brtc	.+14     	; 0x11ca <.L6^B1>
    11bc:	90 95       	com	r25
    11be:	80 95       	com	r24
    11c0:	70 95       	com	r23
    11c2:	61 95       	neg	r22
    11c4:	7f 4f       	sbci	r23, 0xFF	; 255
    11c6:	8f 4f       	sbci	r24, 0xFF	; 255
    11c8:	9f 4f       	sbci	r25, 0xFF	; 255

000011ca <.L6^B1>:
    11ca:	08 95       	ret

000011cc <__floatunsisf>:
    11cc:	e8 94       	clt
    11ce:	09 c0       	rjmp	.+18     	; 0x11e2 <.L1^B1>

000011d0 <__floatsisf>:
    11d0:	97 fb       	bst	r25, 7
    11d2:	3e f4       	brtc	.+14     	; 0x11e2 <.L1^B1>
    11d4:	90 95       	com	r25
    11d6:	80 95       	com	r24
    11d8:	70 95       	com	r23
    11da:	61 95       	neg	r22
    11dc:	7f 4f       	sbci	r23, 0xFF	; 255
    11de:	8f 4f       	sbci	r24, 0xFF	; 255
    11e0:	9f 4f       	sbci	r25, 0xFF	; 255

000011e2 <.L1^B1>:
    11e2:	99 23       	and	r25, r25
    11e4:	a9 f0       	breq	.+42     	; 0x1210 <.L4^B1>
    11e6:	f9 2f       	mov	r31, r25
    11e8:	96 e9       	ldi	r25, 0x96	; 150
    11ea:	bb 27       	eor	r27, r27

000011ec <.L2^B1>:
    11ec:	93 95       	inc	r25
    11ee:	f6 95       	lsr	r31
    11f0:	87 95       	ror	r24
    11f2:	77 95       	ror	r23
    11f4:	67 95       	ror	r22
    11f6:	b7 95       	ror	r27
    11f8:	f1 11       	cpse	r31, r1
    11fa:	f8 cf       	rjmp	.-16     	; 0x11ec <.L2^B1>
    11fc:	fa f4       	brpl	.+62     	; 0x123c <.L_pack>
    11fe:	bb 0f       	add	r27, r27
    1200:	11 f4       	brne	.+4      	; 0x1206 <.L3^B1>
    1202:	60 ff       	sbrs	r22, 0
    1204:	1b c0       	rjmp	.+54     	; 0x123c <.L_pack>

00001206 <.L3^B1>:
    1206:	6f 5f       	subi	r22, 0xFF	; 255
    1208:	7f 4f       	sbci	r23, 0xFF	; 255
    120a:	8f 4f       	sbci	r24, 0xFF	; 255
    120c:	9f 4f       	sbci	r25, 0xFF	; 255
    120e:	16 c0       	rjmp	.+44     	; 0x123c <.L_pack>

00001210 <.L4^B1>:
    1210:	88 23       	and	r24, r24
    1212:	11 f0       	breq	.+4      	; 0x1218 <.L5^B1>
    1214:	96 e9       	ldi	r25, 0x96	; 150
    1216:	11 c0       	rjmp	.+34     	; 0x123a <.L8^B1>

00001218 <.L5^B1>:
    1218:	77 23       	and	r23, r23
    121a:	21 f0       	breq	.+8      	; 0x1224 <.L6^B1>
    121c:	9e e8       	ldi	r25, 0x8E	; 142
    121e:	87 2f       	mov	r24, r23
    1220:	76 2f       	mov	r23, r22
    1222:	05 c0       	rjmp	.+10     	; 0x122e <.L7^B1>

00001224 <.L6^B1>:
    1224:	66 23       	and	r22, r22
    1226:	71 f0       	breq	.+28     	; 0x1244 <.L9^B1>
    1228:	96 e8       	ldi	r25, 0x86	; 134
    122a:	86 2f       	mov	r24, r22
    122c:	70 e0       	ldi	r23, 0x00	; 0

0000122e <.L7^B1>:
    122e:	60 e0       	ldi	r22, 0x00	; 0
    1230:	2a f0       	brmi	.+10     	; 0x123c <.L_pack>

00001232 <.L10^B1>:
    1232:	9a 95       	dec	r25
    1234:	66 0f       	add	r22, r22
    1236:	77 1f       	adc	r23, r23
    1238:	88 1f       	adc	r24, r24

0000123a <.L8^B1>:
    123a:	da f7       	brpl	.-10     	; 0x1232 <.L10^B1>

0000123c <.L_pack>:
    123c:	88 0f       	add	r24, r24
    123e:	96 95       	lsr	r25
    1240:	87 95       	ror	r24
    1242:	97 f9       	bld	r25, 7

00001244 <.L9^B1>:
    1244:	08 95       	ret

00001246 <__fp_cmp>:
    1246:	99 0f       	add	r25, r25
    1248:	00 08       	sbc	r0, r0
    124a:	55 0f       	add	r21, r21
    124c:	aa 0b       	sbc	r26, r26
    124e:	e0 e8       	ldi	r30, 0x80	; 128
    1250:	fe ef       	ldi	r31, 0xFE	; 254
    1252:	16 16       	cp	r1, r22
    1254:	17 06       	cpc	r1, r23
    1256:	e8 07       	cpc	r30, r24
    1258:	f9 07       	cpc	r31, r25
    125a:	c0 f0       	brcs	.+48     	; 0x128c <.L9^B1>
    125c:	12 16       	cp	r1, r18
    125e:	13 06       	cpc	r1, r19
    1260:	e4 07       	cpc	r30, r20
    1262:	f5 07       	cpc	r31, r21
    1264:	98 f0       	brcs	.+38     	; 0x128c <.L9^B1>
    1266:	62 1b       	sub	r22, r18
    1268:	73 0b       	sbc	r23, r19
    126a:	84 0b       	sbc	r24, r20
    126c:	95 0b       	sbc	r25, r21
    126e:	39 f4       	brne	.+14     	; 0x127e <.L1^B1>
    1270:	0a 26       	eor	r0, r26
    1272:	61 f0       	breq	.+24     	; 0x128c <.L9^B1>
    1274:	23 2b       	or	r18, r19
    1276:	24 2b       	or	r18, r20
    1278:	25 2b       	or	r18, r21
    127a:	21 f4       	brne	.+8      	; 0x1284 <.L2^B1>
    127c:	08 95       	ret

0000127e <.L1^B1>:
    127e:	0a 26       	eor	r0, r26
    1280:	09 f4       	brne	.+2      	; 0x1284 <.L2^B1>
    1282:	a1 40       	sbci	r26, 0x01	; 1

00001284 <.L2^B1>:
    1284:	a6 95       	lsr	r26
    1286:	8f ef       	ldi	r24, 0xFF	; 255
    1288:	81 1d       	adc	r24, r1
    128a:	81 1d       	adc	r24, r1

0000128c <.L9^B1>:
    128c:	08 95       	ret

0000128e <__fp_inf>:
    128e:	97 f9       	bld	r25, 7
    1290:	9f 67       	ori	r25, 0x7F	; 127
    1292:	80 e8       	ldi	r24, 0x80	; 128
    1294:	70 e0       	ldi	r23, 0x00	; 0
    1296:	60 e0       	ldi	r22, 0x00	; 0
    1298:	08 95       	ret

0000129a <__fp_nan>:
    129a:	9f ef       	ldi	r25, 0xFF	; 255
    129c:	80 ec       	ldi	r24, 0xC0	; 192
    129e:	08 95       	ret

000012a0 <__fp_pscA>:
    12a0:	00 24       	eor	r0, r0
    12a2:	0a 94       	dec	r0
    12a4:	16 16       	cp	r1, r22
    12a6:	17 06       	cpc	r1, r23
    12a8:	18 06       	cpc	r1, r24
    12aa:	09 06       	cpc	r0, r25
    12ac:	08 95       	ret

000012ae <__fp_pscB>:
    12ae:	00 24       	eor	r0, r0
    12b0:	0a 94       	dec	r0
    12b2:	12 16       	cp	r1, r18
    12b4:	13 06       	cpc	r1, r19
    12b6:	14 06       	cpc	r1, r20
    12b8:	05 06       	cpc	r0, r21
    12ba:	08 95       	ret

000012bc <__fp_round>:
    12bc:	09 2e       	mov	r0, r25
    12be:	03 94       	inc	r0
    12c0:	00 0c       	add	r0, r0
    12c2:	11 f4       	brne	.+4      	; 0x12c8 <.L1^B1>
    12c4:	88 23       	and	r24, r24
    12c6:	52 f0       	brmi	.+20     	; 0x12dc <.L3^B1>

000012c8 <.L1^B1>:
    12c8:	bb 0f       	add	r27, r27
    12ca:	40 f4       	brcc	.+16     	; 0x12dc <.L3^B1>
    12cc:	bf 2b       	or	r27, r31
    12ce:	11 f4       	brne	.+4      	; 0x12d4 <.L2^B1>
    12d0:	60 ff       	sbrs	r22, 0
    12d2:	04 c0       	rjmp	.+8      	; 0x12dc <.L3^B1>

000012d4 <.L2^B1>:
    12d4:	6f 5f       	subi	r22, 0xFF	; 255
    12d6:	7f 4f       	sbci	r23, 0xFF	; 255
    12d8:	8f 4f       	sbci	r24, 0xFF	; 255
    12da:	9f 4f       	sbci	r25, 0xFF	; 255

000012dc <.L3^B1>:
    12dc:	08 95       	ret

000012de <__fp_split3>:
    12de:	57 fd       	sbrc	r21, 7
    12e0:	90 58       	subi	r25, 0x80	; 128
    12e2:	44 0f       	add	r20, r20
    12e4:	55 1f       	adc	r21, r21
    12e6:	59 f0       	breq	.+22     	; 0x12fe <.L4^B1>
    12e8:	5f 3f       	cpi	r21, 0xFF	; 255
    12ea:	71 f0       	breq	.+28     	; 0x1308 <.L5^B1>

000012ec <.L1^B1>:
    12ec:	47 95       	ror	r20

000012ee <__fp_splitA>:
    12ee:	88 0f       	add	r24, r24
    12f0:	97 fb       	bst	r25, 7
    12f2:	99 1f       	adc	r25, r25
    12f4:	61 f0       	breq	.+24     	; 0x130e <.L6^B1>
    12f6:	9f 3f       	cpi	r25, 0xFF	; 255
    12f8:	79 f0       	breq	.+30     	; 0x1318 <.L7^B1>

000012fa <.L3^B1>:
    12fa:	87 95       	ror	r24
    12fc:	08 95       	ret

000012fe <.L4^B1>:
    12fe:	12 16       	cp	r1, r18
    1300:	13 06       	cpc	r1, r19
    1302:	14 06       	cpc	r1, r20
    1304:	55 1f       	adc	r21, r21
    1306:	f2 cf       	rjmp	.-28     	; 0x12ec <.L1^B1>

00001308 <.L5^B1>:
    1308:	46 95       	lsr	r20
    130a:	f1 df       	rcall	.-30     	; 0x12ee <__fp_splitA>
    130c:	08 c0       	rjmp	.+16     	; 0x131e <.L8^B1>

0000130e <.L6^B1>:
    130e:	16 16       	cp	r1, r22
    1310:	17 06       	cpc	r1, r23
    1312:	18 06       	cpc	r1, r24
    1314:	99 1f       	adc	r25, r25
    1316:	f1 cf       	rjmp	.-30     	; 0x12fa <.L3^B1>

00001318 <.L7^B1>:
    1318:	86 95       	lsr	r24
    131a:	71 05       	cpc	r23, r1
    131c:	61 05       	cpc	r22, r1

0000131e <.L8^B1>:
    131e:	08 94       	sec
    1320:	08 95       	ret

00001322 <__fp_zero>:
    1322:	e8 94       	clt

00001324 <__fp_szero>:
    1324:	bb 27       	eor	r27, r27
    1326:	66 27       	eor	r22, r22
    1328:	77 27       	eor	r23, r23
    132a:	cb 01       	movw	r24, r22
    132c:	97 f9       	bld	r25, 7
    132e:	08 95       	ret

00001330 <__gesf2>:
    1330:	0e 94 23 09 	call	0x1246	; 0x1246 <__fp_cmp>
    1334:	08 f4       	brcc	.+2      	; 0x1338 <.L1^B1>
    1336:	8f ef       	ldi	r24, 0xFF	; 255

00001338 <.L1^B1>:
    1338:	08 95       	ret

0000133a <__mulsf3>:
    133a:	0e 94 b0 09 	call	0x1360	; 0x1360 <__mulsf3x>
    133e:	0c 94 5e 09 	jmp	0x12bc	; 0x12bc <__fp_round>

00001342 <.L^B1>:
    1342:	0e 94 50 09 	call	0x12a0	; 0x12a0 <__fp_pscA>
    1346:	38 f0       	brcs	.+14     	; 0x1356 <.L1^B1>
    1348:	0e 94 57 09 	call	0x12ae	; 0x12ae <__fp_pscB>
    134c:	20 f0       	brcs	.+8      	; 0x1356 <.L1^B1>
    134e:	95 23       	and	r25, r21
    1350:	11 f0       	breq	.+4      	; 0x1356 <.L1^B1>
    1352:	0c 94 47 09 	jmp	0x128e	; 0x128e <__fp_inf>

00001356 <.L1^B1>:
    1356:	0c 94 4d 09 	jmp	0x129a	; 0x129a <__fp_nan>

0000135a <.L2^B1>:
    135a:	11 24       	eor	r1, r1
    135c:	0c 94 92 09 	jmp	0x1324	; 0x1324 <__fp_szero>

00001360 <__mulsf3x>:
    1360:	0e 94 6f 09 	call	0x12de	; 0x12de <__fp_split3>
    1364:	70 f3       	brcs	.-36     	; 0x1342 <.L^B1>

00001366 <__mulsf3_pse>:
    1366:	95 9f       	mul	r25, r21
    1368:	c1 f3       	breq	.-16     	; 0x135a <.L2^B1>
    136a:	95 0f       	add	r25, r21
    136c:	50 e0       	ldi	r21, 0x00	; 0
    136e:	55 1f       	adc	r21, r21
    1370:	62 9f       	mul	r22, r18
    1372:	f0 01       	movw	r30, r0
    1374:	72 9f       	mul	r23, r18
    1376:	bb 27       	eor	r27, r27
    1378:	f0 0d       	add	r31, r0
    137a:	b1 1d       	adc	r27, r1
    137c:	63 9f       	mul	r22, r19
    137e:	aa 27       	eor	r26, r26
    1380:	f0 0d       	add	r31, r0
    1382:	b1 1d       	adc	r27, r1
    1384:	aa 1f       	adc	r26, r26
    1386:	64 9f       	mul	r22, r20
    1388:	66 27       	eor	r22, r22
    138a:	b0 0d       	add	r27, r0
    138c:	a1 1d       	adc	r26, r1
    138e:	66 1f       	adc	r22, r22
    1390:	82 9f       	mul	r24, r18
    1392:	22 27       	eor	r18, r18
    1394:	b0 0d       	add	r27, r0
    1396:	a1 1d       	adc	r26, r1
    1398:	62 1f       	adc	r22, r18
    139a:	73 9f       	mul	r23, r19
    139c:	b0 0d       	add	r27, r0
    139e:	a1 1d       	adc	r26, r1
    13a0:	62 1f       	adc	r22, r18
    13a2:	83 9f       	mul	r24, r19
    13a4:	a0 0d       	add	r26, r0
    13a6:	61 1d       	adc	r22, r1
    13a8:	22 1f       	adc	r18, r18
    13aa:	74 9f       	mul	r23, r20
    13ac:	33 27       	eor	r19, r19
    13ae:	a0 0d       	add	r26, r0
    13b0:	61 1d       	adc	r22, r1
    13b2:	23 1f       	adc	r18, r19
    13b4:	84 9f       	mul	r24, r20
    13b6:	60 0d       	add	r22, r0
    13b8:	21 1d       	adc	r18, r1
    13ba:	82 2f       	mov	r24, r18
    13bc:	76 2f       	mov	r23, r22
    13be:	6a 2f       	mov	r22, r26
    13c0:	11 24       	eor	r1, r1
    13c2:	9f 57       	subi	r25, 0x7F	; 127
    13c4:	50 40       	sbci	r21, 0x00	; 0
    13c6:	9a f0       	brmi	.+38     	; 0x13ee <.L13^B1>
    13c8:	f1 f0       	breq	.+60     	; 0x1406 <.L15^B1>

000013ca <.L10^B1>:
    13ca:	88 23       	and	r24, r24
    13cc:	4a f0       	brmi	.+18     	; 0x13e0 <.L11^B1>
    13ce:	ee 0f       	add	r30, r30
    13d0:	ff 1f       	adc	r31, r31
    13d2:	bb 1f       	adc	r27, r27
    13d4:	66 1f       	adc	r22, r22
    13d6:	77 1f       	adc	r23, r23
    13d8:	88 1f       	adc	r24, r24
    13da:	91 50       	subi	r25, 0x01	; 1
    13dc:	50 40       	sbci	r21, 0x00	; 0
    13de:	a9 f7       	brne	.-22     	; 0x13ca <.L10^B1>

000013e0 <.L11^B1>:
    13e0:	9e 3f       	cpi	r25, 0xFE	; 254
    13e2:	51 05       	cpc	r21, r1
    13e4:	80 f0       	brcs	.+32     	; 0x1406 <.L15^B1>
    13e6:	0c 94 47 09 	jmp	0x128e	; 0x128e <__fp_inf>

000013ea <.L12^B1>:
    13ea:	0c 94 92 09 	jmp	0x1324	; 0x1324 <__fp_szero>

000013ee <.L13^B1>:
    13ee:	5f 3f       	cpi	r21, 0xFF	; 255
    13f0:	e4 f3       	brlt	.-8      	; 0x13ea <.L12^B1>
    13f2:	98 3e       	cpi	r25, 0xE8	; 232
    13f4:	d4 f3       	brlt	.-12     	; 0x13ea <.L12^B1>

000013f6 <.L14^B1>:
    13f6:	86 95       	lsr	r24
    13f8:	77 95       	ror	r23
    13fa:	67 95       	ror	r22
    13fc:	b7 95       	ror	r27
    13fe:	f7 95       	ror	r31
    1400:	e7 95       	ror	r30
    1402:	9f 5f       	subi	r25, 0xFF	; 255
    1404:	c1 f7       	brne	.-16     	; 0x13f6 <.L14^B1>

00001406 <.L15^B1>:
    1406:	fe 2b       	or	r31, r30
    1408:	88 0f       	add	r24, r24
    140a:	91 1d       	adc	r25, r1
    140c:	96 95       	lsr	r25
    140e:	87 95       	ror	r24
    1410:	97 f9       	bld	r25, 7
    1412:	08 95       	ret

00001414 <_exit>:
    1414:	f8 94       	cli

00001416 <__stop_program>:
    1416:	ff cf       	rjmp	.-2      	; 0x1416 <__stop_program>
